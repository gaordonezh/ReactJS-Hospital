{"version":3,"file":"static/js/514.00858ec9.chunk.js","mappings":"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","sources":["components/Page.jsx","pages/Equipment/components/ModalDetails.jsx","components/selects/SelectInsumos.jsx","pages/Equipment/components/ModalMaintenance.jsx","pages/Equipment/components/Maintenance.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  FormHelperText,\r\n  Typography,\r\n  Paper,\r\n  Box,\r\n  Divider,\r\n  Grid,\r\n} from \"@mui/material\";\r\n\r\nconst Page = (props) => {\r\n  const { title, helper, itemComponent, children, ...rest } = props;\r\n  return (\r\n    <Box p={1}>\r\n      <Paper {...rest}>\r\n        <Box p={2}>\r\n          <Grid container justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Typography gutterBottom component=\"p\">\r\n                <FormHelperText component=\"span\">\r\n                  {helper && helper.toUpperCase()}\r\n                </FormHelperText>\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                <b>{title}</b>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>{itemComponent}</Grid>\r\n          </Grid>\r\n          <Divider />\r\n          {children}\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Page;\r\n","import React, { Fragment, useRef } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Typography,\r\n  Button,\r\n  FormHelperText,\r\n  Grid,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  RadioGroup,\r\n  Radio,\r\n  List,\r\n  Paper,\r\n  Box,\r\n  Container,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Card,\r\n  CardContent,\r\n} from \"@mui/material\";\r\nimport moment from \"moment-timezone\";\r\nimport Print from \"react-to-print\";\r\nimport PrintIcon from \"@mui/icons-material/Print\";\r\n\r\nconst statusList = [\r\n  \"Bueno\",\r\n  \"Regular\",\r\n  \"Malo por reparar\",\r\n  \"Malo por baja\",\r\n  \"Inoperativo por reparar\",\r\n  \"Inoperativo por baja\",\r\n];\r\nconst listTM = [\"Programado\", \"Imprevisto\"];\r\nconst listOTM = [\"Preventivo\", \"Correctivo\"];\r\nconst listPrioridad = [\"Muy urgente\", \"Urgente\", \"Necesario\"];\r\nconst listTipoAtencion = [\r\n  \"RRHH Propios\",\r\n  \"Servicios mano de obra\",\r\n  \"Servicio a todo costo\",\r\n];\r\nconst listTipoEquipamiento = [\r\n  \"Biomédico\",\r\n  \"Electromecánido\",\r\n  \"Instalaciones\",\r\n  \"Infraestructura\",\r\n];\r\n\r\nconst pageStyle = `\r\n  @page {\r\n    size: auto;\r\n    margin: 5mm;\r\n  }\r\n\r\n  @media print {\r\n    body {\r\n      -webkit-print-color-adjust: exact;\r\n      padding: 29px !important;\r\n    }\r\n    .pagebreak {\r\n      page-break-before: always;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModalDetails = ({ open, setOpen, data, equipment }) => {\r\n  const printPage = useRef(null);\r\n  let ttRecursos = 0;\r\n  let ttRRHH = 0;\r\n\r\n  return (\r\n    <Dialog open={open} onClose={() => setOpen({ open: false })} fullScreen>\r\n      <DialogContent align=\"center\">\r\n        <Print\r\n          trigger={() => (\r\n            <Button variant=\"contained\" color=\"primary\" size=\"large\">\r\n              <PrintIcon />\r\n              IMPRIMIR\r\n            </Button>\r\n          )}\r\n          content={() => printPage.current}\r\n          documentTitle=\"TÍTULO DEL DOCUMENTO\"\r\n          removeAfterPrint={true}\r\n          pageStyle={pageStyle}\r\n        />\r\n        <Container maxWidth=\"md\">\r\n          <Paper variant=\"outlined\">\r\n            <Box p={5}>\r\n              <div ref={printPage}>\r\n                <Title title=\"1. DATOS DEL USUARIO (Ubicación física del equipo)\" />\r\n                <Grid item xs={12}>\r\n                  <Box pl={3}>\r\n                    <Grid container>\r\n                      <Grid item xs={12} md={4}>\r\n                        <Text title=\"Edificio\" value=\"LUGAR\" />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <Text title=\"Nivel\" value=\"LUGAR\" />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <Text title=\"Habitación\" value=\"LUGAR\" />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                </Grid>\r\n\r\n                <Title title=\"2. DATOS DEL BIEN (Equipo, Instalación o Ambiente)\" />\r\n                <Grid item xs={12}>\r\n                  <Box pl={3}>\r\n                    <Grid container>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Text\r\n                          title=\"Nombre del equipo\"\r\n                          value={equipment.name}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Text title=\"Tipo\" value={equipment.type} />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Text\r\n                          title=\"Etiqueta patrimonial\"\r\n                          value={equipment.etiqueta}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Text title=\"Marca\" value={equipment.marca} />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Text title=\"Modelo\" value={equipment.modelo} />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Text title=\"Serie\" value={equipment.serie} />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                </Grid>\r\n\r\n                <Grid container justifyContent=\"flex-end\">\r\n                  {data.programmed ? (\r\n                    <Fragment>\r\n                      <Title title=\"3. DATOS DE LA SOLICITUD\" />\r\n                      <Grid item xs={12}>\r\n                        <Box pl={3}>\r\n                          <Grid container>\r\n                            <Grid item xs={12} sm={12} md={4} lg={6}>\r\n                              <Text\r\n                                title=\"Descripción del problema\"\r\n                                value={data.description}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                              <Text\r\n                                title=\"Fecha de petición\"\r\n                                value={moment(data.date_request).format(\r\n                                  \"DD/MM/YYYY\"\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                              <Text\r\n                                title=\"Fecha de conformidad\"\r\n                                value={moment(data.date_conformidad).format(\r\n                                  \"DD/MM/YYYY\"\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Box>\r\n                      </Grid>\r\n                    </Fragment>\r\n                  ) : null}\r\n                  <Title title=\"4. DATOS DE DIAGNOSTICO Y PROGRAMACIÓN\" />\r\n                  <Grid item xs={12}>\r\n                    <Box pl={3}>\r\n                      <Grid container>\r\n                        <Grid item xs={12}>\r\n                          <Text\r\n                            title=\"Diagnostico de falla\"\r\n                            value={data.diagnostico}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={7} lg={8}>\r\n                          <Text\r\n                            title=\"Ejecutor del mantenimiento\"\r\n                            value={data.ejecutor_mantenimiento}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={5} lg={4}>\r\n                          <Text\r\n                            title=\"Fecha programada\"\r\n                            value={moment(data.date_programmed).format(\r\n                              \"DD/MM/YYYY\"\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <CheckBoxList\r\n                            title=\"Estado inicial\"\r\n                            value={data.status_start}\r\n                            row={true}\r\n                            list={statusList}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <Box pt={1} mb={2}>\r\n                            <Typography variant=\"subtitle2\" color=\"textPrimary\">\r\n                              Tipo de falla\r\n                            </Typography>\r\n                            <FormGroup row>\r\n                              {data.tipo_falla.map((el, index) => (\r\n                                <FormControlLabel\r\n                                  style={{ paddingRight: 5, margin: 0 }}\r\n                                  key={index}\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={el.check}\r\n                                      name={el.label}\r\n                                      style={{ padding: 0, marginRight: 2 }}\r\n                                    />\r\n                                  }\r\n                                  label={\r\n                                    <FormHelperText>{el.label}</FormHelperText>\r\n                                  }\r\n                                />\r\n                              ))}\r\n                            </FormGroup>\r\n                          </Box>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  <Title title=\"5. DATOS GENERALES DE LA ORDEN DEL TRABAJO DE MANTENIMIENTO\" />\r\n                  <Grid item xs={12}>\r\n                    <Box pl={3}>\r\n                      <Grid container>\r\n                        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                          <CheckBoxList\r\n                            title=\"Mantenimiento\"\r\n                            value={data.tipo_mantenimiento}\r\n                            row={false}\r\n                            list={listTM}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                          <CheckBoxList\r\n                            title=\"Tipo de OTM\"\r\n                            value={data.tipo_otm}\r\n                            row={false}\r\n                            list={listOTM}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                          <CheckBoxList\r\n                            title=\"Prioridad\"\r\n                            value={data.prioridad}\r\n                            row={false}\r\n                            list={listPrioridad}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                          <CheckBoxList\r\n                            title=\"Tipo de atención\"\r\n                            value={data.tipo_atencion}\r\n                            row={false}\r\n                            list={listTipoAtencion}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                          <CheckBoxList\r\n                            title=\"Tipo de equipamiento\"\r\n                            value={data.tipo_equipamiento}\r\n                            row={false}\r\n                            list={listTipoEquipamiento}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  <Title title=\"6. DATOS GENERALES DE LA EJECUCIÓN\" />\r\n                  <Grid item xs={12}>\r\n                    <Box pl={3}>\r\n                      <Grid container>\r\n                        <Grid item xs={12}>\r\n                          <List>\r\n                            {data.actividades_list.map((el, index) => (\r\n                              <Text\r\n                                title={`Actividad ${index + 1}`}\r\n                                value={el}\r\n                                key={index}\r\n                              />\r\n                            ))}\r\n                          </List>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                          <FormControlLabel\r\n                            control={<Checkbox checked={data.garantia} />}\r\n                            label=\"Garantía en meses\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                          <FormControlLabel\r\n                            control={<Checkbox checked={data.interrupcion} />}\r\n                            label=\"Interrupción al servicio\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                          <Text\r\n                            title=\"Fecha de inicio\"\r\n                            value={moment(data.datetime_start).format(\r\n                              \"DD/MM/YYYY, hh:mm a\"\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                          <Text\r\n                            title=\"Fecha de finalización\"\r\n                            value={moment(data.datetime_end).format(\r\n                              \"DD/MM/YYYY, hh:mm a\"\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <CheckBoxList\r\n                            title=\"Estado de finalización\"\r\n                            value={data.status_end}\r\n                            row={true}\r\n                            list={statusList}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  <Title title=\"7. DATOS DE LOS REPUESTOS (Partes, accesorios y materiales)\" />\r\n                  <Grid item xs={12}>\r\n                    <Box pl={3} sx={{ mt: 1 }}>\r\n                      <TableContainer>\r\n                        <Table size=\"small\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                N°\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Código\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Tipo\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Nombre y Características\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Unidad medída\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Cantidad\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Valor unitario\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Total\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {data.recursos.map((row, i) => {\r\n                              ttRecursos += Number(row.total);\r\n                              return (\r\n                                <TableRow key={i}>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {i + 1}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.code}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.type}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.name}{\" \"}\r\n                                    <FormHelperText>\r\n                                      {row.caract}\r\n                                    </FormHelperText>\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.und_m}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.cant}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.vlr_u}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.total}\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                            <TableRow>\r\n                              <TableCell align=\"right\" colSpan={7}>\r\n                                <b>TOTAL</b>\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                {ttRecursos}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  <Title title=\"8. DATOS DE LA MANO DE OBRA\" />\r\n                  <Grid item xs={12}>\r\n                    <Box pl={3} sx={{ mt: 1 }}>\r\n                      <TableContainer>\r\n                        <Table size=\"small\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                N°\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Código\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Nombre Completo\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Precio/Hora\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Horas\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Total\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {data.rrhh.map((row, i) => {\r\n                              ttRRHH += Number(row.total);\r\n                              return (\r\n                                <TableRow key={i}>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {i + 1}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.code}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.price_hour}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.hours}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.total}\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                            <TableRow>\r\n                              <TableCell align=\"right\" colSpan={5}>\r\n                                <b>TOTAL</b>\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                {ttRRHH}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  <Title title=\"9. DATOS DE COSTOS TOTALES (S/.)\" />\r\n                  <Grid item xs={12}>\r\n                    <Box pl={3} sx={{ mt: 1 }}>\r\n                      <TableContainer>\r\n                        <Table size=\"small\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell align=\"center\">\r\n                                COSTO DE REPUESTOS\r\n                              </TableCell>\r\n                              <TableCell align=\"center\">\r\n                                COSTO DE MANO DE OBRA\r\n                              </TableCell>\r\n                              <TableCell align=\"center\">\r\n                                COSTOS ADICIONALES\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            <TableRow>\r\n                              <TableCell align=\"center\">\r\n                                S/ {ttRecursos}\r\n                              </TableCell>\r\n                              <TableCell align=\"center\">S/ {ttRRHH}</TableCell>\r\n                              <TableCell align=\"center\">\r\n                                S/ {data.aditional}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                              <TableCell align=\"right\" colSpan={2}>\r\n                                <b>COSTO TOTAL</b>\r\n                              </TableCell>\r\n                              <TableCell align=\"center\">\r\n                                {`S/ ${\r\n                                  ttRecursos + ttRRHH + Number(data.aditional)\r\n                                }`}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Box>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </Box>\r\n          </Paper>\r\n        </Container>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => setOpen({ open: false })}\r\n        >\r\n          SALIR\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalDetails;\r\n\r\nconst Title = ({ title, helper }) => {\r\n  return (\r\n    <Grid item xs={12} style={{ borderBottom: \"1px solid #ccc\" }}>\r\n      <Typography variant=\"subtitle1\">\r\n        <b> {title} </b> {helper}\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst Text = ({ title, value }) => {\r\n  return (\r\n    <Grid container style={{ borderBottom: \"1px solid #eee\" }}>\r\n      <Box mr={1}>\r\n        <Typography variant=\"subtitle2\" color=\"textPrimary\">\r\n          {title}\r\n        </Typography>\r\n      </Box>\r\n      <Typography variant=\"body2\" color=\"textSecondary\">\r\n        {value}\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst CheckBoxList = ({ title, value, row, list }) => {\r\n  return (\r\n    <Box pt={1}>\r\n      <Typography variant=\"subtitle2\" color=\"textPrimary\">\r\n        {title}\r\n      </Typography>\r\n      <RadioGroup row={row} value={value}>\r\n        {list.map((el, index) => (\r\n          <FormControlLabel\r\n            style={{ paddingRight: 5, margin: 0 }}\r\n            key={index}\r\n            value={el}\r\n            control={<Radio style={{ padding: 0, marginRight: 2 }} />}\r\n            label={<FormHelperText>{el}</FormHelperText>}\r\n          />\r\n        ))}\r\n      </RadioGroup>\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Select } from \"antd\";\r\nimport { FormHelperText } from \"@mui/material\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst SelectInsumos = ({ data = [], value, setValue }) => {\r\n  const removeAccents = (str) => {\r\n    return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n  };\r\n\r\n  const filterOptions = (inputValue, option) => {\r\n    const title = removeAccents(option.props.title.toLowerCase());\r\n    return title.includes(inputValue.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      size=\"large\"\r\n      style={{ width: \"100%\" }}\r\n      showSearch\r\n      value={value}\r\n      onChange={setValue}\r\n      filterOption={filterOptions}\r\n    >\r\n      <Option key={null} value={null} title={\"\"}>\r\n        -- Ninguno --\r\n      </Option>\r\n      {data.map((el, index) => (\r\n        <Option\r\n          key={index}\r\n          value={el._id}\r\n          title={`${el.name} ${el.description} ${el.stock}`}\r\n        >\r\n          {el.name}\r\n          {\" » \"}\r\n          <FormHelperText component=\"span\">\r\n            {el.description} ─ stock {el.stock}\r\n          </FormHelperText>\r\n        </Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default SelectInsumos;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Divider,\r\n  FormControl,\r\n  FormGroup,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  RadioGroup,\r\n  Radio,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n  InputAdornment,\r\n  IconButton,\r\n  Container,\r\n  Paper,\r\n  Card,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  CardContent,\r\n} from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { Spin, notification } from \"antd\";\r\nimport { getInsumos, postMaintenances, putMaintenances } from \"requests\";\r\nimport { Box } from \"@mui/system\";\r\nimport SelectInsumos from \"components/selects/SelectInsumos\";\r\n\r\nconst statusList = [\r\n  \"Bueno\",\r\n  \"Regular\",\r\n  \"Malo por reparar\",\r\n  \"Malo por baja\",\r\n  \"Inoperativo por reparar\",\r\n  \"Inoperativo por baja\",\r\n];\r\nconst listTM = [\"Programado\", \"Imprevisto\"];\r\nconst listOTM = [\"Preventivo\", \"Correctivo\"];\r\nconst listPrioridad = [\"Muy urgente\", \"Urgente\", \"Necesario\"];\r\nconst listTipoAtencion = [\r\n  \"RRHH Propios\",\r\n  \"Servicios mano de obra\",\r\n  \"Servicio a todo costo\",\r\n];\r\nconst listTipoEquipamiento = [\r\n  \"Biomédico\",\r\n  \"Electromecánido\",\r\n  \"Instalaciones\",\r\n  \"Infraestructura\",\r\n];\r\nconst listTF = [\r\n  { label: \"Eléctrica\", check: false },\r\n  { label: \"Mecánica\", check: false },\r\n  { label: \"Electrónica\", check: false },\r\n  { label: \"Operación\", check: false },\r\n  { label: \"Otros\", check: false },\r\n];\r\n\r\nconst ModalMaintenance = ({\r\n  open,\r\n  setOpen,\r\n  data,\r\n  equipment,\r\n  refreshFunction,\r\n}) => {\r\n  const flg = Boolean(data);\r\n  const [date, setDate] = useState(\"\");\r\n  const [tipoFalla, setTipoFalla] = useState(flg ? data.tipo_falla : listTF);\r\n  const [insumos, setInsumos] = useState([]);\r\n  const [programmed, setProgrammed] = useState(flg ? data.programmed : false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [statusStart, setStatusStart] = useState(\r\n    flg ? data.status_start : statusList[0]\r\n  );\r\n  const [statusEnd, setStatusEnd] = useState(\r\n    flg ? data.status_end : statusList[0]\r\n  );\r\n  const [tipo_mantenimiento, setTipo_mantenimiento] = useState(\r\n    flg ? data.tipo_mantenimiento : listTM[0]\r\n  );\r\n  const [otm, setOtm] = useState(flg ? data.tipo_otm : listOTM[0]);\r\n  const [prioridad, setPrioridad] = useState(\r\n    flg ? data.prioridad : listPrioridad[0]\r\n  );\r\n  const [tAtencion, setTAtencion] = useState(\r\n    flg ? data.tipo_atencion : listTipoAtencion[0]\r\n  );\r\n  const [tEquipamento, setTEquipamento] = useState(\r\n    flg ? data.tipo_equipamiento : listTipoEquipamiento[0]\r\n  );\r\n  const [actions, setActions] = useState(flg ? data.actividades_list : []);\r\n  const [garantia, setGarantia] = useState(flg ? data.garantia : false);\r\n  const [interrupcion, setInterrupcion] = useState(\r\n    flg ? data.interrupcion : false\r\n  );\r\n  const [rcrss, setRcrss] = useState(flg ? data.recursos : []);\r\n  const [rrhh, setRrhh] = useState(flg ? data.rrhh : []);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const sendRegister = async (items) => {\r\n    setLoading(true);\r\n    try {\r\n      // GENERAL\r\n      items[\"equipment\"] = equipment._id;\r\n      // TRES\r\n      items[\"programmed\"] = programmed;\r\n      items[\"description\"] = items.description;\r\n      items[\"date_request\"] = items.date_request;\r\n      items[\"date_conformidad\"] = items.date_conformidad;\r\n      // CUATRO\r\n      items[\"diagnostico\"] = items.diagnostico;\r\n      items[\"ejecutor_mantenimiento\"] = items.ejecutor_mantenimiento;\r\n      items[\"date_programmed\"] = items.date_programmed;\r\n      items[\"status_start\"] = statusStart;\r\n      items[\"tipo_falla\"] = tipoFalla;\r\n      // CINCO\r\n      items[\"tipo_mantenimiento\"] = tipo_mantenimiento;\r\n      items[\"tipo_otm\"] = otm;\r\n      items[\"prioridad\"] = prioridad;\r\n      items[\"tipo_atencion\"] = tAtencion;\r\n      items[\"tipo_equipamiento\"] = tEquipamento;\r\n      // SEIS\r\n      items[\"actividades_list\"] = actions;\r\n      items[\"garantia\"] = garantia;\r\n      items[\"interrupcion\"] = interrupcion;\r\n      items[\"datetime_start\"] = items.datetime_start;\r\n      items[\"datetime_end\"] = items.datetime_end;\r\n      items[\"status_end\"] = statusEnd;\r\n      if (!flg) items[\"date\"] = date;\r\n      // SIETE\r\n      items[\"recursos\"] = rcrss;\r\n      // OCHO\r\n      items[\"rrhh\"] = rrhh;\r\n\r\n      if (flg) await putMaintenances(items, data._id);\r\n      else await postMaintenances(items);\r\n\r\n      refreshFunction();\r\n\r\n      setOpen({ open: false });\r\n      notification[\"success\"]({\r\n        message: `El mantenimiento se ${\r\n          flg ? \"actualizó\" : \"guardó\"\r\n        } correctamente`,\r\n      });\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Oops!`,\r\n        description: `Ocurrió un error al procesar la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!data) obtainData();\r\n  }, []);\r\n\r\n  const obtainData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await getInsumos();\r\n      let result = res.filter((e) => e.stock >= 0);\r\n      setInsumos(result);\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Ocurrió un error al realizar la operación.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChangeTF = (index) => {\r\n    tipoFalla[index].check = !tipoFalla[index].check;\r\n    setTipoFalla([...tipoFalla]);\r\n  };\r\n\r\n  const handleAddActions = () => {\r\n    actions.push(\"\");\r\n    setActions([...actions]);\r\n  };\r\n\r\n  const handleChangeText = (value, index) => {\r\n    actions[index] = value;\r\n    setActions([...actions]);\r\n  };\r\n\r\n  const handleRemoveAction = (index) => {\r\n    actions.splice(index, 1);\r\n    setActions([...actions]);\r\n  };\r\n\r\n  // RECURSOS\r\n\r\n  const hndRecursos = (value, name, index) => {\r\n    if (name === \"id\") {\r\n      let finder = insumos.find((e) => e._id === value);\r\n      if (finder) {\r\n        rcrss[index].id = value;\r\n        rcrss[index].name = finder.name;\r\n        rcrss[index].caract = finder.description;\r\n        rcrss[index].und_m = finder.u_medida;\r\n        rcrss[index].cant = 1;\r\n        rcrss[index].vlr_u = finder.precio;\r\n        rcrss[index].total = finder.precio;\r\n      }\r\n    } else {\r\n      rcrss[index][name] = value;\r\n    }\r\n    setRcrss([...rcrss]);\r\n  };\r\n\r\n  const hndAddRecursos = () => {\r\n    rcrss.push({\r\n      id: null,\r\n      code: \"\",\r\n      type: \"Ejecutor\",\r\n      name: \"\",\r\n      caract: \"\",\r\n      und_m: \"\",\r\n      cant: \"\",\r\n      vlr_u: \"\",\r\n      total: \"\",\r\n    });\r\n    setRcrss([...rcrss]);\r\n  };\r\n\r\n  const hndRemoveRecursos = (index) => {\r\n    rcrss.splice(index, 1);\r\n    setRcrss([...rcrss]);\r\n  };\r\n\r\n  // RECURSOS HUMANOS\r\n\r\n  const hndRRHH = (value, name, index) => {\r\n    rrhh[index][name] = value;\r\n    setRrhh([...rrhh]);\r\n  };\r\n\r\n  const hndAddRRHH = () => {\r\n    rrhh.push({\r\n      code: \"\",\r\n      name: \"\",\r\n      price_hour: \"\",\r\n      hours: \"\",\r\n      total: \"\",\r\n    });\r\n    setRrhh([...rrhh]);\r\n  };\r\n\r\n  const hndRemoveRRHH = (index) => {\r\n    rrhh.splice(index, 1);\r\n    setRrhh([...rrhh]);\r\n  };\r\n\r\n  console.log(equipment);\r\n\r\n  const view = equipment.dates.filter((e) => e.status).length > 0;\r\n\r\n  return (\r\n    <Dialog open={open} fullScreen>\r\n      <DialogTitle>\r\n        <Typography align=\"center\" variant=\"h5\" component=\"p\">\r\n          <b>{flg ? \"ACTUALIZAR\" : \"REGISTRAR\"} MANTENIMIENTO</b>\r\n        </Typography>\r\n      </DialogTitle>\r\n      <Spin spinning={loading}>\r\n        <form onSubmit={handleSubmit(sendRegister)} autoComplete=\"off\">\r\n          <DialogContent>\r\n            <Container maxWidth=\"lg\">\r\n              <Paper elevation={5}>\r\n                <Box p={5}>\r\n                  <Grid container spacing={2}>\r\n                    {!flg && (\r\n                      <Grid item xs={12}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel>\r\n                            <Typography color={view ? \"text.primary\" : \"error\"}>\r\n                              {view ? (\r\n                                \"FECHA DE MANTENIMIENTO\"\r\n                              ) : (\r\n                                <b>\r\n                                  NO HAY FECHAS DE MANTENIMIENTO REGISTRADAS\r\n                                </b>\r\n                              )}\r\n                            </Typography>\r\n                          </InputLabel>\r\n                          {view && (\r\n                            <Select\r\n                              value={date}\r\n                              onChange={(e) => setDate(e.target.value)}\r\n                            >\r\n                              {equipment.dates.map(\r\n                                (el, i) =>\r\n                                  el.status && (\r\n                                    <MenuItem key={i} value={el.date}>\r\n                                      {el.date}\r\n                                    </MenuItem>\r\n                                  )\r\n                              )}\r\n                            </Select>\r\n                          )}\r\n                        </FormControl>\r\n                      </Grid>\r\n                    )}\r\n                    {(date || flg) && (\r\n                      <Fragment>\r\n                        <Title\r\n                          title=\"3. DATOS DE LA SOLICITUD\"\r\n                          helper={\r\n                            <span>\r\n                              (solo para actividades no programadas){\" \"}\r\n                              <FormControlLabel\r\n                                control={\r\n                                  <Checkbox\r\n                                    checked={programmed}\r\n                                    onChange={(a, b) => setProgrammed(b)}\r\n                                  />\r\n                                }\r\n                                label={programmed ? \"SI\" : \"NO\"}\r\n                              />{\" \"}\r\n                            </span>\r\n                          }\r\n                        />\r\n                        {programmed ? (\r\n                          <Fragment>\r\n                            <Grid item xs={12} sm={12} md={4} lg={6}>\r\n                              <TextField\r\n                                label=\"Descripción del problema\"\r\n                                fullWidth\r\n                                defaultValue={flg ? data.description : \"\"}\r\n                                error={Boolean(errors?.description ?? false)}\r\n                                {...register(\"description\", { required: true })}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                              <TextField\r\n                                label=\"Fecha de petición\"\r\n                                fullWidth\r\n                                type=\"date\"\r\n                                defaultValue={flg ? data.date_request : \"\"}\r\n                                error={Boolean(errors?.date_request ?? false)}\r\n                                {...register(\"date_request\", {\r\n                                  required: false,\r\n                                })}\r\n                                InputLabelProps={{ shrink: true }}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                              <TextField\r\n                                label=\"Fecha de conformidad\"\r\n                                fullWidth\r\n                                type=\"date\"\r\n                                defaultValue={flg ? data.date_conformidad : \"\"}\r\n                                error={Boolean(\r\n                                  errors?.date_conformidad ?? false\r\n                                )}\r\n                                {...register(\"date_conformidad\", {\r\n                                  required: false,\r\n                                })}\r\n                                InputLabelProps={{ shrink: true }}\r\n                              />\r\n                            </Grid>\r\n                          </Fragment>\r\n                        ) : null}\r\n                        <Title title=\"4. DATOS DE DIAGNOSTICO Y PROGRAMACIÓN\" />\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            label=\"Diagnostico de falla\"\r\n                            fullWidth\r\n                            defaultValue={flg ? data.diagnostico : \"\"}\r\n                            error={Boolean(errors?.diagnostico ?? false)}\r\n                            {...register(\"diagnostico\", { required: true })}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={8} lg={9}>\r\n                          <TextField\r\n                            label=\"Ejecutor del mantenimiento\"\r\n                            fullWidth\r\n                            defaultValue={\r\n                              flg ? data.ejecutor_mantenimiento : \"\"\r\n                            }\r\n                            error={Boolean(\r\n                              errors?.ejecutor_mantenimiento ?? false\r\n                            )}\r\n                            {...register(\"ejecutor_mantenimiento\", {\r\n                              required: true,\r\n                            })}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                          <TextField\r\n                            label=\"Fecha programada\"\r\n                            fullWidth\r\n                            type=\"date\"\r\n                            defaultValue={flg ? data.date_programmed : \"\"}\r\n                            error={Boolean(errors?.date_programmed ?? false)}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            {...register(\"date_programmed\", { required: true })}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\">\r\n                              Estado Inicial\r\n                            </FormLabel>\r\n                            <RadioGroup\r\n                              row\r\n                              value={statusStart}\r\n                              onChange={(a, b) => setStatusStart(b)}\r\n                            >\r\n                              {statusList.map((el, index) => (\r\n                                <FormControlLabel\r\n                                  key={index}\r\n                                  value={el}\r\n                                  control={<Radio />}\r\n                                  label={el}\r\n                                />\r\n                              ))}\r\n                            </RadioGroup>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <FormControl component=\"fieldset\" variant=\"standard\">\r\n                            <FormLabel component=\"legend\">\r\n                              Tipo de falla\r\n                            </FormLabel>\r\n                            <FormGroup row>\r\n                              {tipoFalla.map((el, index) => (\r\n                                <FormControlLabel\r\n                                  key={index}\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={el.check}\r\n                                      onChange={() => handleChangeTF(index)}\r\n                                      name={el.label}\r\n                                    />\r\n                                  }\r\n                                  label={el.label}\r\n                                />\r\n                              ))}\r\n                            </FormGroup>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Title title=\"5. DATOS GENERALES DE LA ORDEN DEL TRABAJO DE MANTENIMIENTO\" />\r\n                        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                          <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\">\r\n                              Tipo de mantenimiento\r\n                            </FormLabel>\r\n                            <RadioGroup\r\n                              value={tipo_mantenimiento}\r\n                              onChange={(a, b) => setTipo_mantenimiento(b)}\r\n                            >\r\n                              {listTM.map((el, index) => (\r\n                                <FormControlLabel\r\n                                  key={index}\r\n                                  value={el}\r\n                                  control={<Radio />}\r\n                                  label={el}\r\n                                />\r\n                              ))}\r\n                            </RadioGroup>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                          <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\">Tipo OTM</FormLabel>\r\n                            <RadioGroup\r\n                              value={otm}\r\n                              onChange={(a, b) => setOtm(b)}\r\n                            >\r\n                              {listOTM.map((el, index) => (\r\n                                <FormControlLabel\r\n                                  key={index}\r\n                                  value={el}\r\n                                  control={<Radio />}\r\n                                  label={el}\r\n                                />\r\n                              ))}\r\n                            </RadioGroup>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                          <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\">Prioridad</FormLabel>\r\n                            <RadioGroup\r\n                              value={prioridad}\r\n                              onChange={(a, b) => setPrioridad(b)}\r\n                            >\r\n                              {listPrioridad.map((el, index) => (\r\n                                <FormControlLabel\r\n                                  key={index}\r\n                                  value={el}\r\n                                  control={<Radio />}\r\n                                  label={el}\r\n                                />\r\n                              ))}\r\n                            </RadioGroup>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                          <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\">\r\n                              Tipo de atención\r\n                            </FormLabel>\r\n                            <RadioGroup\r\n                              value={tAtencion}\r\n                              onChange={(a, b) => setTAtencion(b)}\r\n                            >\r\n                              {listTipoAtencion.map((el, index) => (\r\n                                <FormControlLabel\r\n                                  key={index}\r\n                                  value={el}\r\n                                  control={<Radio />}\r\n                                  label={el}\r\n                                />\r\n                              ))}\r\n                            </RadioGroup>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                          <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\">\r\n                              Tipo de equipamiento\r\n                            </FormLabel>\r\n                            <RadioGroup\r\n                              value={tEquipamento}\r\n                              onChange={(a, b) => setTEquipamento(b)}\r\n                            >\r\n                              {listTipoEquipamiento.map((el, index) => (\r\n                                <FormControlLabel\r\n                                  key={index}\r\n                                  value={el}\r\n                                  control={<Radio />}\r\n                                  label={el}\r\n                                />\r\n                              ))}\r\n                            </RadioGroup>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Title title=\"6. DATOS GENERALES DE LA EJECUCIÓN\" />\r\n                        <Grid item xs={12}>\r\n                          <List\r\n                            subheader={\r\n                              <ListSubheader>\r\n                                ACTIVIDADES EJECUTADAS\r\n                              </ListSubheader>\r\n                            }\r\n                            dense\r\n                          >\r\n                            {actions.map((el, index) => (\r\n                              <ListItem key={index} dense>\r\n                                <ListItemText\r\n                                  primary={\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      value={el}\r\n                                      fullWidth\r\n                                      label={`Actividad ${index + 1}`}\r\n                                      size=\"small\"\r\n                                      onChange={(e) =>\r\n                                        handleChangeText(e.target.value, index)\r\n                                      }\r\n                                      InputProps={{\r\n                                        endAdornment: (\r\n                                          <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                              size=\"small\"\r\n                                              onClick={() =>\r\n                                                handleRemoveAction(index)\r\n                                              }\r\n                                            >\r\n                                              <CloseIcon color=\"error\" />\r\n                                            </IconButton>\r\n                                          </InputAdornment>\r\n                                        ),\r\n                                      }}\r\n                                    />\r\n                                  }\r\n                                />\r\n                              </ListItem>\r\n                            ))}\r\n                            <div align=\"center\">\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                onClick={handleAddActions}\r\n                              >\r\n                                AGREGAR\r\n                              </Button>\r\n                            </div>\r\n                          </List>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={6}\r\n                          md={4}\r\n                          lg={3}\r\n                          container\r\n                          alignItems=\"center\"\r\n                        >\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                checked={garantia}\r\n                                onChange={(a, b) => setGarantia(b)}\r\n                              />\r\n                            }\r\n                            label=\"Garantía en meses\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={6}\r\n                          md={4}\r\n                          lg={3}\r\n                          container\r\n                          alignItems=\"center\"\r\n                        >\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                checked={interrupcion}\r\n                                onChange={(a, b) => setInterrupcion(b)}\r\n                              />\r\n                            }\r\n                            label=\"Interrupción al servicio\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                          <TextField\r\n                            label=\"Fecha de inicio\"\r\n                            fullWidth\r\n                            type=\"datetime-local\"\r\n                            defaultValue={flg ? data.datetime_start : \"\"}\r\n                            error={Boolean(errors?.datetime_start ?? false)}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            {...register(\"datetime_start\", { required: false })}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                          <TextField\r\n                            label=\"Fecha de finalización\"\r\n                            fullWidth\r\n                            type=\"datetime-local\"\r\n                            defaultValue={flg ? data.datetime_end : \"\"}\r\n                            error={Boolean(errors?.datetime_end ?? false)}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            {...register(\"datetime_end\", { required: false })}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\">\r\n                              Estado de finalización\r\n                            </FormLabel>\r\n                            <RadioGroup\r\n                              row\r\n                              value={statusEnd}\r\n                              onChange={(a, b) => setStatusEnd(b)}\r\n                            >\r\n                              {statusList.map((el, index) => (\r\n                                <FormControlLabel\r\n                                  key={index}\r\n                                  value={el}\r\n                                  control={<Radio />}\r\n                                  label={el}\r\n                                />\r\n                              ))}\r\n                            </RadioGroup>\r\n                          </FormControl>\r\n                        </Grid>\r\n\r\n                        <Title title=\"7. DATOS DE LOS REPUESTOS (Partes, accesorios y materiales)\" />\r\n                        <ListSubheader>\r\n                          DESCRIPCIÓN DE RECURSOS MATERIALES\r\n                        </ListSubheader>\r\n                        <Grid item xs={12}>\r\n                          {rcrss.map((el, i) => (\r\n                            <Card variant=\"outlined\" key={i}>\r\n                              <CardContent>\r\n                                <Grid container>\r\n                                  <Grid\r\n                                    item\r\n                                    style={{ width: \"calc((100%) - 40px)\" }}\r\n                                  >\r\n                                    <Grid container spacing={1}>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.code}\r\n                                          onChange={(e) =>\r\n                                            hndRecursos(\r\n                                              e.target.value,\r\n                                              \"code\",\r\n                                              i\r\n                                            )\r\n                                          }\r\n                                          fullWidth\r\n                                          label=\"Código de repuesto\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                                        <FormControl\r\n                                          variant=\"outlined\"\r\n                                          fullWidth\r\n                                          size=\"small\"\r\n                                        >\r\n                                          <InputLabel>\r\n                                            Tipo Adquisición\r\n                                          </InputLabel>\r\n                                          <Select\r\n                                            label=\"Tipo Adquisición\"\r\n                                            value={el.type}\r\n                                            onChange={(e) =>\r\n                                              hndRecursos(\r\n                                                e.target.value,\r\n                                                \"type\",\r\n                                                i\r\n                                              )\r\n                                            }\r\n                                          >\r\n                                            <MenuItem value=\"Ejecutor\">\r\n                                              Ejecutor\r\n                                            </MenuItem>\r\n                                            <MenuItem value=\"Almacén\">\r\n                                              Almacén\r\n                                            </MenuItem>\r\n                                            <MenuItem value=\"Caja Chica\">\r\n                                              Caja Chica\r\n                                            </MenuItem>\r\n                                          </Select>\r\n                                        </FormControl>\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                                        {data ? (\r\n                                          <TextField\r\n                                            variant=\"outlined\"\r\n                                            value={el.name}\r\n                                            onChange={(e) =>\r\n                                              hndRecursos(\r\n                                                e.target.value,\r\n                                                \"name\",\r\n                                                i\r\n                                              )\r\n                                            }\r\n                                            fullWidth\r\n                                            label=\"Nombre\"\r\n                                            size=\"small\"\r\n                                          />\r\n                                        ) : (\r\n                                          <SelectInsumos\r\n                                            data={insumos}\r\n                                            value={el.id}\r\n                                            setValue={(e) =>\r\n                                              hndRecursos(e, \"id\", i)\r\n                                            }\r\n                                          />\r\n                                        )}\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.caract}\r\n                                          onChange={(e) =>\r\n                                            hndRecursos(\r\n                                              e.target.value,\r\n                                              \"caract\",\r\n                                              i\r\n                                            )\r\n                                          }\r\n                                          fullWidth\r\n                                          label=\"Caracterísctica técnicas\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.und_m}\r\n                                          onChange={(e) =>\r\n                                            hndRecursos(\r\n                                              e.target.value,\r\n                                              \"und_m\",\r\n                                              i\r\n                                            )\r\n                                          }\r\n                                          fullWidth\r\n                                          label=\"Unidad de medida\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.cant}\r\n                                          onChange={(e) => {\r\n                                            hndRecursos(\r\n                                              e.target.value,\r\n                                              \"cant\",\r\n                                              i\r\n                                            );\r\n                                            hndRecursos(\r\n                                              Number(el.cant) *\r\n                                                Number(el.vlr_u),\r\n                                              \"total\",\r\n                                              i\r\n                                            );\r\n                                          }}\r\n                                          fullWidth\r\n                                          type=\"number\"\r\n                                          label=\"Cantidad\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.vlr_u}\r\n                                          type=\"number\"\r\n                                          onChange={(e) => {\r\n                                            hndRecursos(\r\n                                              e.target.value,\r\n                                              \"vlr_u\",\r\n                                              i\r\n                                            );\r\n                                            hndRecursos(\r\n                                              Number(el.cant) *\r\n                                                Number(el.vlr_u),\r\n                                              \"total\",\r\n                                              i\r\n                                            );\r\n                                          }}\r\n                                          fullWidth\r\n                                          label=\"Valor Unitario\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.total ? el.total : \"\"}\r\n                                          disabled\r\n                                          fullWidth\r\n                                          label=\"Total\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                  <Grid\r\n                                    item\r\n                                    style={{ width: 40 }}\r\n                                    container\r\n                                    justifyContent=\"center\"\r\n                                    alignItems=\"center\"\r\n                                  >\r\n                                    <IconButton\r\n                                      size=\"small\"\r\n                                      onClick={() => hndRemoveRecursos(i)}\r\n                                    >\r\n                                      <CloseIcon color=\"error\" />\r\n                                    </IconButton>\r\n                                  </Grid>\r\n                                </Grid>\r\n                              </CardContent>\r\n                            </Card>\r\n                          ))}\r\n                          <div align=\"center\">\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              onClick={hndAddRecursos}\r\n                            >\r\n                              AGREGAR\r\n                            </Button>\r\n                          </div>\r\n                        </Grid>\r\n\r\n                        <Title title=\"8. DATOS DE LA MANO DE OBRA\" />\r\n                        <ListSubheader>\r\n                          DESCRIPCIÓN DE RECURSOS HUMANOS\r\n                        </ListSubheader>\r\n                        <Grid item xs={12}>\r\n                          {rrhh.map((el, i) => (\r\n                            <Card variant=\"outlined\" key={i}>\r\n                              <CardContent>\r\n                                <Grid container>\r\n                                  <Grid\r\n                                    item\r\n                                    style={{ width: \"calc((100%) - 40px)\" }}\r\n                                  >\r\n                                    <Grid container spacing={1}>\r\n                                      <Grid item xs={12} sm={6} md={6} lg={3}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.code}\r\n                                          onChange={(e) =>\r\n                                            hndRRHH(e.target.value, \"code\", i)\r\n                                          }\r\n                                          fullWidth\r\n                                          label=\"Código del personal\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={6} lg={3}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.name}\r\n                                          onChange={(e) =>\r\n                                            hndRRHH(e.target.value, \"name\", i)\r\n                                          }\r\n                                          fullWidth\r\n                                          label=\"Nombre del personal\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          type=\"number\"\r\n                                          value={el.price_hour}\r\n                                          onChange={(e) => {\r\n                                            hndRRHH(\r\n                                              e.target.value,\r\n                                              \"price_hour\",\r\n                                              i\r\n                                            );\r\n                                            hndRRHH(\r\n                                              Number(el.price_hour) *\r\n                                                Number(el.hours),\r\n                                              \"total\",\r\n                                              i\r\n                                            );\r\n                                          }}\r\n                                          fullWidth\r\n                                          label=\"Costo x hora\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.hours}\r\n                                          type=\"number\"\r\n                                          onChange={(e) => {\r\n                                            hndRRHH(e.target.value, \"hours\", i);\r\n                                            hndRRHH(\r\n                                              Number(el.price_hour) *\r\n                                                Number(el.hours),\r\n                                              \"total\",\r\n                                              i\r\n                                            );\r\n                                          }}\r\n                                          fullWidth\r\n                                          label=\"Horas\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={12} md={4} lg={2}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.total}\r\n                                          disabled\r\n                                          fullWidth\r\n                                          type=\"number\"\r\n                                          label=\"Total\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                  <Grid\r\n                                    item\r\n                                    style={{ width: 40 }}\r\n                                    container\r\n                                    justifyContent=\"center\"\r\n                                    alignItems=\"center\"\r\n                                  >\r\n                                    <IconButton\r\n                                      size=\"small\"\r\n                                      onClick={() => hndRemoveRRHH(i)}\r\n                                    >\r\n                                      <CloseIcon color=\"error\" />\r\n                                    </IconButton>\r\n                                  </Grid>\r\n                                </Grid>\r\n                              </CardContent>\r\n                            </Card>\r\n                          ))}\r\n                          <div align=\"center\">\r\n                            <Button variant=\"contained\" onClick={hndAddRRHH}>\r\n                              AGREGAR\r\n                            </Button>\r\n                          </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            label=\"Gastos adicionales\"\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            inputProps={{ step: 0.01, min: 0 }}\r\n                            defaultValue={flg ? data.aditional : \"\"}\r\n                            error={Boolean(errors?.aditional ?? false)}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            {...register(\"aditional\", { required: false })}\r\n                          />\r\n                        </Grid>\r\n                      </Fragment>\r\n                    )}\r\n                  </Grid>\r\n                </Box>\r\n              </Paper>\r\n            </Container>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={() => setOpen(false)}\r\n            >\r\n              CANCELAR\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              disabled={!Boolean(date || (flg && true))}\r\n            >\r\n              GUARDAR\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Spin>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalMaintenance;\r\n\r\nconst Title = ({ title, helper }) => {\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Typography variant=\"subtitle1\">\r\n        <b> {title} </b> {helper}\r\n      </Typography>\r\n      <Divider />\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Fab,\r\n  Tooltip,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n} from \"@mui/material\";\r\nimport Page from \"components/Page\";\r\nimport { getMaintenances, getEquipmentById } from \"requests\";\r\nimport { Empty, notification, Spin } from \"antd\";\r\nimport ModalDetails from \"./ModalDetails\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport ModalMaintenance from \"./ModalMaintenance\";\r\nimport moment from \"moment-timezone\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { Edit } from \"@mui/icons-material\";\r\n\r\nconst Equipment = () => {\r\n  const { idequipment } = useParams();\r\n  const [modalDetails, setModalDetails] = useState({ open: false, data: null });\r\n  const [equipment, setEquipment] = useState(null);\r\n  const [modal, setModal] = useState({ data: null, open: false });\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    obtainData();\r\n  }, []);\r\n\r\n  const obtainData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await getMaintenances(idequipment);\r\n      const resE = await getEquipmentById(idequipment);\r\n      setEquipment(resE);\r\n      setData(res.reverse());\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Oops!`,\r\n        description: `Ocurrió un error al obtener la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page\r\n      helper=\"EQUIPOS\"\r\n      title={`MANTENIMIENTO DE ${equipment?.name ?? \"...\"}`}\r\n      itemComponent={\r\n        <Fragment>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            component={Link}\r\n            to=\"/equipment\"\r\n          >\r\n            VOLVER\r\n          </Button>{\" \"}\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            onClick={() => setModal({ open: true, data: null })}\r\n          >\r\n            REGISTRAR\r\n          </Button>\r\n        </Fragment>\r\n      }\r\n    >\r\n      <br />\r\n      <Spin spinning={loading}>\r\n        <Grid container spacing={2}>\r\n          {data.length > 0 ? (\r\n            <Grid item xs={12}>\r\n              <TableContainer>\r\n                <Table className=\"table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\">¿Programado?</TableCell>\r\n                      <TableCell align=\"center\">Diagnostico</TableCell>\r\n                      <TableCell align=\"center\">Fecha Programada</TableCell>\r\n                      <TableCell align=\"center\">Estado Inicial</TableCell>\r\n                      <TableCell align=\"center\">Estado Final</TableCell>\r\n                      <TableCell align=\"center\">Acciones</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data.map((el, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell align=\"center\">\r\n                          {el.programmed ? \"SI\" : \"NO\"}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{el.diagnostico}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {moment(el.date_programmed).format(\"DD/MM/YYYY\")}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{el.status_start}</TableCell>\r\n                        <TableCell align=\"center\">{el.status_end}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Tooltip\r\n                            placement=\"top-end\"\r\n                            title=\"Modificar información del mantenimiento\"\r\n                          >\r\n                            <Fab\r\n                              size=\"small\"\r\n                              color=\"secondary\"\r\n                              onClick={() => setModal({ open: true, data: el })}\r\n                            >\r\n                              <Edit />\r\n                            </Fab>\r\n                          </Tooltip>\r\n                          <Tooltip placement=\"top-end\" title=\"Resumen\">\r\n                            <Fab\r\n                              size=\"small\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                setModalDetails({ open: true, data: el })\r\n                              }\r\n                            >\r\n                              <MoreHorizIcon />\r\n                            </Fab>\r\n                          </Tooltip>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          ) : (\r\n            <Grid item xs={12} align=\"center\">\r\n              <Empty\r\n                description={`AQUÍ SE MOSTRARÁN LOS MANTENIMIENTO DE ${\r\n                  equipment?.name ?? \"...\"\r\n                }`}\r\n              />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Spin>\r\n      {modal.open && (\r\n        <ModalMaintenance\r\n          open={modal.open}\r\n          setOpen={setModal}\r\n          data={modal.data}\r\n          equipment={equipment}\r\n          refreshFunction={obtainData}\r\n        />\r\n      )}\r\n      {modalDetails.open && (\r\n        <ModalDetails\r\n          open={modalDetails.open}\r\n          setOpen={setModalDetails}\r\n          data={modalDetails.data}\r\n          equipment={equipment}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Equipment;\r\n"],"names":["props","title","helper","itemComponent","children","rest","p","container","justifyContent","item","gutterBottom","component","toUpperCase","variant","statusList","listTM","listOTM","listPrioridad","listTipoAtencion","listTipoEquipamiento","open","setOpen","data","equipment","printPage","useRef","ttRecursos","ttRRHH","Dialog","onClose","fullScreen","DialogContent","align","trigger","Button","color","size","Print","content","current","documentTitle","removeAfterPrint","pageStyle","Container","maxWidth","Paper","Box","ref","Title","Grid","xs","pl","md","Text","value","name","type","etiqueta","marca","modelo","serie","programmed","Fragment","sm","lg","description","moment","date_request","format","date_conformidad","diagnostico","ejecutor_mantenimiento","date_programmed","CheckBoxList","status_start","row","list","pt","mb","Typography","FormGroup","tipo_falla","map","el","index","FormControlLabel","style","paddingRight","margin","control","Checkbox","checked","check","label","padding","marginRight","FormHelperText","tipo_mantenimiento","tipo_otm","prioridad","tipo_atencion","tipo_equipamiento","List","actividades_list","garantia","interrupcion","datetime_start","datetime_end","status_end","sx","mt","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","recursos","i","Number","total","code","caract","und_m","cant","vlr_u","colSpan","rrhh","price_hour","hours","aditional","DialogActions","onClick","borderBottom","mr","RadioGroup","Radio","Option","Select","setValue","width","showSearch","onChange","filterOption","inputValue","option","toLowerCase","normalize","replace","includes","_id","stock","listTF","refreshFunction","flg","Boolean","useState","date","setDate","tipoFalla","setTipoFalla","insumos","setInsumos","setProgrammed","loading","setLoading","statusStart","setStatusStart","statusEnd","setStatusEnd","setTipo_mantenimiento","otm","setOtm","setPrioridad","tAtencion","setTAtencion","tEquipamento","setTEquipamento","actions","setActions","setGarantia","setInterrupcion","rcrss","setRcrss","setRrhh","useForm","register","handleSubmit","errors","formState","sendRegister","items","putMaintenances","postMaintenances","notification","message","useEffect","obtainData","getInsumos","res","result","filter","e","hndRecursos","finder","find","id","u_medida","precio","hndRRHH","console","log","view","dates","status","length","DialogTitle","spinning","onSubmit","autoComplete","elevation","spacing","FormControl","fullWidth","InputLabel","target","MenuItem","a","b","TextField","defaultValue","error","required","InputLabelProps","shrink","FormLabel","handleChangeTF","subheader","ListSubheader","dense","ListItem","ListItemText","primary","handleChangeText","InputProps","endAdornment","InputAdornment","position","IconButton","splice","handleRemoveAction","Close","push","alignItems","Card","CardContent","disabled","inputProps","step","min","Divider","idequipment","useParams","modalDetails","setModalDetails","setEquipment","modal","setModal","setData","getMaintenances","getEquipmentById","resE","reverse","Page","Link","to","className","Tooltip","placement","Fab","Edit","MoreHoriz"],"sourceRoot":""}