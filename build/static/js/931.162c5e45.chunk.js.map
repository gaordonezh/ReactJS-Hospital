{"version":3,"file":"static/js/931.162c5e45.chunk.js","mappings":"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","sources":["components/CustomTable.jsx","components/Page.jsx","components/selects/SelectTypeEquipment.jsx","pages/Equipment/components/ModalEquipments.jsx","pages/Equipment/components/TableEquipments.jsx","pages/Equipment/Equipment.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport PageviewIcon from \"@mui/icons-material/Pageview\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { Button, TextField } from \"@mui/material\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\n\r\nconst CustomTable = ({ data, columns, loading, ...rest }) => {\r\n  const [searchText, setsearchText] = useState(\"\");\r\n  const [searchedColumn, setsearchedColumn] = useState(\"\");\r\n  const [allColumns, setAllColumns] = useState([]);\r\n\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          placeholder=\"Buscar...\"\r\n          size=\"small\"\r\n          value={selectedKeys[0]}\r\n          onChange={(e) => {\r\n            setSelectedKeys(e.target.value ? [e.target.value] : []);\r\n          }}\r\n          onKeyDown={(e) => {\r\n            e.key === \"Enter\" && handleSearch(selectedKeys, confirm, dataIndex);\r\n          }}\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onClick={() =>\r\n            handleReset(clearFilters, selectedKeys, setSelectedKeys)\r\n          }\r\n          style={{ width: 90 }}\r\n        >\r\n          Limpiar <ClearIcon />\r\n        </Button>{\" \"}\r\n        <Button\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n        >\r\n          Buscar <SearchIcon />\r\n        </Button>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <PageviewIcon style={{ color: filtered ? \"#fff\" : \"#aaa\" }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n      }\r\n    },\r\n    render: (text) => (searchedColumn === dataIndex ? searchText : text),\r\n  });\r\n\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setsearchText(selectedKeys[0]);\r\n    setsearchedColumn(dataIndex);\r\n  };\r\n\r\n  const handleReset = (clearFilters, selectedKeys, setSelectedKeys) => {\r\n    clearFilters();\r\n    setsearchText(\"\");\r\n    setSelectedKeys([\"\"]);\r\n    setsearchedColumn(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (columns.length > 0) {\r\n      columns.map((row) => {\r\n        if (row.filter) {\r\n          Object.assign(row, { ...getColumnSearchProps(row.dataIndex) });\r\n        }\r\n        if (row.sorter) {\r\n          row.sorter = (a, b) => (a[row.dataIndex] > b[row.dataIndex] ? 1 : -1);\r\n        }\r\n        return row;\r\n      });\r\n      setAllColumns(columns);\r\n    }\r\n  }, [columns]);\r\n\r\n  return (\r\n    <Table\r\n      bordered\r\n      columns={allColumns}\r\n      dataSource={data}\r\n      scroll={{ x: \"auto\" }}\r\n      loading={loading}\r\n      rowKey=\"_id\"\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  FormHelperText,\r\n  Typography,\r\n  Paper,\r\n  Box,\r\n  Divider,\r\n  Grid,\r\n} from \"@mui/material\";\r\n\r\nconst Page = (props) => {\r\n  const { title, helper, itemComponent, children, ...rest } = props;\r\n  return (\r\n    <Box p={1}>\r\n      <Paper {...rest}>\r\n        <Box p={2}>\r\n          <Grid container justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Typography gutterBottom component=\"p\">\r\n                <FormHelperText component=\"span\">\r\n                  {helper && helper.toUpperCase()}\r\n                </FormHelperText>\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                <b>{title}</b>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>{itemComponent}</Grid>\r\n          </Grid>\r\n          <Divider />\r\n          {children}\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport { FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\r\n\r\nexport const listTypes = [\r\n  \"EQUIPOS BIOMÉDICOS\",\r\n  \"EQUIPOS MOBILIARIOS CLÍNICOS\",\r\n  \"EQUIPOS MOBILIARIOS ADMINISTRATIVOS\",\r\n  \"EQUIPOS MOBILIARIOS COMPLEMENTARIOS\",\r\n  \"EQUIPOS MOBILIARIOS ELECTROMECÁNICOS\",\r\n  \"EQUIPOS MOBILIARIOS DE SERVICIOS GENERALES\",\r\n  \"EQUIPOS MOBILIARIOS VEHÍCULOS\",\r\n];\r\n\r\nconst SelectTypeEquipment = ({ value, onChange }) => {\r\n  return (\r\n    <FormControl fullWidth variant=\"outlined\">\r\n      <InputLabel>TIPO DE EQUIPO</InputLabel>\r\n      <Select\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        label=\"TIPO DE EQUIPO\"\r\n      >\r\n        {listTypes.map((el, index) => (\r\n          <MenuItem key={index} value={el} title={el}>\r\n            {el}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SelectTypeEquipment;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  FormHelperText,\r\n  Divider,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Spin, notification } from \"antd\";\r\nimport { postEquipments, putEquipments } from \"requests\";\r\nimport user from \"utils/userDetails\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport SelectTypeEquipment from \"../../../components/selects/SelectTypeEquipment\";\r\n\r\nconst ModalEquipments = (props) => {\r\n  const { open, setOpen, setLoading, loading, data, reloadFunction } = props;\r\n  const [type, setType] = useState(Boolean(data) ? data.type : null);\r\n  const [dates, setDates] = useState(Boolean(data) ? data.dates : []);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const sendRegister = async (items) => {\r\n    try {\r\n      if (!type) {\r\n        notification[\"warning\"]({ message: \"Campos requeridos...\" });\r\n        return;\r\n      }\r\n      setLoading(true);\r\n      if (!data) items[\"company\"] = user.idCompany;\r\n      items[\"type\"] = type;\r\n      items[\"dates\"] = dates;\r\n      if (data) await putEquipments(items, data._id);\r\n      else await postEquipments(items);\r\n      reloadFunction();\r\n      setOpen({ open: false });\r\n      notification[\"success\"]({\r\n        message: `Éxito!`,\r\n        description: `El equipo se ${\r\n          Boolean(data) ? \"actualizó\" : \"registró\"\r\n        } correctamente.`,\r\n      });\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Error!`,\r\n        description: `Ocurrió un error al ${\r\n          Boolean(data) ? \"actualizar\" : \"registrar\"\r\n        } la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth=\"md\">\r\n      <DialogTitle>\r\n        <Typography variant=\"p\" align=\"center\">\r\n          <b>{Boolean(data) ? \"EDITAR\" : \"AGREGAR\"} EQUIPO</b>\r\n        </Typography>\r\n      </DialogTitle>\r\n      <Spin spinning={loading}>\r\n        <form onSubmit={handleSubmit(sendRegister)} autoComplete=\"off\">\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <SelectTypeEquipment value={type} onChange={setType} />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  label=\"NOMBRE\"\r\n                  autoFocus\r\n                  fullWidth\r\n                  defaultValue={Boolean(data) ? data.name : \"\"}\r\n                  error={Boolean(errors?.name ?? false)}\r\n                  {...register(\"name\", { required: true, maxLength: 80 })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"ETIQUETA\"\r\n                  fullWidth\r\n                  defaultValue={Boolean(data) ? data.etiqueta : \"\"}\r\n                  error={Boolean(errors?.etiqueta ?? false)}\r\n                  {...register(\"etiqueta\", { required: true, maxLength: 80 })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"MARCA\"\r\n                  fullWidth\r\n                  defaultValue={Boolean(data) ? data.marca : \"\"}\r\n                  error={Boolean(errors?.marca ?? false)}\r\n                  {...register(\"marca\", { required: true, maxLength: 80 })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"MODELO\"\r\n                  fullWidth\r\n                  defaultValue={Boolean(data) ? data.modelo : \"\"}\r\n                  error={Boolean(errors?.modelo ?? false)}\r\n                  {...register(\"modelo\", { required: true, maxLength: 80 })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"SERIE\"\r\n                  fullWidth\r\n                  defaultValue={Boolean(data) ? data.serie : \"\"}\r\n                  error={Boolean(errors?.serie ?? false)}\r\n                  {...register(\"serie\", { required: true, maxLength: 80 })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormHelperText>FECHAS DE MANTENIMIENTO</FormHelperText>\r\n                <Divider />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                {dates.map((el, i) => (\r\n                  <TextField\r\n                    label={`Fecha de mantenimiento ${i + 1}`}\r\n                    fullWidth\r\n                    value={el.date}\r\n                    type=\"date\"\r\n                    InputLabelProps={{ shrink: true }}\r\n                    sx={{ mb: 1 }}\r\n                    disabled={!el.status}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          {el.status && (\r\n                            <IconButton\r\n                              onClick={() => {\r\n                                dates.splice(i, 1);\r\n                                setDates([...dates]);\r\n                              }}\r\n                              color=\"error\"\r\n                            >\r\n                              <CloseIcon />\r\n                            </IconButton>\r\n                          )}\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    onChange={(e) => {\r\n                      dates[i].date = e.target.value;\r\n                      setDates([...dates]);\r\n                    }}\r\n                  />\r\n                ))}\r\n              </Grid>\r\n              <Grid item xs={12} align=\"center\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={() => {\r\n                    dates.push({ date: \"\", status: true });\r\n                    setDates([...dates]);\r\n                  }}\r\n                >\r\n                  AGREGAR\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={() => setOpen({ open: false })}\r\n            >\r\n              CANCELAR\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              {Boolean(data) ? \"ACTUALIZAR\" : \"GUARDAR\"}\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Spin>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalEquipments;\r\n","import React, { Fragment } from \"react\";\r\nimport CustomTable from \"components/CustomTable\";\r\nimport {\r\n  ButtonGroup,\r\n  Button,\r\n  Stack,\r\n  Chip,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { Edit, CallMade } from \"@mui/icons-material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment-timezone\";\r\n\r\nconst TableEquipments = ({ data, loading, setModal }) => {\r\n  const columns = [\r\n    {\r\n      title: \"Nombre\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      align: \"center\",\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      title: \"Tipo\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n      align: \"center\",\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      title: \"Etiqueta\",\r\n      dataIndex: \"etiqueta\",\r\n      key: \"etiqueta\",\r\n      align: \"center\",\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      title: \"Marca\",\r\n      dataIndex: \"marca\",\r\n      key: \"marca\",\r\n      align: \"center\",\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      title: \"Modelo\",\r\n      dataIndex: \"modelo\",\r\n      key: \"modelo\",\r\n      align: \"center\",\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      title: \"Serie\",\r\n      dataIndex: \"serie\",\r\n      key: \"serie\",\r\n      align: \"center\",\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      title: \"Fechas de Mantenimiento\",\r\n      dataIndex: \"dates\",\r\n      key: \"dates\",\r\n      align: \"center\",\r\n      sorter: false,\r\n      filter: false,\r\n      width: 425,\r\n      render: (dates) => (\r\n        <Fragment>\r\n          {dates.length > 0 ? (\r\n            dates.map((el, ind) => {\r\n              let color = \"success\";\r\n              if (el.status) {\r\n                color = \"info\";\r\n                if (moment().format() > moment(el.date).format()) {\r\n                  color = \"error\";\r\n                }\r\n              }\r\n              return (\r\n                <Chip\r\n                  label={`${moment(el.date)\r\n                    .format(\"D MMM YYYY\")\r\n                    .toUpperCase()} ─ ${\r\n                    el.status\r\n                      ? color === \"error\"\r\n                        ? \"ATRAZADO\"\r\n                        : \"PENDIENTE\"\r\n                      : \"REALIZADO\"\r\n                  }`}\r\n                  color={color}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  key={ind}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <FormHelperText error>\r\n              <b>NO HAY FECHAS DE MANTENIMIENTO</b>\r\n            </FormHelperText>\r\n          )}\r\n        </Fragment>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Acciones\",\r\n      dataIndex: \"_id\",\r\n      key: \"_id\",\r\n      align: \"center\",\r\n      render: (text, record) => (\r\n        <ButtonGroup size=\"small\" color=\"secondary\" variant=\"outlined\">\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => setModal({ open: true, data: record })}\r\n          >\r\n            <Edit />\r\n          </Button>\r\n          <Button component={Link} to={`/equipment/maintenance/${text}`}>\r\n            <CallMade />\r\n          </Button>\r\n        </ButtonGroup>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return <CustomTable columns={columns} data={data} loading={loading} />;\r\n};\r\n\r\nexport default TableEquipments;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Box,\r\n  Stack,\r\n  InputAdornment,\r\n  TextField,\r\n  Fab,\r\n  Typography,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport Page from \"components/Page\";\r\nimport { getEquipments, uploadEquipments } from \"requests\";\r\nimport ModalEquipments from \"./components/ModalEquipments\";\r\nimport { notification } from \"antd\";\r\nimport TableEquipments from \"./components/TableEquipments\";\r\nimport { AttachFile, Upload } from \"@mui/icons-material\";\r\n\r\nconst Equipment = () => {\r\n  const [modal, setModal] = useState({ data: null, open: false });\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [file, setFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    obtainData();\r\n  }, []);\r\n\r\n  const obtainData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await getEquipments();\r\n      setData([...res.reverse()]);\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Oops!`,\r\n        description: `Ocurrió un error al obtener la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const uploadExcel = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let form = new FormData();\r\n      form.append(\"file\", file);\r\n\r\n      const res = await uploadEquipments(form);\r\n\r\n      if (res.status) {\r\n        notification[\"success\"]({ message: res.message });\r\n        obtainData();\r\n        setFile(null);\r\n      }\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Ocurrió un error al realizar la operación.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page\r\n      helper=\"EQUIPOS\"\r\n      title={\r\n        <Typography variant=\"inherit\">\r\n          EQUIPOS{\" \"}\r\n          <FormHelperText\r\n            component=\"a\"\r\n            href=\"https://res.cloudinary.com/backet-repartos/raw/upload/v1642224920/IMPORTAR_PRODUCTOS_gmj3hz.xlsx\"\r\n            target=\"_blank\"\r\n            sx={{color:'#6bc8ff'}}\r\n          >\r\n            <AttachFile /> PLANTILLA DE IMPORTACIÓN\r\n          </FormHelperText>\r\n        </Typography>\r\n      }\r\n      itemComponent={\r\n        <Stack direction=\"row\" spacing={1}>\r\n          <TextField\r\n            label=\"IMPORTACIÓN (archivo excel)\"\r\n            type=\"file\"\r\n            InputLabelProps={{ shrink: true }}\r\n            onChange={(e) => setFile(e.target.files[0])}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <Fab onClick={uploadExcel} color=\"primary\" disabled={!file}>\r\n                    <Upload />\r\n                  </Fab>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            onClick={() => setModal({ open: true, data: null })}\r\n          >\r\n            AGREGAR EQUIPO\r\n          </Button>\r\n        </Stack>\r\n      }\r\n    >\r\n      <Box p={1}>\r\n        <TableEquipments data={data} loading={loading} setModal={setModal} />\r\n      </Box>\r\n      {modal.open && (\r\n        <ModalEquipments\r\n          open={modal.open}\r\n          setOpen={setModal}\r\n          data={modal.data}\r\n          setLoading={setLoading}\r\n          loading={loading}\r\n          reloadFunction={obtainData}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Equipment;\r\n"],"names":["data","columns","loading","rest","useState","searchText","setsearchText","searchedColumn","setsearchedColumn","allColumns","setAllColumns","handleSearch","selectedKeys","confirm","dataIndex","handleReset","clearFilters","setSelectedKeys","useEffect","length","map","row","filter","Object","assign","filterDropdown","style","padding","variant","placeholder","size","value","onChange","e","target","onKeyDown","key","width","marginBottom","display","color","onClick","filterIcon","filtered","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","render","text","sorter","a","b","bordered","dataSource","scroll","x","rowKey","props","title","helper","itemComponent","children","p","container","justifyContent","item","gutterBottom","component","toUpperCase","listTypes","FormControl","fullWidth","InputLabel","Select","label","el","index","MenuItem","open","setOpen","setLoading","reloadFunction","Boolean","type","setType","dates","setDates","useForm","register","handleSubmit","errors","formState","sendRegister","items","notification","message","user","putEquipments","_id","postEquipments","description","Dialog","maxWidth","DialogTitle","Typography","align","spinning","onSubmit","autoComplete","DialogContent","Grid","spacing","xs","sm","TextField","autoFocus","defaultValue","name","error","required","maxLength","etiqueta","marca","modelo","serie","FormHelperText","Divider","i","date","InputLabelProps","shrink","sx","mb","disabled","status","InputProps","endAdornment","InputAdornment","position","IconButton","splice","Close","Button","push","DialogActions","setModal","Fragment","ind","moment","format","Chip","ButtonGroup","Edit","Link","to","CallMade","CustomTable","modal","setData","file","setFile","obtainData","getEquipments","res","reverse","uploadExcel","form","FormData","append","uploadEquipments","Page","href","AttachFile","Stack","direction","files","Fab","Upload","Box"],"sourceRoot":""}