{"version":3,"file":"static/js/106.da0f45d4.chunk.js","mappings":"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","sources":["components/CustomTable.jsx","components/Page.jsx","pages/Building/components/TableBuilding.jsx","pages/Building/components/ModalBuilding.jsx","pages/Building/Building.jsx","../node_modules/@mui/icons-material/FormatLineSpacing.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport PageviewIcon from \"@mui/icons-material/Pageview\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { Button, TextField } from \"@mui/material\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\n\r\nconst CustomTable = ({ data, columns, loading, ...rest }) => {\r\n  const [searchText, setsearchText] = useState(\"\");\r\n  const [searchedColumn, setsearchedColumn] = useState(\"\");\r\n  const [allColumns, setAllColumns] = useState([]);\r\n\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          placeholder=\"Buscar...\"\r\n          size=\"small\"\r\n          value={selectedKeys[0]}\r\n          onChange={(e) => {\r\n            setSelectedKeys(e.target.value ? [e.target.value] : []);\r\n          }}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onClick={() =>\r\n            handleReset(clearFilters, selectedKeys, setSelectedKeys)\r\n          }\r\n          style={{ width: 90 }}\r\n        >\r\n          Limpiar <ClearIcon />\r\n        </Button>{\" \"}\r\n        <Button\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n        >\r\n          Buscar <SearchIcon />\r\n        </Button>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <PageviewIcon style={{ color: filtered ? \"#fff\" : \"#aaa\" }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n      }\r\n    },\r\n    render: (text) => (searchedColumn === dataIndex ? searchText : text),\r\n  });\r\n\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setsearchText(selectedKeys[0]);\r\n    setsearchedColumn(dataIndex);\r\n  };\r\n\r\n  const handleReset = (clearFilters, selectedKeys, setSelectedKeys) => {\r\n    clearFilters();\r\n    setsearchText(\"\");\r\n    setSelectedKeys([\"\"]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (columns.length > 0) {\r\n      columns.map((row) => {\r\n        if (row.filter) {\r\n          Object.assign(row, { ...getColumnSearchProps(row.dataIndex) });\r\n        }\r\n        if (row.sorter) {\r\n          row.sorter = (a, b) => (a[row.dataIndex] > b[row.dataIndex] ? 1 : -1);\r\n        }\r\n        return row;\r\n      });\r\n      setAllColumns(columns);\r\n    }\r\n  }, [columns]);\r\n\r\n  return (\r\n    <Table\r\n      bordered\r\n      columns={allColumns}\r\n      dataSource={data}\r\n      scroll={{ x: \"auto\" }}\r\n      loading={loading}\r\n      rowKey=\"_id\"\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  FormHelperText,\r\n  Typography,\r\n  Paper,\r\n  Box,\r\n  Divider,\r\n  Grid,\r\n} from \"@mui/material\";\r\n\r\nconst Page = (props) => {\r\n  const { title, helper, itemComponent, children, ...rest } = props;\r\n  return (\r\n    <Box p={1}>\r\n      <Paper {...rest}>\r\n        <Box p={2}>\r\n          <Grid container justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Typography gutterBottom component=\"p\">\r\n                <FormHelperText component=\"span\">\r\n                  {helper && helper.toUpperCase()}\r\n                </FormHelperText>\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                <b>{title}</b>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>{itemComponent}</Grid>\r\n          </Grid>\r\n          <Divider />\r\n          {children}\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport CustomTable from \"components/CustomTable\";\r\nimport { ButtonGroup, Button, Badge } from \"@mui/material\";\r\nimport FormatLineSpacingIcon from \"@mui/icons-material/FormatLineSpacing\";\r\n\r\nconst TableBuilding = ({ data, loading, setModal }) => {\r\n  const columns = [\r\n    {\r\n      title: \"Nombre\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      align: \"center\",\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      title: \"Descripción\",\r\n      dataIndex: \"description\",\r\n      key: \"description\",\r\n      align: \"center\",\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      title: \"Niveles\",\r\n      dataIndex: \"_id\",\r\n      key: \"_id\",\r\n      align: \"center\",\r\n      sorter: false,\r\n      filter: false,\r\n      render: (value, row) => (\r\n        <Badge badgeContent={row.levels.length.toString()} color=\"primary\">\r\n          <FormatLineSpacingIcon color=\"primary\" />\r\n        </Badge>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Acciones\",\r\n      dataIndex: \"_id\",\r\n      key: \"_id\",\r\n      align: \"center\",\r\n      render: (text, record) => (\r\n        <ButtonGroup size=\"small\">\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => setModal({ open: true, data: record })}\r\n          >\r\n            EDIT\r\n          </Button>\r\n        </ButtonGroup>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <CustomTable columns={columns} data={data} loading={loading} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableBuilding;\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Spin, notification } from \"antd\";\r\nimport { postBuildings, putBuildings } from \"requests\";\r\nimport user from \"utils/userDetails\";\r\n\r\nconst ModalBuilding = (props) => {\r\n  const { open, setOpen, setLoading, loading, data, reloadFunction } = props;\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const sendRegister = async (items) => {\r\n    setLoading(true);\r\n    try {\r\n      if (!data) items[\"company\"] = user.idCompany;\r\n      if (data) await putBuildings(items, data._id);\r\n      else await postBuildings(items);\r\n      reloadFunction();\r\n      setOpen({ open: false });\r\n      notification[\"success\"]({\r\n        message: `Éxito!`,\r\n        description: `El edificio se ${\r\n          Boolean(data) ? \"actualizó\" : \"registró\"\r\n        } correctamente.`,\r\n      });\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Error!`,\r\n        description: `Ocurrió un error al ${\r\n          Boolean(data) ? \"actualizar\" : \"registrar\"\r\n        } la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth=\"md\">\r\n      <DialogTitle>\r\n        <Typography variant=\"subtitle1\" align=\"center\">\r\n          <b>{Boolean(data) ? \"EDITAR\" : \"AGREGAR\"} EDIFICIO</b>\r\n        </Typography>\r\n      </DialogTitle>\r\n      <Spin spinning={loading}>\r\n        <form onSubmit={handleSubmit(sendRegister)} autoComplete=\"off\">\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  label=\"NOMBRE\"\r\n                  autoFocus\r\n                  fullWidth\r\n                  defaultValue={Boolean(data) ? data.name : \"\"}\r\n                  error={Boolean(errors?.name ?? false)}\r\n                  {...register(\"name\", { required: true, maxLength: 80 })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  label=\"DESCRIPCIÓN (opcional)\"\r\n                  fullWidth\r\n                  defaultValue={Boolean(data) ? data.description : \"\"}\r\n                  error={Boolean(errors?.description ?? false)}\r\n                  {...register(\"description\", { required: false })}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={() => setOpen({ open: false })}\r\n            >\r\n              CANCELAR\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              {Boolean(data) ? \"ACTUALIZAR\" : \"GUARDAR\"}\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Spin>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalBuilding;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport TableBuilding from \"./components/TableBuilding\";\r\nimport Page from \"components/Page\";\r\nimport ModalBuilding from \"./components/ModalBuilding\";\r\nimport { getBuildings } from \"requests\";\r\nimport { notification } from \"antd\";\r\n\r\nconst Building = () => {\r\n  const [modal, setModal] = useState({ open: false, data: null });\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    obtainData();\r\n  }, []);\r\n\r\n  const obtainData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await getBuildings();\r\n      setData(res);\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Oops!`,\r\n        description: `Ocurrió un error al obtener la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page\r\n      helper=\"CONFIGURACIÓN\"\r\n      title=\"EDIFICIOS\"\r\n      itemComponent={\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          onClick={() => setModal({ open: true })}\r\n        >\r\n          AGREGAR\r\n        </Button>\r\n      }\r\n    >\r\n      <br />\r\n      <TableBuilding loading={loading} data={data} setModal={setModal} />\r\n      {modal.open && (\r\n        <ModalBuilding\r\n          open={modal.open}\r\n          setOpen={setModal}\r\n          loading={loading}\r\n          data={modal.data}\r\n          setLoading={setLoading}\r\n          reloadFunction={obtainData}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Building;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 7h2.5L5 3.5 1.5 7H4v10H1.5L5 20.5 8.5 17H6V7zm4-2v2h12V5H10zm0 14h12v-2H10v2zm0-6h12v-2H10v2z\"\n}), 'FormatLineSpacing');\n\nexports.default = _default;"],"names":["data","columns","loading","rest","useState","searchText","setsearchText","searchedColumn","setsearchedColumn","allColumns","setAllColumns","handleSearch","selectedKeys","confirm","dataIndex","handleReset","clearFilters","setSelectedKeys","useEffect","length","map","row","filter","Object","assign","filterDropdown","style","padding","variant","placeholder","size","value","onChange","e","target","onPressEnter","width","marginBottom","display","color","onClick","filterIcon","filtered","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","render","text","sorter","a","b","bordered","dataSource","scroll","x","rowKey","props","title","helper","itemComponent","children","p","container","justifyContent","item","gutterBottom","component","toUpperCase","setModal","key","align","Badge","badgeContent","levels","FormatLineSpacing","ButtonGroup","Button","open","CustomTable","setOpen","setLoading","reloadFunction","useForm","register","handleSubmit","errors","formState","sendRegister","items","user","putBuildings","_id","postBuildings","notification","message","description","Boolean","Dialog","fullWidth","maxWidth","DialogTitle","Typography","spinning","onSubmit","autoComplete","DialogContent","Grid","spacing","xs","md","TextField","label","autoFocus","defaultValue","name","error","required","maxLength","DialogActions","type","modal","setData","obtainData","getBuildings","res","Page","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}