{"version":3,"file":"static/js/14.85fdf0e6.chunk.js","mappings":"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","sources":["components/CustomAccordion.jsx","components/Page.jsx","components/selects/SelectTypeEquipment.jsx","pages/Equipment/components/ModalEquipments.jsx","pages/Equipment/components/ModalDetails.jsx","pages/Equipment/components/ModalMaintenance.jsx","pages/Equipment/components/Maintenance.jsx","pages/Equipment/Equipment.jsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport ArrowForwardIosSharpIcon from \"@mui/icons-material/ArrowForwardIosSharp\";\r\nimport MuiAccordion from \"@mui/material/Accordion\";\r\nimport MuiAccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport MuiAccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst Accordion = styled((props) => (\r\n  <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  \"&:not(:last-child)\": {\r\n    borderBottom: 0,\r\n  },\r\n  \"&:before\": {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => (\r\n  <MuiAccordionSummary\r\n    expandIcon={\r\n      <ArrowForwardIosSharpIcon sx={{ fontSize: \"0.9rem\", color: \"#fff\" }} />\r\n    }\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  color: \"#fff\",\r\n  flexDirection: \"row-reverse\",\r\n  \"& .MuiAccordionSummary-expandIconWrapper.Mui-expanded\": {\r\n    transform: \"rotate(90deg)\",\r\n  },\r\n  \"& .MuiAccordionSummary-content\": {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: \"1px solid rgba(0, 0, 0, .125)\",\r\n}));\r\n\r\nconst CustomizedAccordion = ({ title, children }) => {\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary>\r\n        <Typography>{title}</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Typography component=\"div\">{children}</Typography>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default CustomizedAccordion;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  FormHelperText,\r\n  Typography,\r\n  Paper,\r\n  Box,\r\n  Divider,\r\n  Grid,\r\n} from \"@mui/material\";\r\n\r\nconst Page = (props) => {\r\n  const { title, helper, itemComponent, children, ...rest } = props;\r\n  return (\r\n    <Box p={1}>\r\n      <Paper {...rest}>\r\n        <Box p={2}>\r\n          <Grid container justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Typography gutterBottom component=\"p\">\r\n                <FormHelperText component=\"span\">\r\n                  {helper && helper.toUpperCase()}\r\n                </FormHelperText>\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                <b>{title}</b>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>{itemComponent}</Grid>\r\n          </Grid>\r\n          <Divider />\r\n          {children}\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport { FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\r\n\r\nconst list = [\r\n  \"EQUIPOS BIOMÉDICOS\",\r\n  \"EQUIPOS MOBILIARIOS CLÍNICOS\",\r\n  \"EQUIPOS MOBILIARIOS ADMINISTRATIVOS\",\r\n  \"EQUIPOS MOBILIARIOS COMPLEMENTARIOS\",\r\n  \"EQUIPOS MOBILIARIOS ELECTROMECÁNICOS\",\r\n  \"EQUIPOS MOBILIARIOS DE SERVICIOS GENERALES\",\r\n  \"EQUIPOS MOBILIARIOS VEHÍCULOS\",\r\n];\r\n\r\nconst SelectTypeEquipment = ({ value, onChange }) => {\r\n  return (\r\n    <FormControl fullWidth variant=\"outlined\">\r\n      <InputLabel>TIPO DE EQUIPO</InputLabel>\r\n      <Select\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        label=\"TIPO DE EQUIPO\"\r\n      >\r\n        {list.map((el, index) => (\r\n          <MenuItem key={index} value={el} title={el}>\r\n            {el}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SelectTypeEquipment;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  FormHelperText,\r\n  Divider,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Spin, notification } from \"antd\";\r\nimport { postEquipments, putEquipments } from \"requests\";\r\nimport user from \"utils/userDetails\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport SelectTypeEquipment from \"../../../components/selects/SelectTypeEquipment\";\r\n\r\nconst ModalEquipments = (props) => {\r\n  const { open, setOpen, setLoading, loading, data, reloadFunction } = props;\r\n  const [type, setType] = useState(Boolean(data) ? data.type : null);\r\n  const [dates, setDates] = useState(Boolean(data) ? data.dates : []);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const sendRegister = async (items) => {\r\n    try {\r\n      if (!type) {\r\n        notification[\"warning\"]({ message: \"Campos requeridos...\" });\r\n        return;\r\n      }\r\n      setLoading(true);\r\n      if (!data) items[\"company\"] = user.idCompany;\r\n      items[\"type\"] = type;\r\n      items[\"dates\"] = dates;\r\n      if (data) await putEquipments(items, data._id);\r\n      else await postEquipments(items);\r\n      reloadFunction();\r\n      setOpen({ open: false });\r\n      notification[\"success\"]({\r\n        message: `Éxito!`,\r\n        description: `El equipo se ${\r\n          Boolean(data) ? \"actualizó\" : \"registró\"\r\n        } correctamente.`,\r\n      });\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Error!`,\r\n        description: `Ocurrió un error al ${\r\n          Boolean(data) ? \"actualizar\" : \"registrar\"\r\n        } la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth=\"md\">\r\n      <DialogTitle>\r\n        <Typography variant=\"p\" align=\"center\">\r\n          <b>{Boolean(data) ? \"EDITAR\" : \"AGREGAR\"} EQUIPO</b>\r\n        </Typography>\r\n      </DialogTitle>\r\n      <Spin spinning={loading}>\r\n        <form onSubmit={handleSubmit(sendRegister)} autoComplete=\"off\">\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <SelectTypeEquipment value={type} onChange={setType} />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  label=\"NOMBRE\"\r\n                  autoFocus\r\n                  fullWidth\r\n                  defaultValue={Boolean(data) ? data.name : \"\"}\r\n                  error={Boolean(errors?.name ?? false)}\r\n                  {...register(\"name\", { required: true, maxLength: 80 })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"ETIQUETA\"\r\n                  fullWidth\r\n                  defaultValue={Boolean(data) ? data.etiqueta : \"\"}\r\n                  error={Boolean(errors?.etiqueta ?? false)}\r\n                  {...register(\"etiqueta\", { required: true, maxLength: 80 })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"MARCA\"\r\n                  fullWidth\r\n                  defaultValue={Boolean(data) ? data.marca : \"\"}\r\n                  error={Boolean(errors?.marca ?? false)}\r\n                  {...register(\"marca\", { required: true, maxLength: 80 })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"MODELO\"\r\n                  fullWidth\r\n                  defaultValue={Boolean(data) ? data.modelo : \"\"}\r\n                  error={Boolean(errors?.modelo ?? false)}\r\n                  {...register(\"modelo\", { required: true, maxLength: 80 })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"SERIE\"\r\n                  fullWidth\r\n                  defaultValue={Boolean(data) ? data.serie : \"\"}\r\n                  error={Boolean(errors?.serie ?? false)}\r\n                  {...register(\"serie\", { required: true, maxLength: 80 })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormHelperText>FECHAS DE MANTENIMIENTO</FormHelperText>\r\n                <Divider />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                {dates.map((el, i) => (\r\n                  <TextField\r\n                    label={`Fecha de mantenimiento ${i + 1}`}\r\n                    fullWidth\r\n                    value={el.date}\r\n                    type=\"date\"\r\n                    InputLabelProps={{ shrink: true }}\r\n                    sx={{ mb: 1 }}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              dates.splice(i, 1);\r\n                              setDates([...dates]);\r\n                            }}\r\n                            color=\"error\"\r\n                          >\r\n                            <CloseIcon />\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    onChange={(e) => {\r\n                      dates[i].date = e.target.value;\r\n                      setDates([...dates]);\r\n                    }}\r\n                  />\r\n                ))}\r\n              </Grid>\r\n              <Grid item xs={12} align=\"center\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={() => {\r\n                    dates.push({ date: \"\" });\r\n                    setDates([...dates]);\r\n                  }}\r\n                >\r\n                  AGREGAR\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={() => setOpen({ open: false })}\r\n            >\r\n              CANCELAR\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              {Boolean(data) ? \"ACTUALIZAR\" : \"GUARDAR\"}\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Spin>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalEquipments;\r\n","import React, { Fragment, useRef } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Typography,\r\n  Button,\r\n  FormHelperText,\r\n  Grid,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  RadioGroup,\r\n  Radio,\r\n  List,\r\n  Paper,\r\n  Box,\r\n  Container,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Card,\r\n  CardContent,\r\n} from \"@mui/material\";\r\nimport moment from \"moment-timezone\";\r\nimport Print from \"react-to-print\";\r\nimport PrintIcon from \"@mui/icons-material/Print\";\r\n\r\nconst statusList = [\r\n  \"Bueno\",\r\n  \"Regular\",\r\n  \"Malo por reparar\",\r\n  \"Malo por baja\",\r\n  \"Inoperativo por reparar\",\r\n  \"Inoperativo por baja\",\r\n];\r\nconst listTM = [\"Programado\", \"Imprevisto\"];\r\nconst listOTM = [\"Preventivo\", \"Correctivo\"];\r\nconst listPrioridad = [\"Muy urgente\", \"Urgente\", \"Necesario\"];\r\nconst listTipoAtencion = [\r\n  \"RRHH Propios\",\r\n  \"Servicios mano de obra\",\r\n  \"Servicio a todo costo\",\r\n];\r\nconst listTipoEquipamiento = [\r\n  \"Biomédico\",\r\n  \"Electromecánido\",\r\n  \"Instalaciones\",\r\n  \"Infraestructura\",\r\n];\r\n\r\nconst pageStyle = `\r\n  @page {\r\n    size: auto;\r\n    margin: 5mm;\r\n  }\r\n\r\n  @media print {\r\n    body { -webkit-print-color-adjust: exact; padding: 50px !important; }\r\n    .pagebreak {\r\n      page-break-before: always;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModalDetails = ({ open, setOpen, data, equipment }) => {\r\n  const printPage = useRef(null);\r\n  let ttRecursos = 0;\r\n  let ttRRHH = 0;\r\n\r\n  return (\r\n    <Dialog open={open} onClose={() => setOpen({ open: false })} fullScreen>\r\n      <DialogContent>\r\n        {/* <Print\r\n          trigger={() => (\r\n            <Button variant=\"contained\" color=\"primary\" size=\"large\">\r\n              <PrintIcon />\r\n              IMPRIMIR\r\n            </Button>\r\n          )}\r\n          content={() => printPage.current}\r\n          documentTitle=\"TÍTULO DEL DOCUMENTO\"\r\n          removeAfterPrint={true}\r\n          pageStyle={pageStyle}\r\n        /> */}\r\n        <Container maxWidth=\"md\">\r\n          <Paper elevation={10}>\r\n            <div ref={printPage}>\r\n              <Box p={5}>\r\n                <Title title=\"1. DATOS DEL USUARIO (Ubicación física del equipo)\" />\r\n                <Grid item xs={12}>\r\n                  <Box pl={3}>\r\n                    <Grid container>\r\n                      <Grid item xs={12} md={4}>\r\n                        <Text title=\"Edificio\" value=\"LUGAR\" />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <Text title=\"Nivel\" value=\"LUGAR\" />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <Text title=\"Habitación\" value=\"LUGAR\" />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                </Grid>\r\n\r\n                <Title title=\"2. DATOS DEL BIEN (Equipo, Instalación o Ambiente)\" />\r\n                <Grid item xs={12}>\r\n                  <Box pl={3}>\r\n                    <Grid container>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Text\r\n                          title=\"Nombre del equipo\"\r\n                          value={equipment.name}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Text title=\"Tipo\" value={equipment.type} />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Text\r\n                          title=\"Etiqueta patrimonial\"\r\n                          value={equipment.etiqueta}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Text title=\"Marca\" value={equipment.marca} />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Text title=\"Modelo\" value={equipment.modelo} />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Text title=\"Serie\" value={equipment.serie} />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                </Grid>\r\n\r\n                <Grid container justifyContent=\"flex-end\">\r\n                  {data.programmed ? (\r\n                    <Fragment>\r\n                      <Title title=\"3. DATOS DE LA SOLICITUD\" />\r\n                      <Grid item xs={12}>\r\n                        <Box pl={3}>\r\n                          <Grid container>\r\n                            <Grid item xs={12} sm={12} md={4} lg={6}>\r\n                              <Text\r\n                                title=\"Descripción del problema\"\r\n                                value={data.description}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                              <Text\r\n                                title=\"Fecha de petición\"\r\n                                value={moment(data.date_request).format(\r\n                                  \"DD/MM/YYYY\"\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                              <Text\r\n                                title=\"Fecha de conformidad\"\r\n                                value={moment(data.date_conformidad).format(\r\n                                  \"DD/MM/YYYY\"\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Box>\r\n                      </Grid>\r\n                    </Fragment>\r\n                  ) : null}\r\n                  <Title title=\"4. DATOS DE DIAGNOSTICO Y PROGRAMACIÓN\" />\r\n                  <Grid item xs={12}>\r\n                    <Box pl={3}>\r\n                      <Grid container>\r\n                        <Grid item xs={12}>\r\n                          <Text\r\n                            title=\"Diagnostico de falla\"\r\n                            value={data.diagnostico}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={7} lg={8}>\r\n                          <Text\r\n                            title=\"Ejecutor del mantenimiento\"\r\n                            value={data.ejecutor_mantenimiento}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={5} lg={4}>\r\n                          <Text\r\n                            title=\"Fecha programada\"\r\n                            value={moment(data.date_programmed).format(\r\n                              \"DD/MM/YYYY\"\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <CheckBoxList\r\n                            title=\"Estado inicial\"\r\n                            value={data.status_start}\r\n                            row={true}\r\n                            list={statusList}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <Box pt={1} mb={2}>\r\n                            <Typography variant=\"subtitle2\" color=\"textPrimary\">\r\n                              Tipo de falla\r\n                            </Typography>\r\n                            <FormGroup row>\r\n                              {data.tipo_falla.map((el, index) => (\r\n                                <FormControlLabel\r\n                                  style={{ paddingRight: 5, margin: 0 }}\r\n                                  key={index}\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={el.check}\r\n                                      name={el.label}\r\n                                      style={{ padding: 0, marginRight: 2 }}\r\n                                    />\r\n                                  }\r\n                                  label={\r\n                                    <FormHelperText>{el.label}</FormHelperText>\r\n                                  }\r\n                                />\r\n                              ))}\r\n                            </FormGroup>\r\n                          </Box>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  <Title title=\"5. DATOS GENERALES DE LA ORDEN DEL TRABAJO DE MANTENIMIENTO\" />\r\n                  <Grid item xs={12}>\r\n                    <Box pl={3}>\r\n                      <Grid container>\r\n                        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                          <CheckBoxList\r\n                            title=\"Mantenimiento\"\r\n                            value={data.tipo_mantenimiento}\r\n                            row={false}\r\n                            list={listTM}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                          <CheckBoxList\r\n                            title=\"Tipo de OTM\"\r\n                            value={data.tipo_otm}\r\n                            row={false}\r\n                            list={listOTM}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                          <CheckBoxList\r\n                            title=\"Prioridad\"\r\n                            value={data.prioridad}\r\n                            row={false}\r\n                            list={listPrioridad}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                          <CheckBoxList\r\n                            title=\"Tipo de atención\"\r\n                            value={data.tipo_atencion}\r\n                            row={false}\r\n                            list={listTipoAtencion}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                          <CheckBoxList\r\n                            title=\"Tipo de equipamiento\"\r\n                            value={data.tipo_equipamiento}\r\n                            row={false}\r\n                            list={listTipoEquipamiento}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  <Title title=\"6. DATOS GENERALES DE LA EJECUCIÓN\" />\r\n                  <Grid item xs={12}>\r\n                    <Box pl={3}>\r\n                      <Grid container>\r\n                        <Grid item xs={12}>\r\n                          <List>\r\n                            {data.actividades_list.map((el, index) => (\r\n                              <Text\r\n                                title={`Actividad ${index + 1}`}\r\n                                value={el}\r\n                                key={index}\r\n                              />\r\n                            ))}\r\n                          </List>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                          <FormControlLabel\r\n                            control={<Checkbox checked={data.garantia} />}\r\n                            label=\"Garantía en meses\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                          <FormControlLabel\r\n                            control={<Checkbox checked={data.interrupcion} />}\r\n                            label=\"Interrupción al servicio\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                          <Text\r\n                            title=\"Fecha de inicio\"\r\n                            value={moment(data.datetime_start).format(\r\n                              \"DD/MM/YYYY, hh:mm a\"\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                          <Text\r\n                            title=\"Fecha de finalización\"\r\n                            value={moment(data.datetime_end).format(\r\n                              \"DD/MM/YYYY, hh:mm a\"\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <CheckBoxList\r\n                            title=\"Estado de finalización\"\r\n                            value={data.status_end}\r\n                            row={true}\r\n                            list={statusList}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  <Title title=\"7. DATOS DE LOS REPUESTOS (Partes, accesorios y materiales)\" />\r\n                  <Grid item xs={12}>\r\n                    <Box pl={3}>\r\n                      <TableContainer>\r\n                        <Table size=\"small\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                N°\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Código(ESSalud)\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Tipo\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Nombre y Características\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Unidad medída\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Cantidad\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Valor unitario\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Total\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {data.recursos.map((row, i) => {\r\n                              ttRecursos += Number(row.total);\r\n                              return (\r\n                                <TableRow key={i}>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {i + 1}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.code}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.type}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.name}{\" \"}\r\n                                    <FormHelperText>\r\n                                      {row.caract}\r\n                                    </FormHelperText>\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.und_m}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.cant}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.vlr_u}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.total}\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                            <TableRow>\r\n                              <TableCell align=\"right\" colSpan={7}>\r\n                                <b>TOTAL</b>\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                {ttRecursos}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  <Title title=\"8. DATOS DE LA MANO DE OBRA\" />\r\n                  <Grid item xs={12}>\r\n                    <Box pl={3}>\r\n                      <TableContainer>\r\n                        <Table size=\"small\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                N°\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Código\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Nombre Completo\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Precio/Hora\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Horas\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                Total\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {data.rrhh.map((row, i) => {\r\n                              ttRRHH += Number(row.total);\r\n                              return (\r\n                                <TableRow key={i}>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {i + 1}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.code}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.price_hour}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.hours}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ padding: 3 }}\r\n                                  >\r\n                                    {row.total}\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                            <TableRow>\r\n                              <TableCell align=\"right\" colSpan={5}>\r\n                                <b>TOTAL</b>\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" style={{ padding: 3 }}>\r\n                                {ttRRHH}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  <Title title=\"9. DATOS DE COSTOS TOTALES (S/.)\" />\r\n                  <Grid item xs={12}>\r\n                    <Box pl={3}>\r\n                      <Grid container spacing={1}>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Card variant=\"outlined\">\r\n                            <CardContent align=\"center\">\r\n                              <Typography variant=\"body1\">\r\n                                <b>COSTO DE REPUESTOS</b>\r\n                              </Typography>\r\n                              <Typography variant=\"body1\">\r\n                                S/ {ttRecursos}\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Card variant=\"outlined\">\r\n                            <CardContent align=\"center\">\r\n                              <Typography variant=\"body1\">\r\n                                <b>COSTO DE MANO DE OBRA</b>\r\n                              </Typography>\r\n                              <Typography variant=\"body1\">\r\n                                S/ {ttRRHH}\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Card variant=\"outlined\">\r\n                            <CardContent align=\"center\">\r\n                              <Typography variant=\"body1\">\r\n                                <b>COSTO ADICIONALES</b>\r\n                              </Typography>\r\n                              <Typography variant=\"body1\">\r\n                                S/ {data.aditional}\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <Card variant=\"outlined\">\r\n                            <CardContent align=\"center\">\r\n                              <Typography variant=\"h6\">\r\n                                <b>COSTO TOTAL</b>\r\n                              </Typography>\r\n                              <Typography variant=\"h6\">\r\n                                {\"S/ \"}\r\n                                {ttRecursos + ttRRHH + Number(data.aditional)}\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </Card>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </div>\r\n          </Paper>\r\n        </Container>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => setOpen({ open: false })}\r\n        >\r\n          SALIR\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalDetails;\r\n\r\nconst Title = ({ title, helper }) => {\r\n  return (\r\n    <Grid item xs={12} style={{ borderBottom: \"1px solid #ccc\" }}>\r\n      <Typography variant=\"subtitle1\">\r\n        <b> {title} </b> {helper}\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst Text = ({ title, value }) => {\r\n  return (\r\n    <Grid container style={{ borderBottom: \"1px solid #eee\" }}>\r\n      <Box mr={1}>\r\n        <Typography variant=\"subtitle2\" color=\"textPrimary\">\r\n          {title}\r\n        </Typography>\r\n      </Box>\r\n      <Typography variant=\"body2\" color=\"textSecondary\">\r\n        {value}\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst CheckBoxList = ({ title, value, row, list }) => {\r\n  return (\r\n    <Box pt={1}>\r\n      <Typography variant=\"subtitle2\" color=\"textPrimary\">\r\n        {title}\r\n      </Typography>\r\n      <RadioGroup row={row} value={value}>\r\n        {list.map((el, index) => (\r\n          <FormControlLabel\r\n            style={{ paddingRight: 5, margin: 0 }}\r\n            key={index}\r\n            value={el}\r\n            control={<Radio style={{ padding: 0, marginRight: 2 }} />}\r\n            label={<FormHelperText>{el}</FormHelperText>}\r\n          />\r\n        ))}\r\n      </RadioGroup>\r\n    </Box>\r\n  );\r\n};\r\n","import React, { Fragment, useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Divider,\r\n  FormControl,\r\n  FormGroup,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  RadioGroup,\r\n  Radio,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n  InputAdornment,\r\n  IconButton,\r\n  Container,\r\n  Paper,\r\n  Card,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  CardContent,\r\n} from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { Spin, notification } from \"antd\";\r\nimport { postMaintenances, putMaintenances } from \"requests\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nconst statusList = [\r\n  \"Bueno\",\r\n  \"Regular\",\r\n  \"Malo por reparar\",\r\n  \"Malo por baja\",\r\n  \"Inoperativo por reparar\",\r\n  \"Inoperativo por baja\",\r\n];\r\nconst listTM = [\"Programado\", \"Imprevisto\"];\r\nconst listOTM = [\"Preventivo\", \"Correctivo\"];\r\nconst listPrioridad = [\"Muy urgente\", \"Urgente\", \"Necesario\"];\r\nconst listTipoAtencion = [\r\n  \"RRHH Propios\",\r\n  \"Servicios mano de obra\",\r\n  \"Servicio a todo costo\",\r\n];\r\nconst listTipoEquipamiento = [\r\n  \"Biomédico\",\r\n  \"Electromecánido\",\r\n  \"Instalaciones\",\r\n  \"Infraestructura\",\r\n];\r\nconst listTF = [\r\n  { label: \"Eléctrica\", check: false },\r\n  { label: \"Mecánica\", check: false },\r\n  { label: \"Electrónica\", check: false },\r\n  { label: \"Operación\", check: false },\r\n  { label: \"Otros\", check: false },\r\n];\r\n\r\nconst ModalMaintenance = ({\r\n  open,\r\n  setOpen,\r\n  data,\r\n  equipment,\r\n  refreshFunction,\r\n  reloadFunction,\r\n  setMaintenance,\r\n}) => {\r\n  const flg = Boolean(data);\r\n  const [date, setDate] = useState(\"\");\r\n  const [tipoFalla, setTipoFalla] = useState(flg ? data.tipo_falla : listTF);\r\n  const [programmed, setProgrammed] = useState(flg ? data.programmed : false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [statusStart, setStatusStart] = useState(\r\n    flg ? data.status_start : statusList[0]\r\n  );\r\n  const [statusEnd, setStatusEnd] = useState(\r\n    flg ? data.status_end : statusList[0]\r\n  );\r\n  const [tipo_mantenimiento, setTipo_mantenimiento] = useState(\r\n    flg ? data.tipo_mantenimiento : listTM[0]\r\n  );\r\n  const [otm, setOtm] = useState(flg ? data.tipo_otm : listOTM[0]);\r\n  const [prioridad, setPrioridad] = useState(\r\n    flg ? data.prioridad : listPrioridad[0]\r\n  );\r\n  const [tAtencion, setTAtencion] = useState(\r\n    flg ? data.tipo_atencion : listTipoAtencion[0]\r\n  );\r\n  const [tEquipamento, setTEquipamento] = useState(\r\n    flg ? data.tipo_equipamiento : listTipoEquipamiento[0]\r\n  );\r\n  const [actions, setActions] = useState(flg ? data.actividades_list : []);\r\n  const [garantia, setGarantia] = useState(flg ? data.garantia : false);\r\n  const [interrupcion, setInterrupcion] = useState(\r\n    flg ? data.interrupcion : false\r\n  );\r\n  const [rcrss, setRcrss] = useState(flg ? data.recursos : []);\r\n  const [rrhh, setRrhh] = useState(flg ? data.rrhh : []);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const sendRegister = async (items) => {\r\n    setLoading(true);\r\n    try {\r\n      // GENERAL\r\n      items[\"equipment\"] = equipment._id;\r\n      // TRES\r\n      items[\"programmed\"] = programmed;\r\n      items[\"description\"] = items.description;\r\n      items[\"date_request\"] = items.date_request;\r\n      items[\"date_conformidad\"] = items.date_conformidad;\r\n      // CUATRO\r\n      items[\"diagnostico\"] = items.diagnostico;\r\n      items[\"ejecutor_mantenimiento\"] = items.ejecutor_mantenimiento;\r\n      items[\"date_programmed\"] = items.date_programmed;\r\n      items[\"status_start\"] = statusStart;\r\n      items[\"tipo_falla\"] = tipoFalla;\r\n      // CINCO\r\n      items[\"tipo_mantenimiento\"] = tipo_mantenimiento;\r\n      items[\"tipo_otm\"] = otm;\r\n      items[\"prioridad\"] = prioridad;\r\n      items[\"tipo_atencion\"] = tAtencion;\r\n      items[\"tipo_equipamiento\"] = tEquipamento;\r\n      // SEIS\r\n      items[\"actividades_list\"] = actions;\r\n      items[\"garantia\"] = garantia;\r\n      items[\"interrupcion\"] = interrupcion;\r\n      items[\"datetime_start\"] = items.datetime_start;\r\n      items[\"datetime_end\"] = items.datetime_end;\r\n      items[\"status_end\"] = statusEnd;\r\n      if (!flg) items[\"date\"] = date;\r\n      // SIETE\r\n      items[\"recursos\"] = rcrss;\r\n      // OCHO\r\n      items[\"rrhh\"] = rrhh;\r\n\r\n      if (flg) await putMaintenances(items, data._id);\r\n      else await postMaintenances(items);\r\n\r\n      refreshFunction(equipment._id);\r\n\r\n      if (flg) {\r\n        reloadFunction();\r\n        setMaintenance({ open: false, data: null });\r\n      }\r\n      setOpen({ open: false });\r\n      notification[\"success\"]({\r\n        message: `El mantenimiento se ${\r\n          flg ? \"actualizó\" : \"guardó\"\r\n        } correctamente`,\r\n      });\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Oops!`,\r\n        description: `Ocurrió un error al procesar la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChangeTF = (index) => {\r\n    tipoFalla[index].check = !tipoFalla[index].check;\r\n    setTipoFalla([...tipoFalla]);\r\n  };\r\n\r\n  const handleAddActions = () => {\r\n    actions.push(\"\");\r\n    setActions([...actions]);\r\n  };\r\n\r\n  const handleChangeText = (value, index) => {\r\n    actions[index] = value;\r\n    setActions([...actions]);\r\n  };\r\n\r\n  const handleRemoveAction = (index) => {\r\n    actions.splice(index, 1);\r\n    setActions([...actions]);\r\n  };\r\n\r\n  // RECURSOS\r\n\r\n  const hndRecursos = (value, name, index) => {\r\n    rcrss[index][name] = value;\r\n    setRcrss([...rcrss]);\r\n  };\r\n\r\n  const hndAddRecursos = () => {\r\n    rcrss.push({\r\n      code: \"\",\r\n      type: \"Ejecutor\",\r\n      name: \"\",\r\n      caract: \"\",\r\n      und_m: \"\",\r\n      cant: \"\",\r\n      vlr_u: \"\",\r\n      total: \"\",\r\n    });\r\n    setRcrss([...rcrss]);\r\n  };\r\n\r\n  const hndRemoveRecursos = (index) => {\r\n    rcrss.splice(index, 1);\r\n    setRcrss([...rcrss]);\r\n  };\r\n\r\n  // RECURSOS HUMANOS\r\n\r\n  const hndRRHH = (value, name, index) => {\r\n    rrhh[index][name] = value;\r\n    setRrhh([...rrhh]);\r\n  };\r\n\r\n  const hndAddRRHH = () => {\r\n    rrhh.push({\r\n      code: \"\",\r\n      name: \"\",\r\n      price_hour: \"\",\r\n      hours: \"\",\r\n      total: \"\",\r\n    });\r\n    setRrhh([...rrhh]);\r\n  };\r\n\r\n  const hndRemoveRRHH = (index) => {\r\n    rrhh.splice(index, 1);\r\n    setRrhh([...rrhh]);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullScreen>\r\n      <DialogTitle>\r\n        <Typography align=\"center\" variant=\"h5\" component=\"p\">\r\n          <b>{flg ? \"ACTUALIZAR\" : \"REGISTRAR\"} MANTENIMIENTO</b>\r\n        </Typography>\r\n      </DialogTitle>\r\n      <Spin spinning={loading}>\r\n        <form onSubmit={handleSubmit(sendRegister)} autoComplete=\"off\">\r\n          <DialogContent>\r\n            <Container maxWidth=\"lg\">\r\n              <Paper elevation={5}>\r\n                <Box p={5}>\r\n                  <Grid container spacing={2}>\r\n                    {!flg && (\r\n                      <Grid item xs={12}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel>\r\n                            {equipment.dates.length > 0\r\n                              ? \"FECHA DE MANTENIMIENTO\"\r\n                              : \"NO HAY FECHAS DE MANTENIMIENTO REGISTRADAS\"}\r\n                          </InputLabel>\r\n                          {equipment.dates.length > 0 && (\r\n                            <Select\r\n                              value={date}\r\n                              onChange={(e) => setDate(e.target.value)}\r\n                            >\r\n                              {equipment.dates.map(\r\n                                (el, i) =>\r\n                                  el.status && (\r\n                                    <MenuItem key={i} value={el.date}>\r\n                                      {el.date}\r\n                                    </MenuItem>\r\n                                  )\r\n                              )}\r\n                            </Select>\r\n                          )}\r\n                        </FormControl>\r\n                      </Grid>\r\n                    )}\r\n                    {(date || flg) && (\r\n                      <Fragment>\r\n                        <Title\r\n                          title=\"3. DATOS DE LA SOLICITUD\"\r\n                          helper={\r\n                            <span>\r\n                              (solo para actividades no programadas){\" \"}\r\n                              <FormControlLabel\r\n                                control={\r\n                                  <Checkbox\r\n                                    checked={programmed}\r\n                                    onChange={(a, b) => setProgrammed(b)}\r\n                                  />\r\n                                }\r\n                                label={programmed ? \"SI\" : \"NO\"}\r\n                              />{\" \"}\r\n                            </span>\r\n                          }\r\n                        />\r\n                        {programmed ? (\r\n                          <Fragment>\r\n                            <Grid item xs={12} sm={12} md={4} lg={6}>\r\n                              <TextField\r\n                                label=\"Descripción del problema\"\r\n                                fullWidth\r\n                                defaultValue={flg ? data.description : \"\"}\r\n                                error={Boolean(errors?.description ?? false)}\r\n                                {...register(\"description\", { required: true })}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                              <TextField\r\n                                label=\"Fecha de petición\"\r\n                                fullWidth\r\n                                type=\"date\"\r\n                                defaultValue={flg ? data.date_request : \"\"}\r\n                                error={Boolean(errors?.date_request ?? false)}\r\n                                {...register(\"date_request\", {\r\n                                  required: true,\r\n                                })}\r\n                                InputLabelProps={{ shrink: true }}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                              <TextField\r\n                                label=\"Fecha de conformidad\"\r\n                                fullWidth\r\n                                type=\"date\"\r\n                                defaultValue={flg ? data.date_conformidad : \"\"}\r\n                                error={Boolean(\r\n                                  errors?.date_conformidad ?? false\r\n                                )}\r\n                                {...register(\"date_conformidad\", {\r\n                                  required: true,\r\n                                })}\r\n                                InputLabelProps={{ shrink: true }}\r\n                              />\r\n                            </Grid>\r\n                          </Fragment>\r\n                        ) : null}\r\n                        <Title title=\"4. DATOS DE DIAGNOSTICO Y PROGRAMACIÓN\" />\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            label=\"Diagnostico de falla\"\r\n                            fullWidth\r\n                            defaultValue={flg ? data.diagnostico : \"\"}\r\n                            error={Boolean(errors?.diagnostico ?? false)}\r\n                            {...register(\"diagnostico\", { required: true })}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={8} lg={9}>\r\n                          <TextField\r\n                            label=\"Ejecutor del mantenimiento\"\r\n                            fullWidth\r\n                            defaultValue={\r\n                              flg ? data.ejecutor_mantenimiento : \"\"\r\n                            }\r\n                            error={Boolean(\r\n                              errors?.ejecutor_mantenimiento ?? false\r\n                            )}\r\n                            {...register(\"ejecutor_mantenimiento\", {\r\n                              required: true,\r\n                            })}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                          <TextField\r\n                            label=\"Fecha programada\"\r\n                            fullWidth\r\n                            type=\"date\"\r\n                            defaultValue={flg ? data.date_programmed : \"\"}\r\n                            error={Boolean(errors?.date_programmed ?? false)}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            {...register(\"date_programmed\", { required: true })}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\">\r\n                              Estado Inicial\r\n                            </FormLabel>\r\n                            <RadioGroup\r\n                              row\r\n                              value={statusStart}\r\n                              onChange={(a, b) => setStatusStart(b)}\r\n                            >\r\n                              {statusList.map((el, index) => (\r\n                                <FormControlLabel\r\n                                  key={index}\r\n                                  value={el}\r\n                                  control={<Radio />}\r\n                                  label={el}\r\n                                />\r\n                              ))}\r\n                            </RadioGroup>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <FormControl component=\"fieldset\" variant=\"standard\">\r\n                            <FormLabel component=\"legend\">\r\n                              Tipo de falla\r\n                            </FormLabel>\r\n                            <FormGroup row>\r\n                              {tipoFalla.map((el, index) => (\r\n                                <FormControlLabel\r\n                                  key={index}\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={el.check}\r\n                                      onChange={() => handleChangeTF(index)}\r\n                                      name={el.label}\r\n                                    />\r\n                                  }\r\n                                  label={el.label}\r\n                                />\r\n                              ))}\r\n                            </FormGroup>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Title title=\"5. DATOS GENERALES DE LA ORDEN DEL TRABAJO DE MANTENIMIENTO\" />\r\n                        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                          <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\">\r\n                              Tipo de mantenimiento\r\n                            </FormLabel>\r\n                            <RadioGroup\r\n                              value={tipo_mantenimiento}\r\n                              onChange={(a, b) => setTipo_mantenimiento(b)}\r\n                            >\r\n                              {listTM.map((el, index) => (\r\n                                <FormControlLabel\r\n                                  key={index}\r\n                                  value={el}\r\n                                  control={<Radio />}\r\n                                  label={el}\r\n                                />\r\n                              ))}\r\n                            </RadioGroup>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                          <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\">Tipo OTM</FormLabel>\r\n                            <RadioGroup\r\n                              value={otm}\r\n                              onChange={(a, b) => setOtm(b)}\r\n                            >\r\n                              {listOTM.map((el, index) => (\r\n                                <FormControlLabel\r\n                                  key={index}\r\n                                  value={el}\r\n                                  control={<Radio />}\r\n                                  label={el}\r\n                                />\r\n                              ))}\r\n                            </RadioGroup>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                          <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\">Prioridad</FormLabel>\r\n                            <RadioGroup\r\n                              value={prioridad}\r\n                              onChange={(a, b) => setPrioridad(b)}\r\n                            >\r\n                              {listPrioridad.map((el, index) => (\r\n                                <FormControlLabel\r\n                                  key={index}\r\n                                  value={el}\r\n                                  control={<Radio />}\r\n                                  label={el}\r\n                                />\r\n                              ))}\r\n                            </RadioGroup>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                          <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\">\r\n                              Tipo de atención\r\n                            </FormLabel>\r\n                            <RadioGroup\r\n                              value={tAtencion}\r\n                              onChange={(a, b) => setTAtencion(b)}\r\n                            >\r\n                              {listTipoAtencion.map((el, index) => (\r\n                                <FormControlLabel\r\n                                  key={index}\r\n                                  value={el}\r\n                                  control={<Radio />}\r\n                                  label={el}\r\n                                />\r\n                              ))}\r\n                            </RadioGroup>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                          <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\">\r\n                              Tipo de equipamiento\r\n                            </FormLabel>\r\n                            <RadioGroup\r\n                              value={tEquipamento}\r\n                              onChange={(a, b) => setTEquipamento(b)}\r\n                            >\r\n                              {listTipoEquipamiento.map((el, index) => (\r\n                                <FormControlLabel\r\n                                  key={index}\r\n                                  value={el}\r\n                                  control={<Radio />}\r\n                                  label={el}\r\n                                />\r\n                              ))}\r\n                            </RadioGroup>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Title title=\"6. DATOS GENERALES DE LA EJECUCIÓN\" />\r\n                        <Grid item xs={12}>\r\n                          <List\r\n                            subheader={\r\n                              <ListSubheader>\r\n                                ACTIVIDADES EJECUTADAS\r\n                              </ListSubheader>\r\n                            }\r\n                            dense\r\n                          >\r\n                            {actions.map((el, index) => (\r\n                              <ListItem key={index} dense>\r\n                                <ListItemText\r\n                                  primary={\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      value={el}\r\n                                      fullWidth\r\n                                      label={`Actividad ${index + 1}`}\r\n                                      size=\"small\"\r\n                                      onChange={(e) =>\r\n                                        handleChangeText(e.target.value, index)\r\n                                      }\r\n                                      InputProps={{\r\n                                        endAdornment: (\r\n                                          <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                              size=\"small\"\r\n                                              onClick={() =>\r\n                                                handleRemoveAction(index)\r\n                                              }\r\n                                            >\r\n                                              <CloseIcon color=\"error\" />\r\n                                            </IconButton>\r\n                                          </InputAdornment>\r\n                                        ),\r\n                                      }}\r\n                                    />\r\n                                  }\r\n                                />\r\n                              </ListItem>\r\n                            ))}\r\n                            <div align=\"center\">\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                onClick={handleAddActions}\r\n                              >\r\n                                AGREGAR\r\n                              </Button>\r\n                            </div>\r\n                          </List>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={6}\r\n                          md={4}\r\n                          lg={3}\r\n                          container\r\n                          alignItems=\"center\"\r\n                        >\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                checked={garantia}\r\n                                onChange={(a, b) => setGarantia(b)}\r\n                              />\r\n                            }\r\n                            label=\"Garantía en meses\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={6}\r\n                          md={4}\r\n                          lg={3}\r\n                          container\r\n                          alignItems=\"center\"\r\n                        >\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                checked={interrupcion}\r\n                                onChange={(a, b) => setInterrupcion(b)}\r\n                              />\r\n                            }\r\n                            label=\"Interrupción al servicio\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                          <TextField\r\n                            label=\"Fecha de inicio\"\r\n                            fullWidth\r\n                            type=\"datetime-local\"\r\n                            defaultValue={flg ? data.datetime_start : \"\"}\r\n                            error={Boolean(errors?.datetime_start ?? false)}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            {...register(\"datetime_start\", { required: true })}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                          <TextField\r\n                            label=\"Fecha de finalización\"\r\n                            fullWidth\r\n                            type=\"datetime-local\"\r\n                            defaultValue={flg ? data.datetime_end : \"\"}\r\n                            error={Boolean(errors?.datetime_end ?? false)}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            {...register(\"datetime_end\", { required: true })}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\">\r\n                              Estado de finalización\r\n                            </FormLabel>\r\n                            <RadioGroup\r\n                              row\r\n                              value={statusEnd}\r\n                              onChange={(a, b) => setStatusEnd(b)}\r\n                            >\r\n                              {statusList.map((el, index) => (\r\n                                <FormControlLabel\r\n                                  key={index}\r\n                                  value={el}\r\n                                  control={<Radio />}\r\n                                  label={el}\r\n                                />\r\n                              ))}\r\n                            </RadioGroup>\r\n                          </FormControl>\r\n                        </Grid>\r\n\r\n                        <Title title=\"7. DATOS DE LOS REPUESTOS (Partes, accesorios y materiales)\" />\r\n                        <ListSubheader>\r\n                          DESCRIPCIÓN DE RECURSOS MATERIALES\r\n                        </ListSubheader>\r\n                        <Grid item xs={12}>\r\n                          {rcrss.map((el, i) => (\r\n                            <Card variant=\"outlined\" key={i}>\r\n                              <CardContent>\r\n                                <Grid container>\r\n                                  <Grid\r\n                                    item\r\n                                    style={{ width: \"calc((100%) - 40px)\" }}\r\n                                  >\r\n                                    <Grid container spacing={1}>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.code}\r\n                                          onChange={(e) =>\r\n                                            hndRecursos(\r\n                                              e.target.value,\r\n                                              \"code\",\r\n                                              i\r\n                                            )\r\n                                          }\r\n                                          fullWidth\r\n                                          label=\"Código de repuesto (ESSALUD)\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                                        <FormControl\r\n                                          variant=\"outlined\"\r\n                                          fullWidth\r\n                                          size=\"small\"\r\n                                        >\r\n                                          <InputLabel>\r\n                                            Tipo Adquisición\r\n                                          </InputLabel>\r\n                                          <Select\r\n                                            label=\"Tipo Adquisición\"\r\n                                            value={el.type}\r\n                                            onChange={(e) =>\r\n                                              hndRecursos(\r\n                                                e.target.value,\r\n                                                \"type\",\r\n                                                i\r\n                                              )\r\n                                            }\r\n                                          >\r\n                                            <MenuItem value=\"Ejecutor\">\r\n                                              Ejecutor\r\n                                            </MenuItem>\r\n                                            <MenuItem value=\"Almacén\">\r\n                                              Almacén\r\n                                            </MenuItem>\r\n                                            <MenuItem value=\"Caja Chica\">\r\n                                              Caja Chica\r\n                                            </MenuItem>\r\n                                          </Select>\r\n                                        </FormControl>\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.name}\r\n                                          onChange={(e) =>\r\n                                            hndRecursos(\r\n                                              e.target.value,\r\n                                              \"name\",\r\n                                              i\r\n                                            )\r\n                                          }\r\n                                          fullWidth\r\n                                          label=\"Nombre\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.caract}\r\n                                          onChange={(e) =>\r\n                                            hndRecursos(\r\n                                              e.target.value,\r\n                                              \"caract\",\r\n                                              i\r\n                                            )\r\n                                          }\r\n                                          fullWidth\r\n                                          label=\"Caracterísctica técnicas\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.und_m}\r\n                                          onChange={(e) =>\r\n                                            hndRecursos(\r\n                                              e.target.value,\r\n                                              \"und_m\",\r\n                                              i\r\n                                            )\r\n                                          }\r\n                                          fullWidth\r\n                                          label=\"Unidad de medida\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.cant}\r\n                                          onChange={(e) => {\r\n                                            hndRecursos(\r\n                                              e.target.value,\r\n                                              \"cant\",\r\n                                              i\r\n                                            );\r\n                                            hndRecursos(\r\n                                              Number(el.cant) *\r\n                                                Number(el.vlr_u),\r\n                                              \"total\",\r\n                                              i\r\n                                            );\r\n                                          }}\r\n                                          fullWidth\r\n                                          type=\"number\"\r\n                                          label=\"Cantidad\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.vlr_u}\r\n                                          type=\"number\"\r\n                                          onChange={(e) => {\r\n                                            hndRecursos(\r\n                                              e.target.value,\r\n                                              \"vlr_u\",\r\n                                              i\r\n                                            );\r\n                                            hndRecursos(\r\n                                              Number(el.cant) *\r\n                                                Number(el.vlr_u),\r\n                                              \"total\",\r\n                                              i\r\n                                            );\r\n                                          }}\r\n                                          fullWidth\r\n                                          label=\"Valor Unitario\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.total ? el.total : \"\"}\r\n                                          disabled\r\n                                          fullWidth\r\n                                          label=\"Total\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                  <Grid\r\n                                    item\r\n                                    style={{ width: 40 }}\r\n                                    container\r\n                                    justifyContent=\"center\"\r\n                                    alignItems=\"center\"\r\n                                  >\r\n                                    <IconButton\r\n                                      size=\"small\"\r\n                                      onClick={() => hndRemoveRecursos(i)}\r\n                                    >\r\n                                      <CloseIcon color=\"error\" />\r\n                                    </IconButton>\r\n                                  </Grid>\r\n                                </Grid>\r\n                              </CardContent>\r\n                            </Card>\r\n                          ))}\r\n                          <div align=\"center\">\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              onClick={hndAddRecursos}\r\n                            >\r\n                              AGREGAR\r\n                            </Button>\r\n                          </div>\r\n                        </Grid>\r\n\r\n                        <Title title=\"8. DATOS DE LA MANO DE OBRA\" />\r\n                        <ListSubheader>\r\n                          DESCRIPCIÓN DE RECURSOS HUMANOS\r\n                        </ListSubheader>\r\n                        <Grid item xs={12}>\r\n                          {rrhh.map((el, i) => (\r\n                            <Card variant=\"outlined\" key={i}>\r\n                              <CardContent>\r\n                                <Grid container>\r\n                                  <Grid\r\n                                    item\r\n                                    style={{ width: \"calc((100%) - 40px)\" }}\r\n                                  >\r\n                                    <Grid container spacing={1}>\r\n                                      <Grid item xs={12} sm={6} md={6} lg={3}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.code}\r\n                                          onChange={(e) =>\r\n                                            hndRRHH(e.target.value, \"code\", i)\r\n                                          }\r\n                                          fullWidth\r\n                                          label=\"Código del personal\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={6} lg={3}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.name}\r\n                                          onChange={(e) =>\r\n                                            hndRRHH(e.target.value, \"name\", i)\r\n                                          }\r\n                                          fullWidth\r\n                                          label=\"Nombre del personal\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          type=\"number\"\r\n                                          value={el.price_hour}\r\n                                          onChange={(e) => {\r\n                                            hndRRHH(\r\n                                              e.target.value,\r\n                                              \"price_hour\",\r\n                                              i\r\n                                            );\r\n                                            hndRRHH(\r\n                                              Number(el.price_hour) *\r\n                                                Number(el.hours),\r\n                                              \"total\",\r\n                                              i\r\n                                            );\r\n                                          }}\r\n                                          fullWidth\r\n                                          label=\"Costo x hora\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.hours}\r\n                                          type=\"number\"\r\n                                          onChange={(e) => {\r\n                                            hndRRHH(e.target.value, \"hours\", i);\r\n                                            hndRRHH(\r\n                                              Number(el.price_hour) *\r\n                                                Number(el.hours),\r\n                                              \"total\",\r\n                                              i\r\n                                            );\r\n                                          }}\r\n                                          fullWidth\r\n                                          label=\"Horas\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={12} md={4} lg={2}>\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          value={el.total}\r\n                                          disabled\r\n                                          fullWidth\r\n                                          type=\"number\"\r\n                                          label=\"Total\"\r\n                                          size=\"small\"\r\n                                        />\r\n                                      </Grid>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                  <Grid\r\n                                    item\r\n                                    style={{ width: 40 }}\r\n                                    container\r\n                                    justifyContent=\"center\"\r\n                                    alignItems=\"center\"\r\n                                  >\r\n                                    <IconButton\r\n                                      size=\"small\"\r\n                                      onClick={() => hndRemoveRRHH(i)}\r\n                                    >\r\n                                      <CloseIcon color=\"error\" />\r\n                                    </IconButton>\r\n                                  </Grid>\r\n                                </Grid>\r\n                              </CardContent>\r\n                            </Card>\r\n                          ))}\r\n                          <div align=\"center\">\r\n                            <Button variant=\"contained\" onClick={hndAddRRHH}>\r\n                              AGREGAR\r\n                            </Button>\r\n                          </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            label=\"Gastos adicionales\"\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            inputProps={{ step: 0.01, min: 0 }}\r\n                            defaultValue={flg ? data.aditional : \"\"}\r\n                            error={Boolean(errors?.aditional ?? false)}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            {...register(\"aditional\", { required: true })}\r\n                          />\r\n                        </Grid>\r\n                      </Fragment>\r\n                    )}\r\n                  </Grid>\r\n                </Box>\r\n              </Paper>\r\n            </Container>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={() => setOpen(false)}\r\n            >\r\n              CANCELAR\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              disabled={!Boolean(date || (flg && true))}\r\n            >\r\n              GUARDAR\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Spin>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalMaintenance;\r\n\r\nconst Title = ({ title, helper }) => {\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Typography variant=\"subtitle1\">\r\n        <b> {title} </b> {helper}\r\n      </Typography>\r\n      <Divider />\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Fab,\r\n  Tooltip,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n} from \"@mui/material\";\r\nimport Page from \"components/Page\";\r\nimport { getMaintenances } from \"requests\";\r\nimport { Empty, notification, Spin } from \"antd\";\r\nimport ModalDetails from \"./ModalDetails\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\nimport ModalMaintenance from \"./ModalMaintenance\";\r\nimport moment from \"moment-timezone\";\r\n\r\nconst Equipment = ({ equipment, setMaintenance, reloadFunction }) => {\r\n  const [modalDetails, setModalDetails] = useState({ open: false, data: null });\r\n  const [modal, setModal] = useState({ data: null, open: false });\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (equipment) {\r\n      obtainData(equipment._id);\r\n    }\r\n  }, [equipment]);\r\n\r\n  const obtainData = async (code) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await getMaintenances(code);\r\n      setData(res.reverse());\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Oops!`,\r\n        description: `Ocurrió un error al obtener la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page\r\n      helper=\"EQUIPOS\"\r\n      title={`MANTENIMIENTO DE ${equipment.name}`}\r\n      itemComponent={\r\n        <Fragment>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            onClick={() => setMaintenance({ open: false, data: null })}\r\n          >\r\n            VOLVER\r\n          </Button>{\" \"}\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            onClick={() => setModal({ open: true, data: null })}\r\n          >\r\n            REGISTRAR\r\n          </Button>\r\n        </Fragment>\r\n      }\r\n    >\r\n      <br />\r\n      <Spin spinning={loading}>\r\n        <Grid container spacing={2}>\r\n          {data.length > 0 ? (\r\n            <Grid item xs={12}>\r\n              <TableContainer>\r\n                <Table className=\"table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\">¿Programado?</TableCell>\r\n                      <TableCell align=\"center\">Diagnostico</TableCell>\r\n                      <TableCell align=\"center\">Fecha Programada</TableCell>\r\n                      <TableCell align=\"center\">Estado Inicial</TableCell>\r\n                      <TableCell align=\"center\">Estado Final</TableCell>\r\n                      <TableCell align=\"center\">Acciones</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data.map((el, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell align=\"center\">\r\n                          {el.programmed ? \"SI\" : \"NO\"}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{el.diagnostico}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {moment(el.date_programmed).format(\"DD/MM/YYYY\")}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{el.status_start}</TableCell>\r\n                        <TableCell align=\"center\">{el.status_end}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Tooltip\r\n                            placement=\"top-end\"\r\n                            title=\"Modificar información del mantenimiento\"\r\n                          >\r\n                            <Fab\r\n                              size=\"small\"\r\n                              color=\"secondary\"\r\n                              onClick={() => setModal({ open: true, data: el })}\r\n                            >\r\n                              <SettingsIcon />\r\n                            </Fab>\r\n                          </Tooltip>\r\n                          <Tooltip placement=\"top-end\" title=\"Resumen\">\r\n                            <Fab\r\n                              size=\"small\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                setModalDetails({ open: true, data: el })\r\n                              }\r\n                            >\r\n                              <MoreHorizIcon />\r\n                            </Fab>\r\n                          </Tooltip>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          ) : (\r\n            <Grid item xs={12} align=\"center\">\r\n              <Empty\r\n                description={`AQUÍ SE MOSTRARÁN LOS MANTENIMIENTO DE ${equipment.name}`}\r\n              />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Spin>\r\n      {modal.open && (\r\n        <ModalMaintenance\r\n          open={modal.open}\r\n          setOpen={setModal}\r\n          data={modal.data}\r\n          equipment={equipment}\r\n          refreshFunction={obtainData}\r\n          reloadFunction={reloadFunction}\r\n          setMaintenance={setMaintenance}\r\n        />\r\n      )}\r\n      {modalDetails.open && (\r\n        <ModalDetails\r\n          open={modalDetails.open}\r\n          setOpen={setModalDetails}\r\n          data={modalDetails.data}\r\n          equipment={equipment}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Equipment;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  Fab,\r\n  Tooltip,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport Page from \"components/Page\";\r\nimport { getEquipments } from \"requests\";\r\nimport ModalEquipments from \"./components/ModalEquipments\";\r\nimport { Empty, notification, Spin } from \"antd\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\nimport Maintenance from \"./components/Maintenance\";\r\nimport CustomizedAccordion from \"../../components/CustomAccordion\";\r\n\r\nconst Equipment = () => {\r\n  const [modal, setModal] = useState({ data: null, open: false });\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [maintenance, setMaintenance] = useState({ data: null, open: false });\r\n\r\n  useEffect(() => {\r\n    obtainData();\r\n  }, []);\r\n\r\n  const obtainData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await getEquipments();\r\n      setData(res);\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Oops!`,\r\n        description: `Ocurrió un error al obtener la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {maintenance.open ? (\r\n        <Maintenance\r\n          equipment={maintenance.data}\r\n          setMaintenance={setMaintenance}\r\n          reloadFunction={obtainData}\r\n        />\r\n      ) : (\r\n        <Page\r\n          helper=\"EQUIPOS\"\r\n          title=\"EQUIPOS\"\r\n          itemComponent={\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              onClick={() => setModal({ open: true, data: null })}\r\n            >\r\n              AGREGAR EQUIPO\r\n            </Button>\r\n          }\r\n        >\r\n          <br />\r\n          <Spin spinning={loading}>\r\n            {data.length > 0 ? (\r\n              data.map((el, index) => (\r\n                <CustomizedAccordion title={el.type} key={index}>\r\n                  <Grid container spacing={1}>\r\n                    {el.items.map((row, ind2) => (\r\n                      <Grid item xs={12} sm={6} md={4} lg={4} xl={3} key={ind2}>\r\n                        <CustomCard\r\n                          row={row}\r\n                          setModal={setModal}\r\n                          setMaintenance={setMaintenance}\r\n                        />\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                </CustomizedAccordion>\r\n              ))\r\n            ) : (\r\n              <Empty description=\"AQUÍ SE MOSTRARÁN LOS EQUIPOS REGISTRADOS\" />\r\n            )}\r\n          </Spin>\r\n          {modal.open && (\r\n            <ModalEquipments\r\n              open={modal.open}\r\n              setOpen={setModal}\r\n              data={modal.data}\r\n              setLoading={setLoading}\r\n              loading={loading}\r\n              reloadFunction={obtainData}\r\n            />\r\n          )}\r\n        </Page>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Equipment;\r\n\r\nconst CustomCard = ({ row, setModal, setMaintenance }) => {\r\n  return (\r\n    <Card style={{ height: \"100%\" }}>\r\n      <CardContent style={{ height: \"calc((100%) - 60px)\" }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          {row.name}\r\n        </Typography>\r\n        <Divider />\r\n        <Typography color=\"text.secondary\" variant=\"body2\">\r\n          Etiqueta • {row.etiqueta}\r\n        </Typography>\r\n        <Divider />\r\n        <Typography color=\"text.secondary\" variant=\"body2\">\r\n          Marca • {row.marca}\r\n        </Typography>\r\n        <Divider />\r\n        <Typography color=\"text.secondary\" variant=\"body2\">\r\n          Modelo • {row.modelo}\r\n        </Typography>\r\n        <Divider />\r\n        <Typography color=\"text.secondary\" variant=\"body2\">\r\n          Serie • {row.serie}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Tooltip title=\"Editar\" placement=\"top-end\">\r\n          <Fab\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            onClick={() => setModal({ data: row, open: true })}\r\n          >\r\n            <EditIcon />\r\n          </Fab>\r\n        </Tooltip>\r\n        <Tooltip title=\"Mantenimiento\" placement=\"top-end\">\r\n          <Fab\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            onClick={() => setMaintenance({ data: row, open: true })}\r\n          >\r\n            <SettingsIcon />\r\n          </Fab>\r\n        </Tooltip>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n"],"names":["Accordion","styled","props","disableGutters","elevation","square","theme","border","palette","divider","borderBottom","display","AccordionSummary","expandIcon","sx","fontSize","color","backgroundColor","primary","main","flexDirection","transform","marginLeft","spacing","AccordionDetails","MuiAccordionDetails","padding","borderTop","title","children","React","expanded","setExpanded","onChange","component","helper","itemComponent","rest","p","container","justifyContent","item","gutterBottom","toUpperCase","variant","list","value","FormControl","fullWidth","InputLabel","Select","e","target","label","map","el","index","MenuItem","open","setOpen","setLoading","loading","data","reloadFunction","useState","Boolean","type","setType","dates","setDates","useForm","register","handleSubmit","errors","formState","sendRegister","items","notification","message","user","putEquipments","_id","postEquipments","description","Dialog","maxWidth","DialogTitle","Typography","align","spinning","onSubmit","autoComplete","DialogContent","Grid","xs","sm","TextField","autoFocus","defaultValue","name","error","required","maxLength","etiqueta","marca","modelo","serie","FormHelperText","Divider","i","date","InputLabelProps","shrink","mb","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","splice","Close","Button","push","DialogActions","statusList","listTM","listOTM","listPrioridad","listTipoAtencion","listTipoEquipamiento","equipment","printPage","useRef","ttRecursos","ttRRHH","onClose","fullScreen","Container","Paper","ref","Box","Title","pl","md","Text","programmed","Fragment","lg","moment","date_request","format","date_conformidad","diagnostico","ejecutor_mantenimiento","date_programmed","CheckBoxList","status_start","row","pt","FormGroup","tipo_falla","FormControlLabel","style","paddingRight","margin","control","Checkbox","checked","check","marginRight","tipo_mantenimiento","tipo_otm","prioridad","tipo_atencion","tipo_equipamiento","List","actividades_list","garantia","interrupcion","datetime_start","datetime_end","status_end","TableContainer","Table","size","TableHead","TableRow","TableCell","TableBody","recursos","Number","total","code","caract","und_m","cant","vlr_u","colSpan","rrhh","price_hour","hours","Card","CardContent","aditional","mr","RadioGroup","Radio","listTF","refreshFunction","setMaintenance","flg","setDate","tipoFalla","setTipoFalla","setProgrammed","statusStart","setStatusStart","statusEnd","setStatusEnd","setTipo_mantenimiento","otm","setOtm","setPrioridad","tAtencion","setTAtencion","tEquipamento","setTEquipamento","actions","setActions","setGarantia","setInterrupcion","rcrss","setRcrss","setRrhh","putMaintenances","postMaintenances","hndRecursos","hndRRHH","length","status","a","b","FormLabel","handleChangeTF","subheader","ListSubheader","dense","ListItem","ListItemText","handleChangeText","handleRemoveAction","alignItems","width","disabled","inputProps","step","min","modalDetails","setModalDetails","modal","setModal","setData","useEffect","obtainData","getMaintenances","res","reverse","Page","className","Tooltip","placement","Fab","Settings","MoreHoriz","maintenance","getEquipments","Maintenance","ind2","xl","CustomCard","height","CardActions","Edit"],"sourceRoot":""}