{"version":3,"file":"static/js/138.429cbbb6.chunk.js","mappings":"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","sources":["components/Page.jsx","components/selects/SelectUsers.jsx","../node_modules/@mui/material/styles/cssUtils.js","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js","pages/Histories/components/ModalHistories.jsx","pages/Histories/components/TableAttentions.jsx","pages/Histories/components/ModalAttentions.jsx","pages/Histories/components/ModalAttentionDetail.jsx","pages/Histories/components/ModalRecipe.jsx","pages/Histories/components/Attention.jsx","pages/Histories/Histories.jsx","../node_modules/@mui/icons-material/KeyboardArrowDown.js","../node_modules/@mui/icons-material/KeyboardArrowUp.js","../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","../node_modules/@mui/system/esm/Box/Box.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  FormHelperText,\r\n  Typography,\r\n  Paper,\r\n  Box,\r\n  Divider,\r\n  Grid,\r\n} from \"@mui/material\";\r\n\r\nconst Page = (props) => {\r\n  const { title, helper, itemComponent, children, ...rest } = props;\r\n  return (\r\n    <Box p={1}>\r\n      <Paper {...rest}>\r\n        <Box p={2}>\r\n          <Grid container justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Typography gutterBottom component=\"p\">\r\n                <FormHelperText component=\"span\">\r\n                  {helper && helper.toUpperCase()}\r\n                </FormHelperText>\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                <b>{title}</b>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>{itemComponent}</Grid>\r\n          </Grid>\r\n          <Divider />\r\n          {children}\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Page;\r\n","import React, { Fragment } from \"react\";\r\nimport { Select } from \"antd\";\r\nimport { FormHelperText } from \"@mui/material\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst SelectUsers = ({ data = [], value, onChange, title = \"PERSONAL\" }) => {\r\n  const removeAccents = (str) => {\r\n    return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n  };\r\n\r\n  const filterOptions = (inputValue, option) => {\r\n    const title = removeAccents(option.props.title.toLowerCase());\r\n    return title.includes(inputValue.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <FormHelperText>{title}</FormHelperText>\r\n      <Select\r\n        size=\"large\"\r\n        style={{ width: \"100%\" }}\r\n        showSearch\r\n        value={value}\r\n        onChange={onChange}\r\n        filterOption={filterOptions}\r\n      >\r\n        <Option key={null} value={null} title={\"\"}>\r\n          -- Ninguno --\r\n        </Option>\r\n        {data.map((el, index) => (\r\n          <Option key={index} value={el._id} title={`${el.start} - ${el.end}`}>\r\n            {el.f_name} {el.l_name}{\" \"}\r\n            <FormHelperText component=\"span\">\r\n              {el.rol} {el.dni}\r\n            </FormHelperText>\r\n          </Option>\r\n        ))}\r\n      </Select>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SelectUsers;\r\n","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n} // Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\n\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n} // Emulate the sass function \"unitless\"\n\nexport function toUnitless(length) {\n  return parseFloat(length);\n} // Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\n\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length); // Optimize for cases where `from` and `to` units are accidentally the same.\n\n    if (fromUnit === toUnit) {\n      return length;\n    } // Convert input length to pixels.\n\n\n    let pxLength = toUnitless(length);\n\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    } // Convert length in pixels to the output unit\n\n\n    let outputLength = pxLength;\n\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n} // fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\n\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\n\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n\n    if (transform !== null) {\n      value = transform(value);\n    }\n\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\n\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(90deg, transparent, ${0}, transparent);\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, theme.palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n\n  const {\n    animation = 'pulse',\n    className,\n    component = 'span',\n    height,\n    style,\n    variant = 'text',\n    width\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'text']), PropTypes.string]),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Spin, notification } from \"antd\";\r\nimport { getPatients, postHistories } from \"requests\";\r\nimport SelectUsers from \"../../../components/selects/SelectUsers\";\r\nimport user from \"utils/userDetails\";\r\n\r\nconst ModalCompany = ({\r\n  open,\r\n  setOpen,\r\n  setLoading,\r\n  loading,\r\n  reloadFunction,\r\n  correlative,\r\n}) => {\r\n  const formatCRTV = correlative.padStart(12, \"0\");\r\n  const [patient, setPatient] = useState(null);\r\n  const [patients, setPatients] = useState([]);\r\n\r\n  useEffect(() => {\r\n    obtainData();\r\n  }, []);\r\n\r\n  const obtainData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await getPatients();\r\n      setPatients(res);\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Oops!`,\r\n        description: `Ocurrió un error al obtener la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const sendRegister = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (!formatCRTV || !patient || !user.idCompany) {\r\n        notification[\"warning\"]({ message: \"Campos requeridos...\" });\r\n        return;\r\n      }\r\n      let items = {\r\n        history_code: formatCRTV,\r\n        patient,\r\n        company: user.idCompany,\r\n      };\r\n\r\n      await postHistories(items);\r\n      reloadFunction();\r\n      setOpen(false);\r\n      notification[\"success\"]({\r\n        message: `Éxito!`,\r\n        description: `La historia se generó correctamente.`,\r\n      });\r\n    } catch (error) {\r\n      notification[\"warning\"]({\r\n        message: `El paciente ya tiene una historia clínica generada.`,\r\n        description: \"Solo debe agregar atenciones.\",\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth=\"md\">\r\n      <DialogTitle>\r\n        <Typography variant=\"h5\" align=\"center\" component=\"p\">\r\n          <b>GENERAR HISTORIA CLÍNICA</b>\r\n        </Typography>\r\n      </DialogTitle>\r\n      <Spin spinning={loading}>\r\n        <DialogContent>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={6} container alignItems=\"flex-end\">\r\n              <TextField\r\n                label=\"Código de la historia\"\r\n                fullWidth\r\n                size=\"small\"\r\n                disabled\r\n                defaultValue={formatCRTV}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <SelectUsers\r\n                data={patients}\r\n                value={patient}\r\n                onChange={setPatient}\r\n                title=\"Pacientes\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={() => setOpen(false)}\r\n          >\r\n            CANCELAR\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={sendRegister}>\r\n            GUARDAR\r\n          </Button>\r\n        </DialogActions>\r\n      </Spin>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalCompany;\r\n","import React, { Fragment } from \"react\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\nimport { ButtonGroup, Button, Grid } from \"@mui/material\";\r\nimport moment from \"moment-timezone\";\r\nimport { getRecipes } from \"requests\";\r\nimport { Spin, notification } from \"antd\";\r\n\r\nconst TableAttentions = ({\r\n  data,\r\n  loading,\r\n  setLoading,\r\n  setDetails,\r\n  setRecipe,\r\n}) => {\r\n  const [open, setOpen] = React.useState(null);\r\n\r\n  return (\r\n    <Spin spinning={loading} component=\"div\">\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell />\r\n              <TableCell align=\"center\">Fecha</TableCell>\r\n              <TableCell align=\"center\">Motivo</TableCell>\r\n              <TableCell align=\"center\">Inicio estimado</TableCell>\r\n              <TableCell align=\"center\">Fin estimado</TableCell>\r\n              <TableCell align=\"center\">Acciones</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          {data.length > 0 ? (\r\n            <TableBody>\r\n              {data.map((row, index) => (\r\n                <Fragment key={index}>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          if (index === open) setOpen(null);\r\n                          else setOpen(index);\r\n                        }}\r\n                      >\r\n                        {open === index ? (\r\n                          <KeyboardArrowUpIcon />\r\n                        ) : (\r\n                          <KeyboardArrowDownIcon />\r\n                        )}\r\n                      </IconButton>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {moment(row.date).format(\"DD/MM/YYYY\")}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">{row.quote.urgency}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {moment(row.quote.start).format(\"hh:mm a\")}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {moment(row.quote.end).format(\"hh:mm a\")}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Button\r\n                        onClick={() => setDetails({ open: true, data: row })}\r\n                        variant=\"contained\"\r\n                      >\r\n                        DETALLES\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n\r\n                  <TableRow>\r\n                    <TableCell\r\n                      style={{ paddingBottom: 0, paddingTop: 0 }}\r\n                      colSpan={6}\r\n                    >\r\n                      <Collapse\r\n                        in={open === index}\r\n                        timeout=\"auto\"\r\n                        unmountOnExit\r\n                      >\r\n                        <Row\r\n                          setRecipe={setRecipe}\r\n                          row={row}\r\n                          setLoading={setLoading}\r\n                        />\r\n                      </Collapse>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </Fragment>\r\n              ))}\r\n            </TableBody>\r\n          ) : (\r\n            <Typography variant=\"caption\" align=\"center\">\r\n              AQUÍ SE MOSTRARÁN LAS ATENCIONES\r\n            </Typography>\r\n          )}\r\n        </Table>\r\n      </TableContainer>\r\n    </Spin>\r\n  );\r\n};\r\n\r\nexport default TableAttentions;\r\n\r\nfunction Row(props) {\r\n  const { row, setRecipe, setLoading } = props;\r\n  const [data, setData] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    obtainData();\r\n  }, [row]);\r\n\r\n  const obtainData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await getRecipes(row._id);\r\n      setData(res);\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        description: `Ocurrió un error al obtener la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n          Receta médica\r\n        </Typography>\r\n        <Button\r\n          onClick={() => setRecipe({ open: true, data: row })}\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n        >\r\n          AGREGAR\r\n        </Button>\r\n      </Grid>\r\n      <Table size=\"small\" aria-label=\"purchases\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">Emisión</TableCell>\r\n            <TableCell align=\"center\">Expiración</TableCell>\r\n            <TableCell align=\"center\">Indicaciones</TableCell>\r\n            <TableCell align=\"center\">Receta</TableCell>\r\n            <TableCell align=\"center\">Acciones</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        {data.length > 0 ? (\r\n          <TableBody>\r\n            {data.map((el, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell align=\"center\">{el.emision_date}</TableCell>\r\n                <TableCell align=\"center\">{el.expiration_date}</TableCell>\r\n                <TableCell align=\"center\">{el.indicaciones}</TableCell>\r\n                <TableCell align=\"center\">{el.receta}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Button size=\"small\" variant=\"contained\">\r\n                    Editar\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        ) : (\r\n          <Typography variant=\"caption\" align=\"center\">\r\n            AQUÍ SE MOSTRARÁN LAS RECETAS\r\n          </Typography>\r\n        )}\r\n      </Table>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { Spin, notification } from \"antd\";\r\nimport { postAttentions, getQuoteByUser } from \"requests\";\r\nimport moment from \"moment-timezone\";\r\nimport user from \"utils/userDetails\";\r\n\r\nconst ModalAttentions = (props) => {\r\n  const { open, setOpen, setLoading, loading, reloadFunction, attention } =\r\n    props;\r\n\r\n  const [quote, setQuote] = useState(\"\");\r\n  const [quotes, setQuotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    obtainData();\r\n  }, []);\r\n\r\n  const obtainData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await getQuoteByUser(attention.patient._id);\r\n      if (res.length > 0) {\r\n        setQuotes(res);\r\n        setQuote(res[0]._id);\r\n      }\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Oops!`,\r\n        description: `Ocurrió un error al obtener la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const sendRegister = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let items = {\r\n        date: moment().format(\"YYYY-MM-DDTHH:mm:ss\"),\r\n        quote: quote,\r\n        history: attention._id,\r\n        company: user.idCompany,\r\n      };\r\n      await postAttentions(items);\r\n      reloadFunction();\r\n      setOpen(false);\r\n      notification[\"success\"]({\r\n        message: `Éxito!`,\r\n        description: `La atención se generó correctamente.`,\r\n      });\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Error!`,\r\n        description: `Ocurrió un error al generar la atención.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth=\"md\">\r\n      <DialogTitle>\r\n        <Typography variant=\"subtitle1\" align=\"center\" component=\"p\">\r\n          <b>GENERAR ATENCIÓN</b>\r\n        </Typography>\r\n      </DialogTitle>\r\n      <Spin spinning={loading}>\r\n        <DialogContent>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6} md={8} lg={9}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel>\r\n                  {quotes.length > 0\r\n                    ? \"CITAS\"\r\n                    : \"El paciente no tiene citas pendientes.\"}\r\n                </InputLabel>\r\n                {quotes.length > 0 && (\r\n                  <Select\r\n                    label=\"CITAS\"\r\n                    value={quote}\r\n                    onChange={(e) => setQuote(e.target.value)}\r\n                  >\r\n                    {quotes.map((el) => (\r\n                      <MenuItem value={el._id} key={el._id}>\r\n                        {el.urgency}\r\n                        <FormHelperText\r\n                          component=\"span\"\r\n                          style={{ marginLeft: 10 }}\r\n                        >\r\n                          {moment(el.start).format(\"ddd D MMM, hh:mm a\")}\r\n                        </FormHelperText>\r\n                        <FormHelperText\r\n                          component=\"span\"\r\n                          style={{ margin: \"0 10px\" }}\r\n                        >\r\n                          a\r\n                        </FormHelperText>\r\n                        <FormHelperText component=\"span\">\r\n                          {moment(el.end).format(\"hh:mm a\")}\r\n                        </FormHelperText>\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                )}\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n              <TextField\r\n                label=\"Fecha\"\r\n                fullWidth\r\n                disabled\r\n                value={moment().format(\"YYYY-MM-DD HH:mm\")}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            size=\"large\"\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={() => setOpen(false)}\r\n          >\r\n            CANCELAR\r\n          </Button>\r\n          {quotes.length > 0 && (\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={sendRegister}\r\n              type=\"submit\"\r\n            >\r\n              GENERAR NUEVA ATENCIÓN\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Spin>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalAttentions;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Divider,\r\n  FormHelperText,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  DialogActions,\r\n} from \"@mui/material\";\r\nimport { Spin, notification } from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { putAttentions } from \"requests\";\r\nimport moment from \"moment-timezone\";\r\n\r\nconst ModalAttentions = (props) => {\r\n  const { open, setOpen, setLoading, data, loading, reloadFunction } = props;\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const {\r\n    date,\r\n    ult_viaje,\r\n\r\n    dm,\r\n    hta,\r\n    fimicos,\r\n    lueticos,\r\n    cancer,\r\n    otros,\r\n    patologia,\r\n    // ANTECEDENTES FAMILIARES\r\n    menarca,\r\n    rc,\r\n    upm,\r\n    menopausia,\r\n    anticonceptivo,\r\n    irs,\r\n    n_parejas,\r\n    paridad,\r\n    tipo_parto,\r\n    pap,\r\n    colposcopia,\r\n    mamografia,\r\n    eco_mama,\r\n    bi_rads,\r\n    alergias,\r\n    antecedentes_quirugicos,\r\n    // MOTIVO CONSULTA\r\n    motivo,\r\n    enfermedad_actual,\r\n    tiempo_enfermedad,\r\n    // OTHER PART\r\n    pa,\r\n    fc,\r\n    fr,\r\n    sat,\r\n    t,\r\n    diuresis,\r\n    agp,\r\n    peso,\r\n    talla,\r\n    imc,\r\n    tcsc,\r\n    piel,\r\n    ar,\r\n    cv,\r\n    neurologico,\r\n    urinario,\r\n    mamas,\r\n    // OTHER\r\n    peritoneales,\r\n    rha,\r\n    dolor_localizado,\r\n    masas,\r\n    // OTHER\r\n    c_vaginal,\r\n    cervix,\r\n    oce,\r\n    mov,\r\n    lesiones,\r\n    tamano,\r\n    movil,\r\n    consistencia,\r\n    dolor,\r\n    superficie,\r\n    anexos,\r\n    // DIAGNOSTICOS\r\n    diagnosticos,\r\n    plantratamiento_result,\r\n    recomendaciones_result,\r\n    // OTHER\r\n    alta_result,\r\n\r\n    history: { history_code },\r\n    quote: { patient, status, urgency, _id: quoteId },\r\n    _id,\r\n  } = data;\r\n\r\n  const [mnps, setMnps] = useState(menopausia ? menopausia : \"NO\");\r\n  const [ptnls, setPtnls] = useState(peritoneales ? peritoneales : \"NO\");\r\n  const [oceState, setOceState] = useState(oce ? oce : \"Cerrados\");\r\n  const [movState, setMovState] = useState(mov ? mov : \"NO\");\r\n  const [movilState, setMovilState] = useState(movil ? movil : \"NO\");\r\n  const [dolorState, setDolorState] = useState(dolor ? dolor : \"NO\");\r\n\r\n  const updateRegister = async (items) => {\r\n    setLoading(true);\r\n    try {\r\n      items[\"quoteId\"] = quoteId;\r\n      items[\"menopausia\"] = mnps;\r\n      items[\"peritoneales\"] = ptnls;\r\n      items[\"oce\"] = oceState;\r\n      items[\"mov\"] = movState;\r\n      items[\"movil\"] = movilState;\r\n      items[\"dolor\"] = dolorState;\r\n\r\n      await putAttentions(items, _id);\r\n\r\n      reloadFunction();\r\n      notification[\"success\"]({\r\n        message: `La atención se registró correctamente.`,\r\n      });\r\n      setOpen({ open: false });\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Ocurrió un error al guardar la atención. ${error}`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullScreen>\r\n      <Spin spinning={loading}>\r\n        <form onSubmit={handleSubmit(updateRegister)} autoComplete=\"off\">\r\n          <DialogContent>\r\n            <Grid container spacing={1} justifyContent=\"space-between\">\r\n              <Grid item>\r\n                <Title title={`HISTORIA CLÍNICA N° ${history_code}`} />\r\n              </Grid>\r\n              <Grid item>\r\n                <Title\r\n                  title={`FECHA DE ATENCIÓN ${moment(date).format(\r\n                    \"DD/MM/YYYY\"\r\n                  )}`}\r\n                />\r\n              </Grid>\r\n\r\n              <Content title=\"FILIACIÓN\">\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} sm={6} md={8}>\r\n                    <Text\r\n                      title=\"Paciente\"\r\n                      value={`${patient.f_name} ${patient.l_name}`}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Text title={patient.t_doc} value={patient.n_doc} />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Text\r\n                      title=\"Fecha de nacimiento\"\r\n                      value={patient.date_born}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Text title=\"Correo\" value={patient.email} />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Text title=\"Ocupación\" value={patient.ocupacion} />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Text title=\"Celular\" value={patient.phone} />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Text title=\"Sexo\" value={patient.sex} />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Text\r\n                      title=\"Dirección\"\r\n                      value={`${patient.ubigeo.address} ${patient.ubigeo.district}`}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Content>\r\n\r\n              <Content title=\"ANTECEDENTES HEREDO - FAMILIARES\">\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"DM\"\r\n                      defaultValue={dm}\r\n                      error={Boolean(errors?.dm ?? false)}\r\n                      {...register(\"dm\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"HTA\"\r\n                      defaultValue={hta}\r\n                      error={Boolean(errors?.hta ?? false)}\r\n                      {...register(\"hta\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Fímicos (TB)\"\r\n                      defaultValue={fimicos}\r\n                      error={Boolean(errors?.fimicos ?? false)}\r\n                      {...register(\"fimicos\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Luéticos\"\r\n                      defaultValue={lueticos}\r\n                      error={Boolean(errors?.lueticos ?? false)}\r\n                      {...register(\"lueticos\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Cáncer\"\r\n                      defaultValue={cancer}\r\n                      error={Boolean(errors?.cancer ?? false)}\r\n                      {...register(\"cancer\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Otros\"\r\n                      defaultValue={otros}\r\n                      error={Boolean(errors?.otros ?? false)}\r\n                      {...register(\"otros\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Especificar patología - parentesco\"\r\n                      defaultValue={patologia}\r\n                      error={Boolean(errors?.patologia ?? false)}\r\n                      {...register(\"patologia\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Content>\r\n\r\n              <Content title=\"ANTECEDENTES PERSONALES\">\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Menarca\"\r\n                      defaultValue={menarca}\r\n                      error={Boolean(errors?.menarca ?? false)}\r\n                      {...register(\"menarca\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"RC [Reg|Irreg]\"\r\n                      defaultValue={rc}\r\n                      error={Boolean(errors?.rc ?? false)}\r\n                      {...register(\"rc\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"UPM\"\r\n                      defaultValue={upm}\r\n                      error={Boolean(errors?.upm ?? false)}\r\n                      {...register(\"upm\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n                      <InputLabel>Menopausia</InputLabel>\r\n                      <Select\r\n                        label=\"Menopausia\"\r\n                        value={mnps}\r\n                        onChange={(e) => setMnps(e.target.value)}\r\n                      >\r\n                        <MenuItem value=\"SI\">SI</MenuItem>\r\n                        <MenuItem value=\"NO\">NO</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Método anticonceptivo\"\r\n                      defaultValue={anticonceptivo}\r\n                      error={Boolean(errors?.anticonceptivo ?? false)}\r\n                      {...register(\"anticonceptivo\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"IRS\"\r\n                      defaultValue={irs}\r\n                      error={Boolean(errors?.irs ?? false)}\r\n                      {...register(\"irs\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Nro parejas\"\r\n                      defaultValue={n_parejas}\r\n                      error={Boolean(errors?.n_parejas ?? false)}\r\n                      {...register(\"n_parejas\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Paridad\"\r\n                      defaultValue={paridad}\r\n                      error={Boolean(errors?.paridad ?? false)}\r\n                      {...register(\"paridad\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Tipo de partos\"\r\n                      defaultValue={tipo_parto}\r\n                      error={Boolean(errors?.tipo_parto ?? false)}\r\n                      {...register(\"tipo_parto\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"PAP\"\r\n                      defaultValue={pap}\r\n                      error={Boolean(errors?.pap ?? false)}\r\n                      {...register(\"pap\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Colposcopia\"\r\n                      defaultValue={colposcopia}\r\n                      error={Boolean(errors?.colposcopia ?? false)}\r\n                      {...register(\"colposcopia\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Mamografía\"\r\n                      defaultValue={mamografia}\r\n                      error={Boolean(errors?.mamografia ?? false)}\r\n                      {...register(\"mamografia\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Eco Mama\"\r\n                      defaultValue={eco_mama}\r\n                      error={Boolean(errors?.eco_mama ?? false)}\r\n                      {...register(\"eco_mama\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Bi-rads\"\r\n                      defaultValue={bi_rads}\r\n                      error={Boolean(errors?.bi_rads ?? false)}\r\n                      {...register(\"bi_rads\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Alergias\"\r\n                      defaultValue={alergias}\r\n                      error={Boolean(errors?.alergias ?? false)}\r\n                      {...register(\"alergias\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Antecedentes quirurgicos\"\r\n                      defaultValue={antecedentes_quirugicos}\r\n                      error={Boolean(errors?.antecedentes_quirugicos ?? false)}\r\n                      {...register(\"antecedentes_quirugicos\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Content>\r\n\r\n              <Content title=\"MOTIVO DE LA CONSULTA\">\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  size=\"small\"\r\n                  label=\"-\"\r\n                  multiline\r\n                  minRows={3}\r\n                  defaultValue={motivo}\r\n                  error={Boolean(errors?.motivo ?? false)}\r\n                  {...register(\"motivo\", {\r\n                    required: false,\r\n                  })}\r\n                />\r\n              </Content>\r\n\r\n              <Content title=\"ENFERMEDAD ACTUAL\">\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  size=\"small\"\r\n                  label=\"-\"\r\n                  multiline\r\n                  minRows={3}\r\n                  defaultValue={enfermedad_actual}\r\n                  error={Boolean(errors?.enfermedad_actual ?? false)}\r\n                  {...register(\"enfermedad_actual\", {\r\n                    required: false,\r\n                  })}\r\n                />\r\n              </Content>\r\n\r\n              <Content title=\"EXAMEN FÍSICO\">\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12}>\r\n                    <Divider />\r\n                    <Typography>FV</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"PA\"\r\n                      defaultValue={pa}\r\n                      error={Boolean(errors?.pa ?? false)}\r\n                      {...register(\"pa\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"FC\"\r\n                      defaultValue={fc}\r\n                      error={Boolean(errors?.fc ?? false)}\r\n                      {...register(\"fc\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"FR\"\r\n                      defaultValue={fr}\r\n                      error={Boolean(errors?.fr ?? false)}\r\n                      {...register(\"fr\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Sat O2\"\r\n                      defaultValue={sat}\r\n                      error={Boolean(errors?.sat ?? false)}\r\n                      {...register(\"sat\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"T\"\r\n                      defaultValue={t}\r\n                      error={Boolean(errors?.t ?? false)}\r\n                      {...register(\"t\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Diuresis\"\r\n                      defaultValue={diuresis}\r\n                      error={Boolean(errors?.diuresis ?? false)}\r\n                      {...register(\"diuresis\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"AGP\"\r\n                      defaultValue={agp}\r\n                      error={Boolean(errors?.agp ?? false)}\r\n                      {...register(\"agp\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Peso\"\r\n                      defaultValue={peso}\r\n                      error={Boolean(errors?.peso ?? false)}\r\n                      {...register(\"peso\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Talla\"\r\n                      defaultValue={talla}\r\n                      error={Boolean(errors?.talla ?? false)}\r\n                      {...register(\"talla\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"IMC\"\r\n                      defaultValue={imc}\r\n                      error={Boolean(errors?.imc ?? false)}\r\n                      {...register(\"imc\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"TCSC\"\r\n                      defaultValue={tcsc}\r\n                      error={Boolean(errors?.tcsc ?? false)}\r\n                      {...register(\"tcsc\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Piel\"\r\n                      defaultValue={piel}\r\n                      error={Boolean(errors?.piel ?? false)}\r\n                      {...register(\"piel\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"AR\"\r\n                      defaultValue={ar}\r\n                      error={Boolean(errors?.ar ?? false)}\r\n                      {...register(\"ar\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"CV\"\r\n                      defaultValue={cv}\r\n                      error={Boolean(errors?.cv ?? false)}\r\n                      {...register(\"cv\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Neurológico\"\r\n                      defaultValue={neurologico}\r\n                      error={Boolean(errors?.neurologico ?? false)}\r\n                      {...register(\"neurologico\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Urinario\"\r\n                      defaultValue={urinario}\r\n                      error={Boolean(errors?.urinario ?? false)}\r\n                      {...register(\"urinario\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Mamas\"\r\n                      defaultValue={mamas}\r\n                      error={Boolean(errors?.mamas ?? false)}\r\n                      {...register(\"mamas\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Divider />\r\n                    <Typography>Abdomen</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n                      <InputLabel>Signos peritoneales</InputLabel>\r\n                      <Select\r\n                        label=\"Signos peritoneales\"\r\n                        value={ptnls}\r\n                        onChange={(e) => setPtnls(e.target.value)}\r\n                      >\r\n                        <MenuItem value=\"SI\">SI</MenuItem>\r\n                        <MenuItem value=\"NO\">NO</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"RHA\"\r\n                      defaultValue={rha}\r\n                      error={Boolean(errors?.rha ?? false)}\r\n                      {...register(\"rha\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Dolor localizado\"\r\n                      defaultValue={dolor_localizado}\r\n                      error={Boolean(errors?.dolor_localizado ?? false)}\r\n                      {...register(\"dolor_localizado\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Masas\"\r\n                      defaultValue={masas}\r\n                      error={Boolean(errors?.masas ?? false)}\r\n                      {...register(\"masas\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Divider />\r\n                    <Typography>Examen genital</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Canal vaginal\"\r\n                      defaultValue={c_vaginal}\r\n                      error={Boolean(errors?.c_vaginal ?? false)}\r\n                      {...register(\"c_vaginal\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Cérvix\"\r\n                      defaultValue={cervix}\r\n                      error={Boolean(errors?.cervix ?? false)}\r\n                      {...register(\"cervix\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n                      <InputLabel>OCE/OCI</InputLabel>\r\n                      <Select\r\n                        label=\"OCE/OCI\"\r\n                        value={oceState}\r\n                        onChange={(e) => setOceState(e.target.value)}\r\n                      >\r\n                        <MenuItem value=\"Abiertos\">Abiertos</MenuItem>\r\n                        <MenuItem value=\"Cerrados\">Cerrados</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n                      <InputLabel>Dolor a la mov</InputLabel>\r\n                      <Select\r\n                        label=\"Dolor de la mov\"\r\n                        value={movState}\r\n                        onChange={(e) => setMovState(e.target.value)}\r\n                      >\r\n                        <MenuItem value=\"SI\">SI</MenuItem>\r\n                        <MenuItem value=\"NO\">NO</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Lesiones\"\r\n                      defaultValue={lesiones}\r\n                      error={Boolean(errors?.lesiones ?? false)}\r\n                      {...register(\"lesiones\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Divider />\r\n                    <Typography>Útero</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Tamaño\"\r\n                      defaultValue={tamano}\r\n                      error={Boolean(errors?.tamano ?? false)}\r\n                      {...register(\"tamano\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n                      <InputLabel>Móvil</InputLabel>\r\n                      <Select\r\n                        label=\"Móvil\"\r\n                        value={movilState}\r\n                        onChange={(e) => setMovilState(e.target.value)}\r\n                      >\r\n                        <MenuItem value=\"SI\">SI</MenuItem>\r\n                        <MenuItem value=\"NO\">NO</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Consistencia\"\r\n                      defaultValue={consistencia}\r\n                      error={Boolean(errors?.consistencia ?? false)}\r\n                      {...register(\"consistencia\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n                      <InputLabel>Dolor</InputLabel>\r\n                      <Select\r\n                        label=\"Dolor\"\r\n                        value={dolorState}\r\n                        onChange={(e) => setDolorState(e.target.value)}\r\n                      >\r\n                        <MenuItem value=\"SI\">SI</MenuItem>\r\n                        <MenuItem value=\"NO\">NO</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Superficie\"\r\n                      defaultValue={superficie}\r\n                      error={Boolean(errors?.superficie ?? false)}\r\n                      {...register(\"superficie\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Anexos\"\r\n                      defaultValue={anexos}\r\n                      error={Boolean(errors?.anexos ?? false)}\r\n                      {...register(\"anexos\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Content>\r\n\r\n              <Content title=\"DIAGNÓSTICOS\">\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  size=\"small\"\r\n                  label=\"-\"\r\n                  multiline\r\n                  minRows={3}\r\n                  defaultValue={diagnosticos}\r\n                  error={Boolean(errors?.diagnosticos ?? false)}\r\n                  {...register(\"diagnosticos\", {\r\n                    required: false,\r\n                  })}\r\n                />\r\n              </Content>\r\n\r\n              <Content title=\"PLAN DE TRABAJO\">\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  size=\"small\"\r\n                  label=\"-\"\r\n                  multiline\r\n                  minRows={3}\r\n                  defaultValue={plantratamiento_result}\r\n                  error={Boolean(errors?.plantratamiento_result ?? false)}\r\n                  {...register(\"plantratamiento_result\", {\r\n                    required: false,\r\n                  })}\r\n                />\r\n              </Content>\r\n\r\n              <Content title=\"RECOMENDACIONES\">\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  size=\"small\"\r\n                  label=\"-\"\r\n                  multiline\r\n                  minRows={3}\r\n                  defaultValue={recomendaciones_result}\r\n                  error={Boolean(errors?.recomendaciones_result ?? false)}\r\n                  {...register(\"recomendaciones_result\", {\r\n                    required: false,\r\n                  })}\r\n                />\r\n              </Content>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={() => setOpen(false)}\r\n              disabled={loading}\r\n            >\r\n              CANCELAR\r\n            </Button>{\" \"}\r\n            <Button\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n            >\r\n              GUARDAR\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Spin>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalAttentions;\r\n\r\nconst Text = ({ title, value }) => {\r\n  return (\r\n    <Typography component=\"p\" variant=\"body1\">\r\n      <b>{title}</b>\r\n      {\" • \"}\r\n      <FormHelperText component=\"span\">{value}</FormHelperText>\r\n      <Divider />\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst Title = ({ title }) => {\r\n  return (\r\n    <Typography variant=\"h5\">\r\n      <b>{title}</b>\r\n      <Divider />\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst Content = ({ title, children }) => {\r\n  return (\r\n    <Grid container justifyContent=\"flex-end\" spacing={1}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"subtitle1\">\r\n          <b>{title}</b>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={11}>\r\n        {children}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Spin, notification } from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { postRecipes } from \"requests\";\r\nimport moment from \"moment-timezone\";\r\n\r\nconst ModalRecipe = (props) => {\r\n  const { open, setOpen, setLoading, loading, data, reloadFunction } = props;\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const sendRegister = async (items) => {\r\n    try {\r\n      setLoading(true);\r\n      items[\"historydetail\"] = data._id;\r\n      await postRecipes(items);\r\n      reloadFunction();\r\n      notification[\"success\"]({\r\n        message: `Éxito!`,\r\n        description: `La receta se generó correctamente.`,\r\n      });\r\n      setOpen({ open: false });\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Error!`,\r\n        description: `Ocurrió un error al generar la atención.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth=\"md\">\r\n      <DialogTitle>\r\n        <Typography variant=\"h5\" align=\"center\" component=\"p\">\r\n          <b>RECETA MÉDICA</b>\r\n        </Typography>\r\n      </DialogTitle>\r\n      <Spin spinning={loading}>\r\n        <form onSubmit={handleSubmit(sendRegister)} autoComplete=\"off\">\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6} md={6} lg={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  size=\"small\"\r\n                  type=\"date\"\r\n                  defaultValue={moment().format(\"YYYY-MM-DD\")}\r\n                  label=\"Fecha de expiración\"\r\n                  error={Boolean(errors?.expiration_date ?? false)}\r\n                  inputProps={{ min: moment().format(\"YYYY-MM-DD\") }}\r\n                  {...register(\"expiration_date\", { required: true })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} lg={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  size=\"small\"\r\n                  type=\"date\"\r\n                  defaultValue={moment().format(\"YYYY-MM-DD\")}\r\n                  label=\"Fecha de emisión\"\r\n                  inputProps={{ min: moment().format(\"YYYY-MM-DD\") }}\r\n                  error={Boolean(errors?.emision_date ?? false)}\r\n                  {...register(\"emision_date\", { required: true })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  size=\"small\"\r\n                  multiline\r\n                  minRows={3}\r\n                  label=\"Recete médica\"\r\n                  error={Boolean(errors?.receta ?? false)}\r\n                  {...register(\"receta\", { required: true })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  size=\"small\"\r\n                  multiline\r\n                  minRows={3}\r\n                  label=\"Indicaciones\"\r\n                  error={Boolean(errors?.indicaciones ?? false)}\r\n                  {...register(\"indicaciones\", { required: true })}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={() => setOpen(false)}\r\n            >\r\n              CANCELAR\r\n            </Button>\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              CREAR\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Spin>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalRecipe;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport Page from \"components/Page\";\r\nimport { notification } from \"antd\";\r\nimport { getAttentions } from \"requests\";\r\nimport TableAttentions from \"./TableAttentions\";\r\nimport ModalAttentions from \"./ModalAttentions\";\r\nimport ModalAttentionDetail from \"./ModalAttentionDetail\";\r\nimport ModalRecipe from \"./ModalRecipe\";\r\n\r\nconst Equipment = ({ data: hisData, setView }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [details, setDetails] = useState({ open: false, data: null });\r\n  const [recipe, setRecipe] = useState({ open: false, data: null });\r\n\r\n  useEffect(() => {\r\n    obtainData();\r\n  }, []);\r\n\r\n  const obtainData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await getAttentions(hisData._id);\r\n      setData(res.reverse());\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Oops!`,\r\n        description: `Ocurrió un error al obtener la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page\r\n      helper=\"HISTORIAS CLÍNICAS » ATENCIONES\"\r\n      title={`${hisData.patient.f_name} ${hisData.patient.l_name}`}\r\n      itemComponent={\r\n        <Fragment>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            onClick={() => setView({ open: false })}\r\n          >\r\n            VOLVER\r\n          </Button>{\" \"}\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            onClick={() => setModal(true)}\r\n          >\r\n            AGREGAR ATENCIÓN\r\n          </Button>\r\n        </Fragment>\r\n      }\r\n    >\r\n      <TableAttentions\r\n        loading={loading}\r\n        data={data}\r\n        setDetails={setDetails}\r\n        setRecipe={setRecipe}\r\n        setLoading={setLoading}\r\n      />\r\n\r\n      {modal && (\r\n        <ModalAttentions\r\n          open={modal}\r\n          setOpen={setModal}\r\n          loading={loading}\r\n          setLoading={setLoading}\r\n          reloadFunction={obtainData}\r\n          attention={hisData}\r\n        />\r\n      )}\r\n\r\n      {details.open && (\r\n        <ModalAttentionDetail\r\n          open={details.open}\r\n          setOpen={setDetails}\r\n          data={details.data}\r\n          loading={loading}\r\n          setLoading={setLoading}\r\n          reloadFunction={obtainData}\r\n        />\r\n      )}\r\n\r\n      {recipe.open && (\r\n        <ModalRecipe\r\n          open={recipe.open}\r\n          setOpen={setRecipe}\r\n          data={recipe.data}\r\n          loading={loading}\r\n          setLoading={setLoading}\r\n          reloadFunction={obtainData}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Equipment;\r\n","import React, { useEffect, useState, Fragment } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  Skeleton,\r\n  FormHelperText,\r\n  TextField,\r\n  Fab,\r\n  InputAdornment,\r\n} from \"@mui/material\";\r\nimport Page from \"components/Page\";\r\nimport { notification, Spin } from \"antd\";\r\nimport { getHistories } from \"requests\";\r\nimport ModalHistories from \"./components/ModalHistories\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Attention from \"./components/Attention\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nconst Equipment = () => {\r\n  const [modalH, setModalH] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [paramSerach, setParamSerach] = useState(\"\");\r\n  const [viewAtt, setViewAtt] = useState({ data: null, open: false });\r\n  const [data, setData] = useState([]);\r\n  const [dataBase, setDataBase] = useState([]);\r\n\r\n  useEffect(() => {\r\n    obtainData();\r\n  }, []);\r\n\r\n  const obtainData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await getHistories();\r\n      setData(res.reverse());\r\n      setDataBase(res.reverse());\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Oops!`,\r\n        description: `Ocurrió un error al obtener la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetSearch = () => {\r\n    setParamSerach(\"\");\r\n    setData([...dataBase]);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (paramSerach) {\r\n      let txt = paramSerach.toLowerCase();\r\n      let refactor = dataBase.filter((el) => {\r\n        let {\r\n          history_code,\r\n          patient: { f_name, l_name, t_doc, n_doc },\r\n        } = el;\r\n\r\n        if (\r\n          history_code.includes(txt) ||\r\n          f_name.toLowerCase().includes(txt) ||\r\n          l_name.toLowerCase().includes(txt) ||\r\n          t_doc.toLowerCase().includes(txt) ||\r\n          n_doc.toLowerCase().includes(txt)\r\n        ) {\r\n          return el;\r\n        }\r\n      });\r\n      setData([...refactor]);\r\n    } else {\r\n      resetSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {viewAtt.open ? (\r\n        <Attention data={viewAtt.data} setView={setViewAtt} />\r\n      ) : (\r\n        <Page\r\n          helper=\"HISTORIAS CLÍNICAS\"\r\n          title=\"ATENCIONES\"\r\n          itemComponent={\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              onClick={() => setModalH(true)}\r\n            >\r\n              CREAR HISTORIA\r\n            </Button>\r\n          }\r\n        >\r\n          <Box pt={1} pb={3}>\r\n            <FormHelperText>BUSCAR</FormHelperText>\r\n            <TextField\r\n              fullWidth\r\n              label=\"-\"\r\n              placeholder=\"Ejm: Juan Rodriguez\"\r\n              InputLabelProps={{ shrink: true }}\r\n              value={paramSerach}\r\n              onChange={(e) => setParamSerach(e.target.value)}\r\n              onKeyUp={(e) => e.key === \"Enter\" && handleSearch()}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <Box mr={1}>\r\n                      <Fab color=\"primary\" size=\"small\" onClick={handleSearch}>\r\n                        <SearchIcon />\r\n                      </Fab>\r\n                    </Box>\r\n                    <Fab color=\"secondary\" size=\"small\" onClick={resetSearch}>\r\n                      <CloseIcon />\r\n                    </Fab>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Box>\r\n          <Spin spinning={loading}>\r\n            {data.length > 0 ? (\r\n              <Grid container spacing={2}>\r\n                {data.map((el, index) => (\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={index}>\r\n                    <Card align=\"center\" elevation={5}>\r\n                      <CardContent>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                          <b>H.C. N° {el.history_code}</b>\r\n                        </Typography>\r\n                        <FormHelperText style={{ textAlign: \"center\" }}>\r\n                          {el.patient.f_name.toUpperCase()}{\" \"}\r\n                          {el.patient.l_name.toUpperCase()}\r\n                        </FormHelperText>\r\n                        <FormHelperText style={{ textAlign: \"center\" }}>\r\n                          {el.patient.t_doc} {el.patient.n_doc}\r\n                        </FormHelperText>\r\n                      </CardContent>\r\n                      <CardActions>\r\n                        <Button\r\n                          size=\"small\"\r\n                          variant=\"contained\"\r\n                          fullWidth\r\n                          onClick={() => setViewAtt({ data: el, open: true })}\r\n                        >\r\n                          ATENCIONES\r\n                        </Button>\r\n                      </CardActions>\r\n                    </Card>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            ) : (\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} />\r\n                {loading ? (\r\n                  [1, 2, 3, 4, 5, 6, 7, 8].map((el, index) => (\r\n                    <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={index}>\r\n                      <Skeleton\r\n                        width=\"100%\"\r\n                        height={100}\r\n                        variant=\"rectangular\"\r\n                      />\r\n                    </Grid>\r\n                  ))\r\n                ) : (\r\n                  <Grid item xs={12}>\r\n                    <Typography align=\"center\" variant=\"body2\">\r\n                      AQUÍ SE MOSTRARÁN LAS HISTORIAS CLÍNICAS\r\n                    </Typography>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            )}\r\n          </Spin>\r\n          {modalH && (\r\n            <ModalHistories\r\n              open={modalH}\r\n              setOpen={setModalH}\r\n              setLoading={setLoading}\r\n              loading={loading}\r\n              reloadFunction={obtainData}\r\n              correlative={(data.length + 1).toString()}\r\n            />\r\n          )}\r\n        </Page>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Equipment;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"\n}), 'KeyboardArrowDown');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\n\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n\n  const {\n    disableSpacing = false,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import createBox from '../createBox';\nconst Box = createBox();\nexport default Box;"],"names":["props","title","helper","itemComponent","children","rest","p","container","justifyContent","item","gutterBottom","component","toUpperCase","variant","Option","Select","data","value","onChange","Fragment","size","style","width","showSearch","filterOption","inputValue","option","toLowerCase","normalize","replace","includes","map","el","index","_id","start","end","f_name","l_name","rol","dni","getUnit","input","String","match","toUnitless","length","parseFloat","getSkeletonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","pulseKeyframe","keyframes","waveKeyframe","SkeletonRoot","styled","name","overridesResolver","styles","ownerState","root","animation","hasChildren","withChildren","fitContent","height","heightAuto","theme","radiusUnit","shape","borderRadius","radiusValue","_extends","display","backgroundColor","alpha","palette","text","primary","mode","marginTop","marginBottom","transformOrigin","transform","Math","round","content","visibility","maxWidth","css","action","hover","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","Boolean","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","open","setOpen","setLoading","loading","reloadFunction","formatCRTV","correlative","padStart","useState","patient","setPatient","patients","setPatients","useEffect","obtainData","getPatients","res","notification","message","description","sendRegister","user","items","history_code","company","postHistories","Dialog","fullWidth","DialogTitle","Typography","align","spinning","DialogContent","Grid","spacing","xs","md","alignItems","TextField","label","disabled","defaultValue","SelectUsers","DialogActions","Button","color","onClick","setDetails","setRecipe","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","row","IconButton","KeyboardArrowUp","KeyboardArrowDown","moment","date","format","quote","urgency","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Row","setData","getRecipes","emision_date","expiration_date","indicaciones","receta","attention","setQuote","quotes","setQuotes","getQuoteByUser","history","postAttentions","sm","lg","FormControl","InputLabel","e","target","MenuItem","FormHelperText","marginLeft","margin","type","useForm","register","handleSubmit","errors","formState","dm","ult_viaje","hta","fimicos","lueticos","cancer","otros","patologia","menarca","rc","upm","menopausia","anticonceptivo","irs","n_parejas","paridad","tipo_parto","pap","colposcopia","mamografia","eco_mama","bi_rads","alergias","antecedentes_quirugicos","motivo","enfermedad_actual","pa","tiempo_enfermedad","fc","fr","sat","t","diuresis","agp","peso","talla","imc","tcsc","piel","ar","cv","neurologico","urinario","mamas","peritoneales","rha","dolor_localizado","masas","c_vaginal","cervix","oce","mov","lesiones","tamano","movil","consistencia","dolor","superficie","anexos","diagnosticos","plantratamiento_result","recomendaciones_result","alta_result","quoteId","status","mnps","setMnps","ptnls","setPtnls","oceState","setOceState","movState","setMovState","movilState","setMovilState","dolorState","setDolorState","updateRegister","putAttentions","fullScreen","onSubmit","autoComplete","Title","Content","Text","t_doc","n_doc","date_born","email","ocupacion","phone","sex","ubigeo","address","district","xl","InputLabelProps","shrink","error","required","multiline","minRows","Divider","postRecipes","inputProps","min","hisData","setView","modal","setModal","details","recipe","getAttentions","reverse","Page","ModalAttentionDetail","modalH","setModalH","paramSerach","setParamSerach","viewAtt","setViewAtt","dataBase","setDataBase","getHistories","resetSearch","handleSearch","txt","refactor","filter","Attention","Box","pt","pb","placeholder","onKeyUp","key","InputProps","endAdornment","InputAdornment","position","mr","Fab","Search","Close","Card","elevation","CardContent","textAlign","CardActions","ModalHistories","toString","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getCardActionsUtilityClass","CardActionsRoot","disableSpacing","padding","createBox"],"sourceRoot":""}