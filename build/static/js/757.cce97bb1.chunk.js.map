{"version":3,"file":"static/js/757.cce97bb1.chunk.js","mappings":"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","sources":["pages/Patients/components/ModalPatient.jsx","pages/Patients/components/TablePatient.jsx","pages/Patients/Patients.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport SelectsUbigeo from \"../../../components/selects/SelectsUbigeo\";\r\nimport SelectSex from \"../../../components/selects/SelectSex\";\r\nimport SelectTypeDoc from \"../../../components/selects/SelectTypeDoc\";\r\nimport { Spin, notification } from \"antd\";\r\nimport { postPatients, putPatients } from \"requests\";\r\nimport user from \"utils/userDetails\";\r\n\r\nconst ModalPatient = ({\r\n  open,\r\n  setOpen,\r\n  setLoading,\r\n  loading,\r\n  data,\r\n  reloadFunction,\r\n}) => {\r\n  const [sex, setSex] = useState(Boolean(data) ? data.sex : \"MASCULINO\");\r\n  const [t_doc, setT_Doc] = useState(Boolean(data) ? data.t_doc : \"DNI\");\r\n  const [ubigeo, setUbigeo] = useState({\r\n    departamento: Boolean(data) ? data.ubigeo.department : null,\r\n    provincia: Boolean(data) ? data.ubigeo.province : null,\r\n    distrito: Boolean(data) ? data.ubigeo.district : null,\r\n    direccion: Boolean(data) ? data.ubigeo.address : \"\",\r\n  });\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const sendRegister = async (items) => {\r\n    setLoading(true);\r\n    try {\r\n      items[\"sex\"] = sex;\r\n      items[\"t_doc\"] = t_doc;\r\n      items[\"company\"] = user.idCompany;\r\n      items[\"ubigeo\"] = {\r\n        address: ubigeo.direccion,\r\n        district: ubigeo.distrito,\r\n        province: ubigeo.provincia,\r\n        department: ubigeo.departamento,\r\n      };\r\n\r\n      if (Boolean(data)) await putPatients(items, data._id);\r\n      else await postPatients(items);\r\n\r\n      reloadFunction();\r\n      setOpen(false);\r\n      notification[\"success\"]({\r\n        message: `Éxito!`,\r\n        description: `La información se ${\r\n          Boolean(data) ? \"actualizó\" : \"registró\"\r\n        } correctamente..`,\r\n      });\r\n    } catch (error) {\r\n      notification[\"warning\"]({\r\n        message: `El nombre de usuario y/o dni ya fueron registrados!`,\r\n        description: `Ocurrió un error al ${\r\n          Boolean(data) ? \"actualizar\" : \"registrar\"\r\n        } la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth=\"md\">\r\n      <DialogTitle>\r\n        <Typography variant=\"subtitle1\" align=\"center\">\r\n          <b>{Boolean(data) ? \"EDITAR\" : \"AGREGAR\"}</b>\r\n        </Typography>\r\n      </DialogTitle>\r\n      <Spin spinning={loading}>\r\n        <form onSubmit={handleSubmit(sendRegister)} autoComplete=\"off\">\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"NOMBRES\"\r\n                  autoFocus\r\n                  fullWidth\r\n                  defaultValue={Boolean(data) ? data.f_name : \"\"}\r\n                  error={Boolean(errors?.f_name ?? false)}\r\n                  {...register(\"f_name\", { required: true, maxLength: 80 })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"APELLIDOS\"\r\n                  fullWidth\r\n                  defaultValue={Boolean(data) ? data.l_name : \"\"}\r\n                  error={Boolean(errors?.l_name ?? false)}\r\n                  {...register(\"l_name\", { required: true, maxLength: 80 })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <TextField\r\n                  label=\"CORREO\"\r\n                  fullWidth\r\n                  defaultValue={Boolean(data) ? data.email : \"\"}\r\n                  error={Boolean(errors?.email ?? false)}\r\n                  {...register(\"email\", { required: false, maxLength: 80 })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <TextField\r\n                  label=\"CELULAR\"\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  defaultValue={Boolean(data) ? data.phone : \"\"}\r\n                  error={Boolean(errors?.phone ?? false)}\r\n                  {...register(\"phone\", { required: false, maxLength: 80 })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <SelectSex sex={sex} setSex={setSex} />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <SelectTypeDoc typeDoc={t_doc} setTypeDoc={setT_Doc} />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <TextField\r\n                  label=\"Nro DOCUMENTO\"\r\n                  fullWidth\r\n                  defaultValue={Boolean(data) ? data.n_doc : \"\"}\r\n                  error={Boolean(errors?.n_doc ?? false)}\r\n                  {...register(\"n_doc\", { required: true, maxLength: 80 })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <TextField\r\n                  label=\"FECHA DE NACIMIENTO\"\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  type=\"date\"\r\n                  defaultValue={Boolean(data) ? data.date_born : \"\"}\r\n                  error={Boolean(errors?.date_born ?? false)}\r\n                  {...register(\"date_born\", { required: false, maxLength: 80 })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"OCUPACIÓN\"\r\n                  fullWidth\r\n                  defaultValue={Boolean(data) ? data.ocupacion : \"\"}\r\n                  error={Boolean(errors?.ocupacion ?? false)}\r\n                  {...register(\"ocupacion\", { required: false, maxLength: 80 })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Divider />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <SelectsUbigeo setUbigeo={setUbigeo} ubigeo={ubigeo} />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={() => setOpen(false)}\r\n            >\r\n              CANCELAR\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              {Boolean(data) ? \"ACTUALIZAR\" : \"GUARDAR\"}\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Spin>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalPatient;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport CustomTable from \"components/CustomTable\";\r\nimport { ButtonGroup, Button } from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport ModalPatient from \"./ModalPatient\";\r\n\r\nconst TablePatient = ({ data = [], loading, setLoading, reloadFunction }) => {\r\n  const [editPatient, setEditPatient] = useState({ open: false, data: null });\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Nombres\",\r\n      dataIndex: \"f_name\",\r\n      key: \"f_name\",\r\n      align: \"center\",\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      title: \"Apellidos\",\r\n      dataIndex: \"l_name\",\r\n      key: \"l_name\",\r\n      align: \"center\",\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      title: \"Documento\",\r\n      dataIndex: \"t_doc\",\r\n      key: \"t_doc\",\r\n      align: \"center\",\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      title: \"Nro Documento\",\r\n      dataIndex: \"n_doc\",\r\n      key: \"n_doc\",\r\n      align: \"center\",\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      title: \"Celular\",\r\n      dataIndex: \"phone\",\r\n      key: \"phone\",\r\n      align: \"center\",\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      title: \"Fecha Nacimiento\",\r\n      dataIndex: \"date_born\",\r\n      key: \"date_born\",\r\n      align: \"center\",\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      title: \"Correo\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n      align: \"center\",\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      title: \"Sexo\",\r\n      dataIndex: \"sex\",\r\n      key: \"sex\",\r\n      align: \"center\",\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      title: \"Dirección\",\r\n      dataIndex: \"_id\",\r\n      key: \"_id\",\r\n      align: \"center\",\r\n      sorter: false,\r\n      filter: false,\r\n      render: (value, row) => <Fragment>{row.ubigeo.address}</Fragment>,\r\n    },\r\n    {\r\n      title: \"Ocupación\",\r\n      dataIndex: \"ocupacion\",\r\n      key: \"ocupacion\",\r\n      align: \"center\",\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    // {\r\n    //   title: \"Estado Civíl\",\r\n    //   dataIndex: \"estado_civil\",\r\n    //   key: \"estado_civil\",\r\n    //   align: \"center\",\r\n    //   sorter: true,\r\n    //   filter: true,\r\n    // },\r\n    {\r\n      title: \"Estado\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      align: \"center\",\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      title: \"Acciones\",\r\n      dataIndex: \"_id\",\r\n      key: \"_id\",\r\n      align: \"center\",\r\n      render: (text, record) => (\r\n        <ButtonGroup size=\"small\">\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => setEditPatient({ data: record, open: true })}\r\n          >\r\n            <EditIcon />\r\n          </Button>\r\n        </ButtonGroup>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Fragment>\r\n      <CustomTable columns={columns} data={data} loading={loading} />\r\n      {Boolean(editPatient.open) && (\r\n        <ModalPatient\r\n          open={editPatient.open}\r\n          setOpen={setEditPatient}\r\n          loading={loading}\r\n          setLoading={setLoading}\r\n          reloadFunction={reloadFunction}\r\n          data={editPatient.data}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TablePatient;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport TablePatient from \"./components/TablePatient\";\r\nimport Page from \"components/Page\";\r\nimport ModalPatient from \"./components/ModalPatient\";\r\nimport { getPatients } from \"requests\";\r\nimport { notification } from \"antd\";\r\n\r\nconst Patients = () => {\r\n  const [addPatient, setAddPatient] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    obtainData();\r\n  }, []);\r\n\r\n  const obtainData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await getPatients();\r\n      setData([...res]);\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Oops!`,\r\n        description: `Ocurrió un error al obtener la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page\r\n      helper=\"PACIENTES\"\r\n      title=\"PACIENTES\"\r\n      itemComponent={\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          onClick={() => setAddPatient(true)}\r\n        >\r\n          AGREGAR\r\n        </Button>\r\n      }\r\n    >\r\n      <br />\r\n      <TablePatient\r\n        loading={loading}\r\n        data={data}\r\n        setLoading={setLoading}\r\n        reloadFunction={obtainData}\r\n      />\r\n      {addPatient && (\r\n        <ModalPatient\r\n          open={addPatient}\r\n          setOpen={setAddPatient}\r\n          loading={loading}\r\n          setLoading={setLoading}\r\n          reloadFunction={obtainData}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n"],"names":["open","setOpen","setLoading","loading","data","reloadFunction","useState","Boolean","sex","setSex","t_doc","setT_Doc","departamento","ubigeo","department","provincia","province","distrito","district","direccion","address","setUbigeo","useForm","register","handleSubmit","errors","formState","sendRegister","items","user","putPatients","_id","postPatients","notification","message","description","Dialog","fullWidth","maxWidth","DialogTitle","Typography","variant","align","spinning","onSubmit","autoComplete","DialogContent","Grid","container","spacing","item","xs","sm","TextField","label","autoFocus","defaultValue","f_name","error","required","maxLength","l_name","md","email","type","phone","SelectSex","SelectTypeDoc","typeDoc","setTypeDoc","n_doc","InputLabelProps","shrink","date_born","ocupacion","Divider","SelectsUbigeo","DialogActions","Button","color","onClick","editPatient","setEditPatient","columns","title","dataIndex","key","sorter","filter","render","value","row","Fragment","text","record","ButtonGroup","size","Edit","CustomTable","addPatient","setAddPatient","setData","useEffect","obtainData","getPatients","res","Page","helper","itemComponent"],"sourceRoot":""}