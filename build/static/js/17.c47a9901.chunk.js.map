{"version":3,"file":"static/js/17.c47a9901.chunk.js","mappings":"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","sources":["components/Page.jsx","components/selects/SelectUsers.jsx","pages/Histories/components/ModalHistories.jsx","pages/Histories/components/TableAttentions.jsx","pages/Histories/components/ModalAttentions.jsx","pages/Histories/components/ModalAttentionDetail.jsx","pages/Histories/components/ModalRecipe.jsx","pages/Histories/components/Attention.jsx","pages/Histories/Histories.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  FormHelperText,\r\n  Typography,\r\n  Paper,\r\n  Box,\r\n  Divider,\r\n  Grid,\r\n} from \"@mui/material\";\r\n\r\nconst Page = (props) => {\r\n  const { title, helper, itemComponent, children, ...rest } = props;\r\n  return (\r\n    <Box p={1}>\r\n      <Paper {...rest}>\r\n        <Box p={2}>\r\n          <Grid container justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Typography gutterBottom component=\"p\">\r\n                <FormHelperText component=\"span\">\r\n                  {helper && helper.toUpperCase()}\r\n                </FormHelperText>\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                <b>{title}</b>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>{itemComponent}</Grid>\r\n          </Grid>\r\n          <Divider />\r\n          {children}\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Page;\r\n","import React, { Fragment } from \"react\";\r\nimport { Select } from \"antd\";\r\nimport { FormHelperText } from \"@mui/material\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst SelectUsers = ({ data = [], value, onChange, title = \"PERSONAL\" }) => {\r\n  const removeAccents = (str) => {\r\n    return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n  };\r\n\r\n  const filterOptions = (inputValue, option) => {\r\n    const title = removeAccents(option.props.title.toLowerCase());\r\n    return title.includes(inputValue.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <FormHelperText>{title}</FormHelperText>\r\n      <Select\r\n        size=\"large\"\r\n        style={{ width: \"100%\" }}\r\n        showSearch\r\n        value={value}\r\n        onChange={onChange}\r\n        filterOption={filterOptions}\r\n      >\r\n        <Option key={null} value={null} title={\"\"}>\r\n          -- Ninguno --\r\n        </Option>\r\n        {data.map((el, index) => (\r\n          <Option key={index} value={el._id} title={`${el.start} - ${el.end}`}>\r\n            {el.f_name} {el.l_name}{\" \"}\r\n            <FormHelperText component=\"span\">\r\n              {el.rol} {el.dni}\r\n            </FormHelperText>\r\n          </Option>\r\n        ))}\r\n      </Select>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SelectUsers;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Spin, notification } from \"antd\";\r\nimport { getPatients, postHistories } from \"requests\";\r\nimport SelectUsers from \"../../../components/selects/SelectUsers\";\r\nimport user from \"utils/userDetails\";\r\n\r\nconst ModalCompany = ({\r\n  open,\r\n  setOpen,\r\n  setLoading,\r\n  loading,\r\n  reloadFunction,\r\n  correlative,\r\n}) => {\r\n  const formatCRTV = correlative.padStart(12, \"0\");\r\n  const [patient, setPatient] = useState(null);\r\n  const [patients, setPatients] = useState([]);\r\n\r\n  useEffect(() => {\r\n    obtainData();\r\n  }, []);\r\n\r\n  const obtainData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await getPatients();\r\n      setPatients(res);\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Oops!`,\r\n        description: `Ocurrió un error al obtener la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const sendRegister = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (!formatCRTV || !patient || !user.idCompany) {\r\n        notification[\"warning\"]({ message: \"Campos requeridos...\" });\r\n        return;\r\n      }\r\n      let items = {\r\n        history_code: formatCRTV,\r\n        patient,\r\n        company: user.idCompany,\r\n      };\r\n\r\n      await postHistories(items);\r\n      reloadFunction();\r\n      setOpen(false);\r\n      notification[\"success\"]({\r\n        message: `Éxito!`,\r\n        description: `La historia se generó correctamente.`,\r\n      });\r\n    } catch (error) {\r\n      notification[\"warning\"]({\r\n        message: `El paciente ya tiene una historia clínica generada.`,\r\n        description: \"Solo debe agregar atenciones.\",\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth=\"md\">\r\n      <DialogTitle>\r\n        <Typography variant=\"h5\" align=\"center\" component=\"p\">\r\n          <b>GENERAR HISTORIA CLÍNICA</b>\r\n        </Typography>\r\n      </DialogTitle>\r\n      <Spin spinning={loading}>\r\n        <DialogContent>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={6} container alignItems=\"flex-end\">\r\n              <TextField\r\n                label=\"Código de la historia\"\r\n                fullWidth\r\n                size=\"small\"\r\n                disabled\r\n                defaultValue={formatCRTV}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <SelectUsers\r\n                data={patients}\r\n                value={patient}\r\n                onChange={setPatient}\r\n                title=\"Pacientes\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={() => setOpen(false)}\r\n          >\r\n            CANCELAR\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={sendRegister}>\r\n            GUARDAR\r\n          </Button>\r\n        </DialogActions>\r\n      </Spin>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalCompany;\r\n","import React, { Fragment } from \"react\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\nimport { ButtonGroup, Button, Grid } from \"@mui/material\";\r\nimport moment from \"moment-timezone\";\r\nimport { getRecipes } from \"requests\";\r\nimport { Spin, notification } from \"antd\";\r\n\r\nconst TableAttentions = ({\r\n  data,\r\n  loading,\r\n  setLoading,\r\n  setDetails,\r\n  setRecipe,\r\n}) => {\r\n  const [open, setOpen] = React.useState(null);\r\n\r\n  return (\r\n    <Spin spinning={loading} component=\"div\">\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell />\r\n              <TableCell align=\"center\">Fecha</TableCell>\r\n              <TableCell align=\"center\">Motivo</TableCell>\r\n              <TableCell align=\"center\">Inicio estimado</TableCell>\r\n              <TableCell align=\"center\">Fin estimado</TableCell>\r\n              <TableCell align=\"center\">Acciones</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          {data.length > 0 ? (\r\n            <TableBody>\r\n              {data.map((row, index) => (\r\n                <Fragment key={index}>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          if (index === open) setOpen(null);\r\n                          else setOpen(index);\r\n                        }}\r\n                      >\r\n                        {open === index ? (\r\n                          <KeyboardArrowUpIcon />\r\n                        ) : (\r\n                          <KeyboardArrowDownIcon />\r\n                        )}\r\n                      </IconButton>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {moment(row.date).format(\"DD/MM/YYYY\")}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">{row.quote.urgency}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {moment(row.quote.start).format(\"hh:mm a\")}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {moment(row.quote.end).format(\"hh:mm a\")}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Button\r\n                        onClick={() => setDetails({ open: true, data: row })}\r\n                        variant=\"contained\"\r\n                      >\r\n                        DETALLES\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n\r\n                  <TableRow>\r\n                    <TableCell\r\n                      style={{ paddingBottom: 0, paddingTop: 0 }}\r\n                      colSpan={6}\r\n                    >\r\n                      <Collapse\r\n                        in={open === index}\r\n                        timeout=\"auto\"\r\n                        unmountOnExit\r\n                      >\r\n                        <Row\r\n                          setRecipe={setRecipe}\r\n                          row={row}\r\n                          setLoading={setLoading}\r\n                        />\r\n                      </Collapse>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </Fragment>\r\n              ))}\r\n            </TableBody>\r\n          ) : (\r\n            <Typography variant=\"caption\" align=\"center\">\r\n              AQUÍ SE MOSTRARÁN LAS ATENCIONES\r\n            </Typography>\r\n          )}\r\n        </Table>\r\n      </TableContainer>\r\n    </Spin>\r\n  );\r\n};\r\n\r\nexport default TableAttentions;\r\n\r\nfunction Row(props) {\r\n  const { row, setRecipe, setLoading } = props;\r\n  const [data, setData] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    obtainData();\r\n  }, [row]);\r\n\r\n  const obtainData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await getRecipes(row._id);\r\n      setData(res);\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        description: `Ocurrió un error al obtener la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n          Receta médica\r\n        </Typography>\r\n        <Button\r\n          onClick={() => setRecipe({ open: true, data: row })}\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n        >\r\n          AGREGAR\r\n        </Button>\r\n      </Grid>\r\n      <Table size=\"small\" aria-label=\"purchases\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">Emisión</TableCell>\r\n            <TableCell align=\"center\">Expiración</TableCell>\r\n            <TableCell align=\"center\">Indicaciones</TableCell>\r\n            <TableCell align=\"center\">Receta</TableCell>\r\n            <TableCell align=\"center\">Acciones</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        {data.length > 0 ? (\r\n          <TableBody>\r\n            {data.map((el, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell align=\"center\">{el.emision_date}</TableCell>\r\n                <TableCell align=\"center\">{el.expiration_date}</TableCell>\r\n                <TableCell align=\"center\">{el.indicaciones}</TableCell>\r\n                <TableCell align=\"center\">{el.receta}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Button size=\"small\" variant=\"contained\">\r\n                    Editar\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        ) : (\r\n          <Typography variant=\"caption\" align=\"center\">\r\n            AQUÍ SE MOSTRARÁN LAS RECETAS\r\n          </Typography>\r\n        )}\r\n      </Table>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { Spin, notification } from \"antd\";\r\nimport { postAttentions, getQuoteByUser } from \"requests\";\r\nimport moment from \"moment-timezone\";\r\nimport user from \"utils/userDetails\";\r\n\r\nconst ModalAttentions = (props) => {\r\n  const { open, setOpen, setLoading, loading, reloadFunction, attention } =\r\n    props;\r\n\r\n  const [quote, setQuote] = useState(\"\");\r\n  const [quotes, setQuotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    obtainData();\r\n  }, []);\r\n\r\n  const obtainData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await getQuoteByUser(attention.patient._id);\r\n      if (res.length > 0) {\r\n        setQuotes(res);\r\n        setQuote(res[0]._id);\r\n      }\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Oops!`,\r\n        description: `Ocurrió un error al obtener la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const sendRegister = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let items = {\r\n        date: moment().format(\"YYYY-MM-DDTHH:mm:ss\"),\r\n        quote: quote,\r\n        history: attention._id,\r\n        company: user.idCompany,\r\n      };\r\n      await postAttentions(items);\r\n      reloadFunction();\r\n      setOpen(false);\r\n      notification[\"success\"]({\r\n        message: `Éxito!`,\r\n        description: `La atención se generó correctamente.`,\r\n      });\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Error!`,\r\n        description: `Ocurrió un error al generar la atención.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth=\"md\">\r\n      <DialogTitle>\r\n        <Typography variant=\"subtitle1\" align=\"center\" component=\"p\">\r\n          <b>GENERAR ATENCIÓN</b>\r\n        </Typography>\r\n      </DialogTitle>\r\n      <Spin spinning={loading}>\r\n        <DialogContent>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6} md={8} lg={9}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel>\r\n                  {quotes.length > 0\r\n                    ? \"CITAS\"\r\n                    : \"El paciente no tiene citas pendientes.\"}\r\n                </InputLabel>\r\n                {quotes.length > 0 && (\r\n                  <Select\r\n                    label=\"CITAS\"\r\n                    value={quote}\r\n                    onChange={(e) => setQuote(e.target.value)}\r\n                  >\r\n                    {quotes.map((el) => (\r\n                      <MenuItem value={el._id} key={el._id}>\r\n                        {el.urgency}\r\n                        <FormHelperText\r\n                          component=\"span\"\r\n                          style={{ marginLeft: 10 }}\r\n                        >\r\n                          {moment(el.start).format(\"ddd D MMM, hh:mm a\")}\r\n                        </FormHelperText>\r\n                        <FormHelperText\r\n                          component=\"span\"\r\n                          style={{ margin: \"0 10px\" }}\r\n                        >\r\n                          a\r\n                        </FormHelperText>\r\n                        <FormHelperText component=\"span\">\r\n                          {moment(el.end).format(\"hh:mm a\")}\r\n                        </FormHelperText>\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                )}\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n              <TextField\r\n                label=\"Fecha\"\r\n                fullWidth\r\n                disabled\r\n                value={moment().format(\"YYYY-MM-DD HH:mm\")}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            size=\"large\"\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={() => setOpen(false)}\r\n          >\r\n            CANCELAR\r\n          </Button>\r\n          {quotes.length > 0 && (\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={sendRegister}\r\n              type=\"submit\"\r\n            >\r\n              GENERAR NUEVA ATENCIÓN\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Spin>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalAttentions;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Divider,\r\n  FormHelperText,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  DialogActions,\r\n} from \"@mui/material\";\r\nimport { Spin, notification } from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { putAttentions } from \"requests\";\r\nimport moment from \"moment-timezone\";\r\n\r\nconst ModalAttentions = (props) => {\r\n  const { open, setOpen, setLoading, data, loading, reloadFunction } = props;\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const {\r\n    date,\r\n    ult_viaje,\r\n\r\n    dm,\r\n    hta,\r\n    fimicos,\r\n    lueticos,\r\n    cancer,\r\n    otros,\r\n    patologia,\r\n    // ANTECEDENTES FAMILIARES\r\n    menarca,\r\n    rc,\r\n    upm,\r\n    menopausia,\r\n    anticonceptivo,\r\n    irs,\r\n    n_parejas,\r\n    paridad,\r\n    tipo_parto,\r\n    pap,\r\n    colposcopia,\r\n    mamografia,\r\n    eco_mama,\r\n    bi_rads,\r\n    alergias,\r\n    antecedentes_quirugicos,\r\n    // MOTIVO CONSULTA\r\n    motivo,\r\n    enfermedad_actual,\r\n    tiempo_enfermedad,\r\n    // OTHER PART\r\n    pa,\r\n    fc,\r\n    fr,\r\n    sat,\r\n    t,\r\n    diuresis,\r\n    agp,\r\n    peso,\r\n    talla,\r\n    imc,\r\n    tcsc,\r\n    piel,\r\n    ar,\r\n    cv,\r\n    neurologico,\r\n    urinario,\r\n    mamas,\r\n    // OTHER\r\n    peritoneales,\r\n    rha,\r\n    dolor_localizado,\r\n    masas,\r\n    // OTHER\r\n    c_vaginal,\r\n    cervix,\r\n    oce,\r\n    mov,\r\n    lesiones,\r\n    tamano,\r\n    movil,\r\n    consistencia,\r\n    dolor,\r\n    superficie,\r\n    anexos,\r\n    // DIAGNOSTICOS\r\n    diagnosticos,\r\n    plantratamiento_result,\r\n    recomendaciones_result,\r\n    // OTHER\r\n    alta_result,\r\n\r\n    history: { history_code },\r\n    quote: { patient, status, urgency, _id: quoteId },\r\n    _id,\r\n  } = data;\r\n\r\n  const [mnps, setMnps] = useState(menopausia ? menopausia : \"NO\");\r\n  const [ptnls, setPtnls] = useState(peritoneales ? peritoneales : \"NO\");\r\n  const [oceState, setOceState] = useState(oce ? oce : \"Cerrados\");\r\n  const [movState, setMovState] = useState(mov ? mov : \"NO\");\r\n  const [movilState, setMovilState] = useState(movil ? movil : \"NO\");\r\n  const [dolorState, setDolorState] = useState(dolor ? dolor : \"NO\");\r\n\r\n  const updateRegister = async (items) => {\r\n    setLoading(true);\r\n    try {\r\n      items[\"quoteId\"] = quoteId;\r\n      items[\"menopausia\"] = mnps;\r\n      items[\"peritoneales\"] = ptnls;\r\n      items[\"oce\"] = oceState;\r\n      items[\"mov\"] = movState;\r\n      items[\"movil\"] = movilState;\r\n      items[\"dolor\"] = dolorState;\r\n\r\n      await putAttentions(items, _id);\r\n\r\n      reloadFunction();\r\n      notification[\"success\"]({\r\n        message: `La atención se registró correctamente.`,\r\n      });\r\n      setOpen({ open: false });\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Ocurrió un error al guardar la atención. ${error}`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullScreen>\r\n      <Spin spinning={loading}>\r\n        <form onSubmit={handleSubmit(updateRegister)} autoComplete=\"off\">\r\n          <DialogContent>\r\n            <Grid container spacing={1} justifyContent=\"space-between\">\r\n              <Grid item>\r\n                <Title title={`HISTORIA CLÍNICA N° ${history_code}`} />\r\n              </Grid>\r\n              <Grid item>\r\n                <Title\r\n                  title={`FECHA DE ATENCIÓN ${moment(date).format(\r\n                    \"DD/MM/YYYY\"\r\n                  )}`}\r\n                />\r\n              </Grid>\r\n\r\n              <Content title=\"FILIACIÓN\">\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} sm={6} md={8}>\r\n                    <Text\r\n                      title=\"Paciente\"\r\n                      value={`${patient.f_name} ${patient.l_name}`}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Text title={patient.t_doc} value={patient.n_doc} />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Text\r\n                      title=\"Fecha de nacimiento\"\r\n                      value={patient.date_born}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Text title=\"Correo\" value={patient.email} />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Text title=\"Ocupación\" value={patient.ocupacion} />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Text title=\"Celular\" value={patient.phone} />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Text title=\"Sexo\" value={patient.sex} />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Text\r\n                      title=\"Dirección\"\r\n                      value={`${patient.ubigeo.address} ${patient.ubigeo.district}`}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Content>\r\n\r\n              <Content title=\"ANTECEDENTES HEREDO - FAMILIARES\">\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"DM\"\r\n                      defaultValue={dm}\r\n                      error={Boolean(errors?.dm ?? false)}\r\n                      {...register(\"dm\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"HTA\"\r\n                      defaultValue={hta}\r\n                      error={Boolean(errors?.hta ?? false)}\r\n                      {...register(\"hta\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Fímicos (TB)\"\r\n                      defaultValue={fimicos}\r\n                      error={Boolean(errors?.fimicos ?? false)}\r\n                      {...register(\"fimicos\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Luéticos\"\r\n                      defaultValue={lueticos}\r\n                      error={Boolean(errors?.lueticos ?? false)}\r\n                      {...register(\"lueticos\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Cáncer\"\r\n                      defaultValue={cancer}\r\n                      error={Boolean(errors?.cancer ?? false)}\r\n                      {...register(\"cancer\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Otros\"\r\n                      defaultValue={otros}\r\n                      error={Boolean(errors?.otros ?? false)}\r\n                      {...register(\"otros\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Especificar patología - parentesco\"\r\n                      defaultValue={patologia}\r\n                      error={Boolean(errors?.patologia ?? false)}\r\n                      {...register(\"patologia\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Content>\r\n\r\n              <Content title=\"ANTECEDENTES PERSONALES\">\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Menarca\"\r\n                      defaultValue={menarca}\r\n                      error={Boolean(errors?.menarca ?? false)}\r\n                      {...register(\"menarca\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"RC [Reg|Irreg]\"\r\n                      defaultValue={rc}\r\n                      error={Boolean(errors?.rc ?? false)}\r\n                      {...register(\"rc\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"UPM\"\r\n                      defaultValue={upm}\r\n                      error={Boolean(errors?.upm ?? false)}\r\n                      {...register(\"upm\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n                      <InputLabel>Menopausia</InputLabel>\r\n                      <Select\r\n                        label=\"Menopausia\"\r\n                        value={mnps}\r\n                        onChange={(e) => setMnps(e.target.value)}\r\n                      >\r\n                        <MenuItem value=\"SI\">SI</MenuItem>\r\n                        <MenuItem value=\"NO\">NO</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Método anticonceptivo\"\r\n                      defaultValue={anticonceptivo}\r\n                      error={Boolean(errors?.anticonceptivo ?? false)}\r\n                      {...register(\"anticonceptivo\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"IRS\"\r\n                      defaultValue={irs}\r\n                      error={Boolean(errors?.irs ?? false)}\r\n                      {...register(\"irs\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Nro parejas\"\r\n                      defaultValue={n_parejas}\r\n                      error={Boolean(errors?.n_parejas ?? false)}\r\n                      {...register(\"n_parejas\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Paridad\"\r\n                      defaultValue={paridad}\r\n                      error={Boolean(errors?.paridad ?? false)}\r\n                      {...register(\"paridad\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Tipo de partos\"\r\n                      defaultValue={tipo_parto}\r\n                      error={Boolean(errors?.tipo_parto ?? false)}\r\n                      {...register(\"tipo_parto\", { required: false })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"PAP\"\r\n                      defaultValue={pap}\r\n                      error={Boolean(errors?.pap ?? false)}\r\n                      {...register(\"pap\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Colposcopia\"\r\n                      defaultValue={colposcopia}\r\n                      error={Boolean(errors?.colposcopia ?? false)}\r\n                      {...register(\"colposcopia\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Mamografía\"\r\n                      defaultValue={mamografia}\r\n                      error={Boolean(errors?.mamografia ?? false)}\r\n                      {...register(\"mamografia\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Eco Mama\"\r\n                      defaultValue={eco_mama}\r\n                      error={Boolean(errors?.eco_mama ?? false)}\r\n                      {...register(\"eco_mama\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Bi-rads\"\r\n                      defaultValue={bi_rads}\r\n                      error={Boolean(errors?.bi_rads ?? false)}\r\n                      {...register(\"bi_rads\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Alergias\"\r\n                      defaultValue={alergias}\r\n                      error={Boolean(errors?.alergias ?? false)}\r\n                      {...register(\"alergias\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Antecedentes quirurgicos\"\r\n                      defaultValue={antecedentes_quirugicos}\r\n                      error={Boolean(errors?.antecedentes_quirugicos ?? false)}\r\n                      {...register(\"antecedentes_quirugicos\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Content>\r\n\r\n              <Content title=\"MOTIVO DE LA CONSULTA\">\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  size=\"small\"\r\n                  label=\"-\"\r\n                  multiline\r\n                  minRows={3}\r\n                  defaultValue={motivo}\r\n                  error={Boolean(errors?.motivo ?? false)}\r\n                  {...register(\"motivo\", {\r\n                    required: false,\r\n                  })}\r\n                />\r\n              </Content>\r\n\r\n              <Content title=\"ENFERMEDAD ACTUAL\">\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  size=\"small\"\r\n                  label=\"-\"\r\n                  multiline\r\n                  minRows={3}\r\n                  defaultValue={enfermedad_actual}\r\n                  error={Boolean(errors?.enfermedad_actual ?? false)}\r\n                  {...register(\"enfermedad_actual\", {\r\n                    required: false,\r\n                  })}\r\n                />\r\n              </Content>\r\n\r\n              <Content title=\"EXAMEN FÍSICO\">\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12}>\r\n                    <Divider />\r\n                    <Typography>FV</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"PA\"\r\n                      defaultValue={pa}\r\n                      error={Boolean(errors?.pa ?? false)}\r\n                      {...register(\"pa\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"FC\"\r\n                      defaultValue={fc}\r\n                      error={Boolean(errors?.fc ?? false)}\r\n                      {...register(\"fc\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"FR\"\r\n                      defaultValue={fr}\r\n                      error={Boolean(errors?.fr ?? false)}\r\n                      {...register(\"fr\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Sat O2\"\r\n                      defaultValue={sat}\r\n                      error={Boolean(errors?.sat ?? false)}\r\n                      {...register(\"sat\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"T\"\r\n                      defaultValue={t}\r\n                      error={Boolean(errors?.t ?? false)}\r\n                      {...register(\"t\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Diuresis\"\r\n                      defaultValue={diuresis}\r\n                      error={Boolean(errors?.diuresis ?? false)}\r\n                      {...register(\"diuresis\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"AGP\"\r\n                      defaultValue={agp}\r\n                      error={Boolean(errors?.agp ?? false)}\r\n                      {...register(\"agp\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Peso\"\r\n                      defaultValue={peso}\r\n                      error={Boolean(errors?.peso ?? false)}\r\n                      {...register(\"peso\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Talla\"\r\n                      defaultValue={talla}\r\n                      error={Boolean(errors?.talla ?? false)}\r\n                      {...register(\"talla\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"IMC\"\r\n                      defaultValue={imc}\r\n                      error={Boolean(errors?.imc ?? false)}\r\n                      {...register(\"imc\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"TCSC\"\r\n                      defaultValue={tcsc}\r\n                      error={Boolean(errors?.tcsc ?? false)}\r\n                      {...register(\"tcsc\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Piel\"\r\n                      defaultValue={piel}\r\n                      error={Boolean(errors?.piel ?? false)}\r\n                      {...register(\"piel\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"AR\"\r\n                      defaultValue={ar}\r\n                      error={Boolean(errors?.ar ?? false)}\r\n                      {...register(\"ar\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"CV\"\r\n                      defaultValue={cv}\r\n                      error={Boolean(errors?.cv ?? false)}\r\n                      {...register(\"cv\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Neurológico\"\r\n                      defaultValue={neurologico}\r\n                      error={Boolean(errors?.neurologico ?? false)}\r\n                      {...register(\"neurologico\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Urinario\"\r\n                      defaultValue={urinario}\r\n                      error={Boolean(errors?.urinario ?? false)}\r\n                      {...register(\"urinario\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Mamas\"\r\n                      defaultValue={mamas}\r\n                      error={Boolean(errors?.mamas ?? false)}\r\n                      {...register(\"mamas\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Divider />\r\n                    <Typography>Abdomen</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n                      <InputLabel>Signos peritoneales</InputLabel>\r\n                      <Select\r\n                        label=\"Signos peritoneales\"\r\n                        value={ptnls}\r\n                        onChange={(e) => setPtnls(e.target.value)}\r\n                      >\r\n                        <MenuItem value=\"SI\">SI</MenuItem>\r\n                        <MenuItem value=\"NO\">NO</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"RHA\"\r\n                      defaultValue={rha}\r\n                      error={Boolean(errors?.rha ?? false)}\r\n                      {...register(\"rha\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Dolor localizado\"\r\n                      defaultValue={dolor_localizado}\r\n                      error={Boolean(errors?.dolor_localizado ?? false)}\r\n                      {...register(\"dolor_localizado\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Masas\"\r\n                      defaultValue={masas}\r\n                      error={Boolean(errors?.masas ?? false)}\r\n                      {...register(\"masas\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Divider />\r\n                    <Typography>Examen genital</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Canal vaginal\"\r\n                      defaultValue={c_vaginal}\r\n                      error={Boolean(errors?.c_vaginal ?? false)}\r\n                      {...register(\"c_vaginal\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Cérvix\"\r\n                      defaultValue={cervix}\r\n                      error={Boolean(errors?.cervix ?? false)}\r\n                      {...register(\"cervix\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n                      <InputLabel>OCE/OCI</InputLabel>\r\n                      <Select\r\n                        label=\"OCE/OCI\"\r\n                        value={oceState}\r\n                        onChange={(e) => setOceState(e.target.value)}\r\n                      >\r\n                        <MenuItem value=\"Abiertos\">Abiertos</MenuItem>\r\n                        <MenuItem value=\"Cerrados\">Cerrados</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n                      <InputLabel>Dolor a la mov</InputLabel>\r\n                      <Select\r\n                        label=\"Dolor de la mov\"\r\n                        value={movState}\r\n                        onChange={(e) => setMovState(e.target.value)}\r\n                      >\r\n                        <MenuItem value=\"SI\">SI</MenuItem>\r\n                        <MenuItem value=\"NO\">NO</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Lesiones\"\r\n                      defaultValue={lesiones}\r\n                      error={Boolean(errors?.lesiones ?? false)}\r\n                      {...register(\"lesiones\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Divider />\r\n                    <Typography>Útero</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Tamaño\"\r\n                      defaultValue={tamano}\r\n                      error={Boolean(errors?.tamano ?? false)}\r\n                      {...register(\"tamano\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n                      <InputLabel>Móvil</InputLabel>\r\n                      <Select\r\n                        label=\"Móvil\"\r\n                        value={movilState}\r\n                        onChange={(e) => setMovilState(e.target.value)}\r\n                      >\r\n                        <MenuItem value=\"SI\">SI</MenuItem>\r\n                        <MenuItem value=\"NO\">NO</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Consistencia\"\r\n                      defaultValue={consistencia}\r\n                      error={Boolean(errors?.consistencia ?? false)}\r\n                      {...register(\"consistencia\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n                      <InputLabel>Dolor</InputLabel>\r\n                      <Select\r\n                        label=\"Dolor\"\r\n                        value={dolorState}\r\n                        onChange={(e) => setDolorState(e.target.value)}\r\n                      >\r\n                        <MenuItem value=\"SI\">SI</MenuItem>\r\n                        <MenuItem value=\"NO\">NO</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Superficie\"\r\n                      defaultValue={superficie}\r\n                      error={Boolean(errors?.superficie ?? false)}\r\n                      {...register(\"superficie\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      size=\"small\"\r\n                      label=\"Anexos\"\r\n                      defaultValue={anexos}\r\n                      error={Boolean(errors?.anexos ?? false)}\r\n                      {...register(\"anexos\", {\r\n                        required: false,\r\n                      })}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Content>\r\n\r\n              <Content title=\"DIAGNÓSTICOS\">\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  size=\"small\"\r\n                  label=\"-\"\r\n                  multiline\r\n                  minRows={3}\r\n                  defaultValue={diagnosticos}\r\n                  error={Boolean(errors?.diagnosticos ?? false)}\r\n                  {...register(\"diagnosticos\", {\r\n                    required: false,\r\n                  })}\r\n                />\r\n              </Content>\r\n\r\n              <Content title=\"PLAN DE TRABAJO\">\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  size=\"small\"\r\n                  label=\"-\"\r\n                  multiline\r\n                  minRows={3}\r\n                  defaultValue={plantratamiento_result}\r\n                  error={Boolean(errors?.plantratamiento_result ?? false)}\r\n                  {...register(\"plantratamiento_result\", {\r\n                    required: false,\r\n                  })}\r\n                />\r\n              </Content>\r\n\r\n              <Content title=\"RECOMENDACIONES\">\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  size=\"small\"\r\n                  label=\"-\"\r\n                  multiline\r\n                  minRows={3}\r\n                  defaultValue={recomendaciones_result}\r\n                  error={Boolean(errors?.recomendaciones_result ?? false)}\r\n                  {...register(\"recomendaciones_result\", {\r\n                    required: false,\r\n                  })}\r\n                />\r\n              </Content>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={() => setOpen(false)}\r\n              disabled={loading}\r\n            >\r\n              CANCELAR\r\n            </Button>{\" \"}\r\n            <Button\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n            >\r\n              GUARDAR\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Spin>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalAttentions;\r\n\r\nconst Text = ({ title, value }) => {\r\n  return (\r\n    <Typography component=\"p\" variant=\"body1\">\r\n      <b>{title}</b>\r\n      {\" • \"}\r\n      <FormHelperText component=\"span\">{value}</FormHelperText>\r\n      <Divider />\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst Title = ({ title }) => {\r\n  return (\r\n    <Typography variant=\"h5\">\r\n      <b>{title}</b>\r\n      <Divider />\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst Content = ({ title, children }) => {\r\n  return (\r\n    <Grid container justifyContent=\"flex-end\" spacing={1}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"subtitle1\">\r\n          <b>{title}</b>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={11}>\r\n        {children}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Spin, notification } from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { postRecipes } from \"requests\";\r\nimport moment from \"moment-timezone\";\r\n\r\nconst ModalRecipe = (props) => {\r\n  const { open, setOpen, setLoading, loading, data, reloadFunction } = props;\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const sendRegister = async (items) => {\r\n    try {\r\n      setLoading(true);\r\n      items[\"historydetail\"] = data._id;\r\n      await postRecipes(items);\r\n      reloadFunction();\r\n      notification[\"success\"]({\r\n        message: `Éxito!`,\r\n        description: `La receta se generó correctamente.`,\r\n      });\r\n      setOpen({ open: false });\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Error!`,\r\n        description: `Ocurrió un error al generar la atención.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth maxWidth=\"md\">\r\n      <DialogTitle>\r\n        <Typography variant=\"h5\" align=\"center\" component=\"p\">\r\n          <b>RECETA MÉDICA</b>\r\n        </Typography>\r\n      </DialogTitle>\r\n      <Spin spinning={loading}>\r\n        <form onSubmit={handleSubmit(sendRegister)} autoComplete=\"off\">\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6} md={6} lg={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  size=\"small\"\r\n                  type=\"date\"\r\n                  defaultValue={moment().format(\"YYYY-MM-DD\")}\r\n                  label=\"Fecha de expiración\"\r\n                  error={Boolean(errors?.expiration_date ?? false)}\r\n                  inputProps={{ min: moment().format(\"YYYY-MM-DD\") }}\r\n                  {...register(\"expiration_date\", { required: true })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} lg={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  size=\"small\"\r\n                  type=\"date\"\r\n                  defaultValue={moment().format(\"YYYY-MM-DD\")}\r\n                  label=\"Fecha de emisión\"\r\n                  inputProps={{ min: moment().format(\"YYYY-MM-DD\") }}\r\n                  error={Boolean(errors?.emision_date ?? false)}\r\n                  {...register(\"emision_date\", { required: true })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  size=\"small\"\r\n                  multiline\r\n                  minRows={3}\r\n                  label=\"Recete médica\"\r\n                  error={Boolean(errors?.receta ?? false)}\r\n                  {...register(\"receta\", { required: true })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  size=\"small\"\r\n                  multiline\r\n                  minRows={3}\r\n                  label=\"Indicaciones\"\r\n                  error={Boolean(errors?.indicaciones ?? false)}\r\n                  {...register(\"indicaciones\", { required: true })}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={() => setOpen(false)}\r\n            >\r\n              CANCELAR\r\n            </Button>\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              CREAR\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Spin>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalRecipe;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport Page from \"components/Page\";\r\nimport { notification } from \"antd\";\r\nimport { getAttentions } from \"requests\";\r\nimport TableAttentions from \"./TableAttentions\";\r\nimport ModalAttentions from \"./ModalAttentions\";\r\nimport ModalAttentionDetail from \"./ModalAttentionDetail\";\r\nimport ModalRecipe from \"./ModalRecipe\";\r\n\r\nconst Equipment = ({ data: hisData, setView }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [details, setDetails] = useState({ open: false, data: null });\r\n  const [recipe, setRecipe] = useState({ open: false, data: null });\r\n\r\n  useEffect(() => {\r\n    obtainData();\r\n  }, []);\r\n\r\n  const obtainData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await getAttentions(hisData._id);\r\n      setData(res.reverse());\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Oops!`,\r\n        description: `Ocurrió un error al obtener la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page\r\n      helper=\"HISTORIAS CLÍNICAS » ATENCIONES\"\r\n      title={`${hisData.patient.f_name} ${hisData.patient.l_name}`}\r\n      itemComponent={\r\n        <Fragment>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            onClick={() => setView({ open: false })}\r\n          >\r\n            VOLVER\r\n          </Button>{\" \"}\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            onClick={() => setModal(true)}\r\n          >\r\n            AGREGAR ATENCIÓN\r\n          </Button>\r\n        </Fragment>\r\n      }\r\n    >\r\n      <TableAttentions\r\n        loading={loading}\r\n        data={data}\r\n        setDetails={setDetails}\r\n        setRecipe={setRecipe}\r\n        setLoading={setLoading}\r\n      />\r\n\r\n      {modal && (\r\n        <ModalAttentions\r\n          open={modal}\r\n          setOpen={setModal}\r\n          loading={loading}\r\n          setLoading={setLoading}\r\n          reloadFunction={obtainData}\r\n          attention={hisData}\r\n        />\r\n      )}\r\n\r\n      {details.open && (\r\n        <ModalAttentionDetail\r\n          open={details.open}\r\n          setOpen={setDetails}\r\n          data={details.data}\r\n          loading={loading}\r\n          setLoading={setLoading}\r\n          reloadFunction={obtainData}\r\n        />\r\n      )}\r\n\r\n      {recipe.open && (\r\n        <ModalRecipe\r\n          open={recipe.open}\r\n          setOpen={setRecipe}\r\n          data={recipe.data}\r\n          loading={loading}\r\n          setLoading={setLoading}\r\n          reloadFunction={obtainData}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Equipment;\r\n","import React, { useEffect, useState, Fragment } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  Skeleton,\r\n  FormHelperText,\r\n  TextField,\r\n  Fab,\r\n  InputAdornment,\r\n} from \"@mui/material\";\r\nimport Page from \"components/Page\";\r\nimport { notification, Spin } from \"antd\";\r\nimport { getHistories } from \"requests\";\r\nimport ModalHistories from \"./components/ModalHistories\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Attention from \"./components/Attention\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nconst Equipment = () => {\r\n  const [modalH, setModalH] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [paramSerach, setParamSerach] = useState(\"\");\r\n  const [viewAtt, setViewAtt] = useState({ data: null, open: false });\r\n  const [data, setData] = useState([]);\r\n  const [dataBase, setDataBase] = useState([]);\r\n\r\n  useEffect(() => {\r\n    obtainData();\r\n  }, []);\r\n\r\n  const obtainData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await getHistories();\r\n      setData(res.reverse());\r\n      setDataBase(res.reverse());\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: `Oops!`,\r\n        description: `Ocurrió un error al obtener la información.`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetSearch = () => {\r\n    setParamSerach(\"\");\r\n    setData([...dataBase]);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (paramSerach) {\r\n      let txt = paramSerach.toLowerCase();\r\n      let refactor = dataBase.filter((el) => {\r\n        let {\r\n          history_code,\r\n          patient: { f_name, l_name, t_doc, n_doc },\r\n        } = el;\r\n\r\n        if (\r\n          history_code.includes(txt) ||\r\n          f_name.toLowerCase().includes(txt) ||\r\n          l_name.toLowerCase().includes(txt) ||\r\n          t_doc.toLowerCase().includes(txt) ||\r\n          n_doc.toLowerCase().includes(txt)\r\n        ) {\r\n          return el;\r\n        }\r\n      });\r\n      setData([...refactor]);\r\n    } else {\r\n      resetSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {viewAtt.open ? (\r\n        <Attention data={viewAtt.data} setView={setViewAtt} />\r\n      ) : (\r\n        <Page\r\n          helper=\"HISTORIAS CLÍNICAS\"\r\n          title=\"ATENCIONES\"\r\n          itemComponent={\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              onClick={() => setModalH(true)}\r\n            >\r\n              CREAR HISTORIA\r\n            </Button>\r\n          }\r\n        >\r\n          <Box pt={1} pb={3}>\r\n            <FormHelperText>BUSCAR</FormHelperText>\r\n            <TextField\r\n              fullWidth\r\n              label=\"-\"\r\n              placeholder=\"Ejm: Juan Rodriguez\"\r\n              InputLabelProps={{ shrink: true }}\r\n              value={paramSerach}\r\n              onChange={(e) => setParamSerach(e.target.value)}\r\n              onKeyUp={(e) => e.key === \"Enter\" && handleSearch()}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <Box mr={1}>\r\n                      <Fab color=\"primary\" size=\"small\" onClick={handleSearch}>\r\n                        <SearchIcon />\r\n                      </Fab>\r\n                    </Box>\r\n                    <Fab color=\"secondary\" size=\"small\" onClick={resetSearch}>\r\n                      <CloseIcon />\r\n                    </Fab>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Box>\r\n          <Spin spinning={loading}>\r\n            {data.length > 0 ? (\r\n              <Grid container spacing={2}>\r\n                {data.map((el, index) => (\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={index}>\r\n                    <Card align=\"center\" elevation={5}>\r\n                      <CardContent>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                          <b>H.C. N° {el.history_code}</b>\r\n                        </Typography>\r\n                        <FormHelperText style={{ textAlign: \"center\" }}>\r\n                          {el.patient.f_name.toUpperCase()}{\" \"}\r\n                          {el.patient.l_name.toUpperCase()}\r\n                        </FormHelperText>\r\n                        <FormHelperText style={{ textAlign: \"center\" }}>\r\n                          {el.patient.t_doc} {el.patient.n_doc}\r\n                        </FormHelperText>\r\n                      </CardContent>\r\n                      <CardActions>\r\n                        <Button\r\n                          size=\"small\"\r\n                          variant=\"contained\"\r\n                          fullWidth\r\n                          onClick={() => setViewAtt({ data: el, open: true })}\r\n                        >\r\n                          ATENCIONES\r\n                        </Button>\r\n                      </CardActions>\r\n                    </Card>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            ) : (\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} />\r\n                {loading ? (\r\n                  [1, 2, 3, 4, 5, 6, 7, 8].map((el, index) => (\r\n                    <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={index}>\r\n                      <Skeleton\r\n                        width=\"100%\"\r\n                        height={100}\r\n                        variant=\"rectangular\"\r\n                      />\r\n                    </Grid>\r\n                  ))\r\n                ) : (\r\n                  <Grid item xs={12}>\r\n                    <Typography align=\"center\" variant=\"body2\">\r\n                      AQUÍ SE MOSTRARÁN LAS HISTORIAS CLÍNICAS\r\n                    </Typography>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            )}\r\n          </Spin>\r\n          {modalH && (\r\n            <ModalHistories\r\n              open={modalH}\r\n              setOpen={setModalH}\r\n              setLoading={setLoading}\r\n              loading={loading}\r\n              reloadFunction={obtainData}\r\n              correlative={(data.length + 1).toString()}\r\n            />\r\n          )}\r\n        </Page>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Equipment;\r\n"],"names":["props","title","helper","itemComponent","children","rest","p","container","justifyContent","item","gutterBottom","component","toUpperCase","variant","Option","Select","data","value","onChange","Fragment","size","style","width","showSearch","filterOption","inputValue","option","toLowerCase","normalize","replace","includes","map","el","index","_id","start","end","f_name","l_name","rol","dni","open","setOpen","setLoading","loading","reloadFunction","formatCRTV","correlative","padStart","useState","patient","setPatient","patients","setPatients","useEffect","obtainData","getPatients","res","notification","message","description","sendRegister","user","items","history_code","company","postHistories","Dialog","fullWidth","maxWidth","DialogTitle","Typography","align","spinning","DialogContent","Grid","spacing","xs","md","alignItems","TextField","label","disabled","defaultValue","SelectUsers","DialogActions","Button","color","onClick","setDetails","setRecipe","React","TableContainer","Table","TableHead","TableRow","TableCell","length","TableBody","row","IconButton","KeyboardArrowUp","KeyboardArrowDown","moment","date","format","quote","urgency","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Row","setData","getRecipes","emision_date","expiration_date","indicaciones","receta","attention","setQuote","quotes","setQuotes","getQuoteByUser","history","postAttentions","sm","lg","FormControl","InputLabel","e","target","MenuItem","FormHelperText","marginLeft","margin","type","useForm","register","handleSubmit","errors","formState","dm","ult_viaje","hta","fimicos","lueticos","cancer","otros","patologia","menarca","rc","upm","menopausia","anticonceptivo","irs","n_parejas","paridad","tipo_parto","pap","colposcopia","mamografia","eco_mama","bi_rads","alergias","antecedentes_quirugicos","motivo","enfermedad_actual","pa","tiempo_enfermedad","fc","fr","sat","t","diuresis","agp","peso","talla","imc","tcsc","piel","ar","cv","neurologico","urinario","mamas","peritoneales","rha","dolor_localizado","masas","c_vaginal","cervix","oce","mov","lesiones","tamano","movil","consistencia","dolor","superficie","anexos","diagnosticos","plantratamiento_result","recomendaciones_result","alta_result","quoteId","status","mnps","setMnps","ptnls","setPtnls","oceState","setOceState","movState","setMovState","movilState","setMovilState","dolorState","setDolorState","updateRegister","putAttentions","fullScreen","onSubmit","autoComplete","Title","Content","Text","t_doc","n_doc","date_born","email","ocupacion","phone","sex","ubigeo","address","district","xl","InputLabelProps","shrink","error","Boolean","required","multiline","minRows","Divider","postRecipes","inputProps","min","hisData","setView","modal","setModal","details","recipe","getAttentions","reverse","Page","ModalAttentionDetail","modalH","setModalH","paramSerach","setParamSerach","viewAtt","setViewAtt","dataBase","setDataBase","getHistories","resetSearch","handleSearch","txt","refactor","filter","Attention","Box","pt","pb","placeholder","onKeyUp","key","InputProps","endAdornment","InputAdornment","position","mr","Fab","Search","Close","Card","elevation","CardContent","textAlign","CardActions","Skeleton","height","ModalHistories","toString"],"sourceRoot":""}